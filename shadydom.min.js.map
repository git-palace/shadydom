{"version":3,"sources":[" [synthetic:base] "," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:util/polyfill] "," [synthetic:es6/object/setprototypeof] "," [synthetic:es6/array/from] "," [synthetic:util/owns] "," [synthetic:es6/weakmap] "," [synthetic:es6/map] "," [synthetic:es6/set] ","src/array-splice.js","src/utils.js","src/tree.js","src/distributor.js","src/innerHTML.js","src/element-mixin.js","src/shady.js","src/patch.js","src/event-mixin.js","src/env.js"],"names":["newSplice$$module$$src$array_splice","newSplice","index","removed","addedCount","EDIT_LEAVE","EDIT_UPDATE","EDIT_ADD","EDIT_DELETE","ArraySplice","calcEditDistances","current","currentStart","currentEnd","old","oldStart","oldEnd","rowCount","columnCount","distances","Array","i","j","equals","north","west","spliceOperationsFromEditDistances","length","edits","push","northWest","min","reverse","calcSplices","prefixCount","suffixCount","minLength","Math","sharedPrefix","sharedSuffix","splice","ops","undefined","splices","oldIndex","searchLength","index1","index2","count","calculateSplices","previous","currentValue","previousValue","calculateSplices$$module$$src$array_splice","module$$src$array_splice","settings","window","ShadyDOM","hasNativeShadowDOM","attachShadow","Element","prototype","getRootNode","Node","inUse","force","isShadyRoot$$module$$src$utils","isShadyRoot","obj","__localName","p","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","matchesSelector$$module$$src$utils","element","selector","call","copyOwnProperty$$module$$src$utils","copyOwnProperty","name","source","target","pd","Object","getOwnPropertyDescriptor","defineProperty","extend$$module$$src$utils","extend","n$","getOwnPropertyNames","n","extendAll$$module$$src$utils","extendAll","sources","mixin$$module$$src$utils","mixin","patchPrototype$$module$$src$utils","patchPrototype","proto","getPrototypeOf","hasOwnProperty","patchProto","create","__sourceProto","__patchProto","setPrototypeOf","unpatchPrototype$$module$$src$utils","unpatchPrototype","common","module$$src$utils","nativeInsertBefore","insertBefore","nativeAppendChild","appendChild","nativeRemoveChild","removeChild","tree","arrayCopyChildNodes","parent","copy","firstChild","nextSibling","arrayCopyChildren","firstElementChild","nextElementSibling","arrayCopy","a$","l","saveChildNodes","node","Logical","Composed","hasParentNode","saveComposedData","__dom","parentNode","hasChildNodes","childNodes","getChildNodes","_getChildNodes","getFirstChild","getNextSibling","getParentNode","getLastChild","lastChild","getPreviousSibling","previousSibling","getFirstElementChild","_getFirstElementChild","nodeType","ELEMENT_NODE","getLastElementChild","_getLastElementChild","getNextElementSibling","_getNextElementSibling","getPreviousElementSibling","_getPreviousElementSibling","c$","patchNode","recordInsertBefore","container","ref_node","DOCUMENT_FRAGMENT_NODE","_linkNode","recordRemoveChild","$parentNode","$childNodes","__patched","$firstChild","$nextSibling","getComposedChildNodes","$lastChild","$previousSibling","lastElementChild","previousElementSibling","clearChildNodes","c","saveParentNode","newChild","refChild","_addChild","currentParent","_removeChild","isFrag","oldParent","descriptors","getNativeProperty$$module$$src$tree","getNativeProperty","property","HTMLElement","get","assertNative$$module$$src$tree","assertNative","tracked","native","console","warn","module$$src$tree","$jscompDefaultExport","constructor","root","insertionPointTag","getInsertionPoints","querySelectorAll","hasInsertionPoint","_insertionPoints","isInsertionPoint","localName","distribute","distributePool","collectPool","host","pool","dirtyRoots","p$","distributeInsertionPoint","shadyRoot","_assignedSlot","insertionPoint","prevAssignedNodes","_assignedNodes","clearAssignedSlots","needsSlotChange","anyDistributed","matchesInsertionPoint","__prevAssignedSlot","distributeNodeInto","children","setDistributedNodesOnInsertionPoint","_fireSlotChange","slot","savePrevious","slotName","getAttribute","trim","child","_distributedNodes","d$","dispatchEvent","Event","isFinalDestination","module$$src$distributor","default","escapeAttrRegExp","escapeDataRegExp","escapeReplace$$module$$src$innerHTML","escapeReplace","escapeAttr$$module$$src$innerHTML","escapeAttr","s","replace","escapeData$$module$$src$innerHTML","escapeData","makeSet$$module$$src$innerHTML","makeSet","arr","set","voidElements","plaintextParents","getOuterHTML$$module$$src$innerHTML","getOuterHTML","composed","tagName","attrs","attributes","attr","value","getInnerHTML","TEXT_NODE","data","COMMENT_NODE","error","Error","getInnerHTML$$module$$src$innerHTML","content","module$$src$innerHTML","mixinImpl","addNode","ownerRoot","ownerShadyRootForNode","__noInsertionPoint","_skipUpdateInsertionPoints","_maybeAddInsertionPoint","ipAdded","_addedNode","handled","_maybeDistribute","removeNode","logicalParent","distributed","maybeDistributeParent","_removeDistributedChildren","getInsertionPointTag","update","_removeOwnerShadyRoot","_removedNode","_scheduleObserver","observer","schedule","removeNodeFromParent","_hasCachedOwnerRoot","__ownerShadyRoot","document","contains","fragContent","querySelector","wrappedContent","hasContent","needsDist","_nodeNeedsDistribution","added","np","na","hostNeedsDist","ip$","_contains","dc$","assignedNodes","flatten","firstComposedNode","clearNode","maybeDistributeAttributeChange","query","matcher","halter","list","_queryElements","elements","_queryElement","result","activeElementForNode","active","activeElement","activeRoot","nativeCloneNode","cloneNode","nativeImportNode","Document","importNode","nativeSetAttribute","setAttribute","nativeRemoveAttribute","removeAttribute","NodeMixin","defineProperties","parentElement","configurable","assignedSlot","FragmentMixin","replaceChild","deep","nc","externalNode","doc","ownerDocument","isArray","filter","textContent","tc","cn","join","text","createTextNode","innerHTML","d","createElement","ElementMixin","options","shadowRoot","activeElementDescriptor","ActiveElementMixin","UnderActiveElementMixin","_activeElement","Mixins","Fragment","getRootNode$$module$$src$element_mixin","filterMutations$$module$$src$element_mixin","filterMutations","mutations","targetRootNode","mutation","mutationInScope","addedNodes","nodes","from","AsyncObserver","_scheduled","callbacks","Set","Promise","resolve","then","flush","cb","observeChildren","observeChildren$$module$$src$element_mixin","callback","add","unobserveChildren","unobserveChildren$$module$$src$element_mixin","callbackHandle","delete","size","module$$src$element_mixin","ShadyRoot","frag","createDocumentFragment","__proto__","ShadyFragmentMixin","_init","ShadyMixin","_clean","_hasRendered","_distributor","distributionRoot","_findDistributionRoot","enqueue","render","_elementNeedsDistribution","updateInsertionPoints","compose","forceRender","i$","__insertionPoints","insertionPoints","_composeTree","_updateChildNodes","_composeNode","distributedNodes","distributedNode","next","DocumentFragment","customElements","CustomElements","flushList","scheduled","enqueue$$module$$src$shady","flushImpl","flushImpl$$module$$src$shady","shift","takeRecords","module$$src$shady","patchedCount","log","patchImpl","canPatchNode","head","documentElement","hasPrototypeDescriptors","patch","mixinForObject","mixinForNode","DOCUMENT_NODE","unpatch","patchNode$$module$$src$patch","isNodePatched","unpatchNode$$module$$src$patch","unpatchNode","isNodePatched$$module$$src$patch","module$$src$patch","origAddEventListener","addEventListener","origRemoveEventListener","removeEventListener","alwaysComposed","blur","focus","focusin","focusout","click","dblclick","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","wheel","beforeinput","input","keydown","keyup","compositionstart","compositionupdate","compositionend","touchstart","touchend","touchmove","touchcancel","pointerover","pointerenter","pointerdown","pointermove","pointerup","pointercancel","pointerout","pointerleave","gotpointercapture","lostpointercapture","dragstart","drag","dragenter","dragleave","dragover","drop","dragend","DOMActivate","DOMFocusIn","DOMFocusOut","keypress","pathComposer$$module$$src$event_mixin","pathComposer","startNode","composedPath","startRoot","retarget$$module$$src$event_mixin","retarget","refNode","path","refNodePath","ancestor","lastRoot","rootIdx","indexOf","EventMixin","isTrusted","__composed","type","__composedPath","__target","currentTarget","relatedTarget","__relatedTarget","__relatedTargetComposedPath","stopPropagation","__propagationStopped","stopImmediatePropagation","__immediatePropagationStopped","mixinComposedFlag$$module$$src$event_mixin","mixinComposedFlag","Base","klazz","event","nonBubblingEventsToRetarget","fireHandlers$$module$$src$event_mixin","fireHandlers","phase","hs","__handlers","fn","retargetNonBubblingEvent$$module$$src$event_mixin","retargetNonBubblingEvent","e","BUBBLING_PHASE","shouldCapture$$module$$src$event_mixin","shouldCapture","optionsOrCapture","capture","addEventListener$$module$$src$event_mixin","__eventListenerCount","wrappedFn","eventPhase","__eventWrapper","bubble","removeEventListener$$module$$src$event_mixin","wrapper","idx","ev","OriginalEvent","PatchedEvent","PatchedCustomEvent","CustomEvent","PatchedMouseEvent","MouseEvent","module$$src$event_mixin","isPatched","createRootAndEnsurePatched","Element.prototype.attachShadow","Node.prototype.getRootNode"],"mappings":"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","file":"shadydom.min.js","sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,"/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\nlet ArraySplice = {\n\n  // Note: This function is *based* on the computation of the Levenshtein\n  // \"edit\" distance. The one change is that \"updates\" are treated as two\n  // edits - not one. With Array splices, an update is really a delete\n  // followed by an add. By retaining this, we optimize for \"keeping\" the\n  // maximum array items in the original array. For example:\n  //\n  //   'xxxx123' -> '123yyyy'\n  //\n  // With 1-edit updates, the shortest path would be just to update all seven\n  // characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n  // leaves the substring '123' intact.\n  calcEditDistances(current, currentStart, currentEnd,\n                              old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    let rowCount = oldEnd - oldStart + 1;\n    let columnCount = currentEnd - currentStart + 1;\n    let distances = new Array(rowCount);\n\n    // \"Addition\" rows. Initialize null column.\n    for (let i = 0; i < rowCount; i++) {\n      distances[i] = new Array(columnCount);\n      distances[i][0] = i;\n    }\n\n    // Initialize null row\n    for (let j = 0; j < columnCount; j++)\n      distances[0][j] = j;\n\n    for (let i = 1; i < rowCount; i++) {\n      for (let j = 1; j < columnCount; j++) {\n        if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n          distances[i][j] = distances[i - 1][j - 1];\n        else {\n          let north = distances[i - 1][j] + 1;\n          let west = distances[i][j - 1] + 1;\n          distances[i][j] = north < west ? north : west;\n        }\n      }\n    }\n\n    return distances;\n  },\n\n  // This starts at the final weight, and walks \"backward\" by finding\n  // the minimum previous weight recursively until the origin of the weight\n  // matrix.\n  spliceOperationsFromEditDistances(distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    let edits = [];\n    while (i > 0 || j > 0) {\n      if (i == 0) {\n        edits.push(EDIT_ADD);\n        j--;\n        continue;\n      }\n      if (j == 0) {\n        edits.push(EDIT_DELETE);\n        i--;\n        continue;\n      }\n      let northWest = distances[i - 1][j - 1];\n      let west = distances[i - 1][j];\n      let north = distances[i][j - 1];\n\n      let min;\n      if (west < north)\n        min = west < northWest ? west : northWest;\n      else\n        min = north < northWest ? north : northWest;\n\n      if (min == northWest) {\n        if (northWest == current) {\n          edits.push(EDIT_LEAVE);\n        } else {\n          edits.push(EDIT_UPDATE);\n          current = northWest;\n        }\n        i--;\n        j--;\n      } else if (min == west) {\n        edits.push(EDIT_DELETE);\n        i--;\n        current = west;\n      } else {\n        edits.push(EDIT_ADD);\n        j--;\n        current = north;\n      }\n    }\n\n    edits.reverse();\n    return edits;\n  },\n\n  /**\n   * Splice Projection functions:\n   *\n   * A splice map is a representation of how a previous array of items\n   * was transformed into a new array of items. Conceptually it is a list of\n   * tuples of\n   *\n   *   <index, removed, addedCount>\n   *\n   * which are kept in ascending index order of. The tuple represents that at\n   * the |index|, |removed| sequence of items were removed, and counting forward\n   * from |index|, |addedCount| items were added.\n   */\n\n  /**\n   * Lacking individual splice mutation information, the minimal set of\n   * splices can be synthesized given the previous state and final state of an\n   * array. The basic approach is to calculate the edit distance matrix and\n   * choose the shortest path through it.\n   *\n   * Complexity: O(l * p)\n   *   l: The length of the current array\n   *   p: The length of the old array\n   */\n  calcSplices(current, currentStart, currentEnd,\n                        old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n    let splice;\n\n    let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart == 0 && oldStart == 0)\n      prefixCount = this.sharedPrefix(current, old, minLength);\n\n    if (currentEnd == current.length && oldEnd == old.length)\n      suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);\n\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n\n    if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n      return [];\n\n    if (currentStart == currentEnd) {\n      splice = newSplice(currentStart, [], 0);\n      while (oldStart < oldEnd)\n        splice.removed.push(old[oldStart++]);\n\n      return [ splice ];\n    } else if (oldStart == oldEnd)\n      return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n    let ops = this.spliceOperationsFromEditDistances(\n        this.calcEditDistances(current, currentStart, currentEnd,\n                               old, oldStart, oldEnd));\n\n    splice = undefined;\n    let splices = [];\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for (let i = 0; i < ops.length; i++) {\n      switch(ops[i]) {\n        case EDIT_LEAVE:\n          if (splice) {\n            splices.push(splice);\n            splice = undefined;\n          }\n\n          index++;\n          oldIndex++;\n          break;\n        case EDIT_UPDATE:\n          if (!splice)\n            splice = newSplice(index, [], 0);\n\n          splice.addedCount++;\n          index++;\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n        case EDIT_ADD:\n          if (!splice)\n            splice = newSplice(index, [], 0);\n\n          splice.addedCount++;\n          index++;\n          break;\n        case EDIT_DELETE:\n          if (!splice)\n            splice = newSplice(index, [], 0);\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n      }\n    }\n\n    if (splice) {\n      splices.push(splice);\n    }\n    return splices;\n  },\n\n  sharedPrefix(current, old, searchLength) {\n    for (let i = 0; i < searchLength; i++)\n      if (!this.equals(current[i], old[i]))\n        return i;\n    return searchLength;\n  },\n\n  sharedSuffix(current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while (count < searchLength && this.equals(current[--index1], old[--index2]))\n      count++;\n\n    return count;\n  },\n\n  calculateSplices(current, previous) {\n    return this.calcSplices(current, 0, current.length, previous, 0,\n                            previous.length);\n  },\n\n  equals(currentValue, previousValue) {\n    return currentValue === previousValue;\n  }\n\n};\n\nexport let calculateSplices = (current, previous) =>\n  ArraySplice.calculateSplices(current, previous);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let settings = window.ShadyDOM || {};\n\nsettings.hasNativeShadowDOM = Boolean(Element.prototype.attachShadow && Node.prototype.getRootNode);\n\nsettings.inUse = settings.force || !settings.hasNativeShadowDOM;\n\nexport function isShadyRoot(obj) {\n  return Boolean(obj.__localName === 'ShadyRoot');\n}\n\nlet p = Element.prototype;\nlet matches = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nexport function matchesSelector(element, selector) {\n  return matches.call(element, selector);\n}\n\nfunction copyOwnProperty(name, source, target) {\n  let pd = Object.getOwnPropertyDescriptor(source, name);\n  if (pd) {\n    Object.defineProperty(target, name, pd);\n  }\n}\n\nexport function extend(target, source) {\n  if (target && source) {\n    let n$ = Object.getOwnPropertyNames(source);\n    for (let i=0, n; (i<n$.length) && (n=n$[i]); i++) {\n      copyOwnProperty(n, source, target);\n    }\n  }\n  return target || source;\n}\n\nexport function extendAll(target, ...sources) {\n  for (let i=0; i < sources.length; i++) {\n    extend(target, sources[i]);\n  }\n  return target;\n}\n\nexport function mixin(target, source) {\n  for (var i in source) {\n    target[i] = source[i];\n  }\n  return target;\n}\n\nexport function patchPrototype(obj, mixin) {\n  let proto = Object.getPrototypeOf(obj);\n  if (!proto.hasOwnProperty('__patchProto')) {\n    let patchProto = Object.create(proto);\n    patchProto.__sourceProto = proto;\n    extend(patchProto, mixin);\n    proto.__patchProto = patchProto;\n  }\n  Object.setPrototypeOf(obj, proto.__patchProto);\n}\n\nexport function unpatchPrototype(obj) {\n  if (obj.__sourceProto) {\n    Object.setPrototypeOf(obj, obj.__sourceProto);\n  }\n}\n\nexport let common = {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n// TODO(sorvell): circular (patch loads tree and tree loads patch)\n// for now this is stuck on `utils`\n//import {patchNode} from './patch'\nimport * as utils from './utils'\n\n// native add/remove\nlet nativeInsertBefore = Element.prototype.insertBefore;\nlet nativeAppendChild = Element.prototype.appendChild;\nlet nativeRemoveChild = Element.prototype.removeChild;\n\n/**\n * `tree` is a dom manipulation library used by ShadyDom to\n * manipulate composed and logical trees.\n */\nexport let tree = {\n\n  // sad but faster than slice...\n  arrayCopyChildNodes(parent) {\n    let copy=[], i=0;\n    for (let n=parent.firstChild; n; n=n.nextSibling) {\n      copy[i++] = n;\n    }\n    return copy;\n  },\n\n  arrayCopyChildren(parent) {\n    let copy=[], i=0;\n    for (let n=parent.firstElementChild; n; n=n.nextElementSibling) {\n      copy[i++] = n;\n    }\n    return copy;\n  },\n\n  arrayCopy(a$) {\n    let l = a$.length;\n    let copy = new Array(l);\n    for (let i=0; i < l; i++) {\n      copy[i] = a$[i];\n    }\n    return copy;\n  },\n\n  saveChildNodes(node) {\n    tree.Logical.saveChildNodes(node);\n    if (!tree.Composed.hasParentNode(node)) {\n      tree.Composed.saveComposedData(node);\n      //tree.Composed.saveParentNode(node);\n    }\n    tree.Composed.saveChildNodes(node);\n  }\n\n};\n\ntree.Logical = {\n\n  hasParentNode(node) {\n    return Boolean(node.__dom && node.__dom.parentNode);\n  },\n\n  hasChildNodes(node) {\n    return Boolean(node.__dom && node.__dom.childNodes !== undefined);\n  },\n\n  getChildNodes(node) {\n    // note: we're distinguishing here between undefined and false-y:\n    // hasChildNodes uses undefined check to see if this element has logical\n    // children; the false-y check indicates whether or not we should rebuild\n    // the cached childNodes array.\n    return this.hasChildNodes(node) ? this._getChildNodes(node) :\n      tree.Composed.getChildNodes(node);\n  },\n\n  _getChildNodes(node) {\n    if (!node.__dom.childNodes) {\n      node.__dom.childNodes = [];\n      for (let n=this.getFirstChild(node); n; n=this.getNextSibling(n)) {\n        node.__dom.childNodes.push(n);\n      }\n    }\n    return node.__dom.childNodes;\n  },\n\n  // NOTE: __dom can be created under 2 conditions: (1) an element has a\n  // logical tree, or (2) an element is in a logical tree. In case (1), the\n  // element will store firstChild/lastChild, and in case (2), the element\n  // will store parentNode, nextSibling, previousSibling. This means that\n  // the mere existence of __dom is not enough to know if the requested\n  // logical data is available and instead we do an explicit undefined check.\n  getParentNode(node) {\n    return node.__dom && node.__dom.parentNode !== undefined ?\n      node.__dom.parentNode : tree.Composed.getParentNode(node);\n  },\n\n  getFirstChild(node) {\n    return node.__dom && node.__dom.firstChild !== undefined ?\n      node.__dom.firstChild : tree.Composed.getFirstChild(node);\n  },\n\n  getLastChild(node) {\n    return node.__dom && node.__dom.lastChild  !== undefined ?\n      node.__dom.lastChild : tree.Composed.getLastChild(node);\n  },\n\n  getNextSibling(node) {\n    return node.__dom && node.__dom.nextSibling  !== undefined ?\n      node.__dom.nextSibling : tree.Composed.getNextSibling(node);\n  },\n\n  getPreviousSibling(node) {\n    return node.__dom && node.__dom.previousSibling  !== undefined ?\n      node.__dom.previousSibling : tree.Composed.getPreviousSibling(node);\n  },\n\n  getFirstElementChild(node) {\n    return node.__dom && node.__dom.firstChild !== undefined ?\n      this._getFirstElementChild(node) :\n      tree.Composed.getFirstElementChild(node);\n  },\n\n  _getFirstElementChild(node) {\n    let n = node.__dom.firstChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.nextSibling;\n    }\n    return n;\n  },\n\n  getLastElementChild(node) {\n    return node.__dom && node.__dom.lastChild !== undefined ?\n      this._getLastElementChild(node) :\n      tree.Composed.getLastElementChild(node);\n  },\n\n  _getLastElementChild(node) {\n    let n = node.__dom.lastChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.previousSibling;\n    }\n    return n;\n  },\n\n  getNextElementSibling(node) {\n    return node.__dom && node.__dom.nextSibling !== undefined ?\n      this._getNextElementSibling(node) :\n      tree.Composed.getNextElementSibling(node);\n  },\n\n  _getNextElementSibling(node) {\n    let n = node.__dom.nextSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getNextSibling(n);\n    }\n    return n;\n  },\n\n  getPreviousElementSibling(node) {\n    return node.__dom && node.__dom.previousSibling !== undefined ?\n      this._getPreviousElementSibling(node) :\n      tree.Composed.getPreviousElementSibling(node);\n  },\n\n  _getPreviousElementSibling(node) {\n    let n = node.__dom.previousSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getPreviousSibling(n);\n    }\n    return n;\n  },\n\n  // Capture the list of light children. It's important to do this before we\n  // start transforming the DOM into \"rendered\" state.\n  // Children may be added to this list dynamically. It will be treated as the\n  // source of truth for the light children of the element. This element's\n  // actual children will be treated as the rendered state once this function\n  // has been called.\n  saveChildNodes(node) {\n    if (!this.hasChildNodes(node)) {\n      node.__dom = node.__dom || {};\n      node.__dom.firstChild = node.firstChild;\n      node.__dom.lastChild = node.lastChild;\n      let c$ = node.__dom.childNodes = tree.arrayCopyChildNodes(node);\n      for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n        n.__dom = n.__dom || {};\n        n.__dom.parentNode = node;\n        n.__dom.nextSibling = c$[i+1] || null;\n        n.__dom.previousSibling = c$[i-1] || null;\n        utils.common.patchNode(n);\n      }\n    }\n  },\n\n  // TODO(sorvell): may need to patch saveChildNodes iff the tree has\n  // already been distributed.\n  // NOTE: ensure `node` is patched...\n  recordInsertBefore(node, container, ref_node) {\n    container.__dom.childNodes = null;\n    // handle document fragments\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      let c$ = tree.arrayCopyChildNodes(node);\n      for (let i=0; i < c$.length; i++) {\n        this._linkNode(c$[i], container, ref_node);\n      }\n      // cleanup logical dom in doc fragment.\n      node.__dom = node.__dom || {};\n      node.__dom.firstChild = node.__dom.lastChild = undefined;\n      node.__dom.childNodes = null;\n    } else {\n      this._linkNode(node, container, ref_node);\n    }\n  },\n\n  _linkNode(node, container, ref_node) {\n    utils.common.patchNode(node);\n    ref_node = ref_node || null;\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (ref_node) {\n      ref_node.__dom = ref_node.__dom || {};\n    }\n    // update ref_node.previousSibling <-> node\n    node.__dom.previousSibling = ref_node ? ref_node.__dom.previousSibling :\n      container.__dom.lastChild;\n    if (node.__dom.previousSibling) {\n      node.__dom.previousSibling.__dom.nextSibling = node;\n    }\n    // update node <-> ref_node\n    node.__dom.nextSibling = ref_node;\n    if (node.__dom.nextSibling) {\n      node.__dom.nextSibling.__dom.previousSibling = node;\n    }\n    // update node <-> container\n    node.__dom.parentNode = container;\n    if (ref_node) {\n      if (ref_node === container.__dom.firstChild) {\n        container.__dom.firstChild = node;\n      }\n    } else {\n      container.__dom.lastChild = node;\n      if (!container.__dom.firstChild) {\n        container.__dom.firstChild = node;\n      }\n    }\n    // remove caching of childNodes\n    container.__dom.childNodes = null;\n  },\n\n  recordRemoveChild(node, container) {\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (node === container.__dom.firstChild) {\n      container.__dom.firstChild = node.__dom.nextSibling;\n    }\n    if (node === container.__dom.lastChild) {\n      container.__dom.lastChild = node.__dom.previousSibling;\n    }\n    let p = node.__dom.previousSibling;\n    let n = node.__dom.nextSibling;\n    if (p) {\n      p.__dom = p.__dom || {};\n      p.__dom.nextSibling = n;\n    }\n    if (n) {\n      n.__dom = n.__dom || {};\n      n.__dom.previousSibling = p;\n    }\n    // When an element is removed, logical data is no longer tracked.\n    // Explicitly set `undefined` here to indicate this. This is disginguished\n    // from `null` which is set if info is null.\n    node.__dom.parentNode = node.__dom.previousSibling =\n      node.__dom.nextSibling = undefined;\n    // remove caching of childNodes\n    container.__dom.childNodes = null;\n  }\n\n}\n\n\n// TODO(sorvell): composed tree manipulation is made available\n// (1) to maninpulate the composed tree, and (2) to track changes\n// to the tree for optional patching pluggability.\ntree.Composed = {\n\n  hasParentNode(node) {\n    return Boolean(node.__dom && node.__dom.$parentNode !== undefined);\n  },\n\n  hasChildNodes(node) {\n    return Boolean(node.__dom && node.__dom.$childNodes !== undefined);\n  },\n\n  getChildNodes(node) {\n    return this.hasChildNodes(node) ? this._getChildNodes(node) :\n      (!node.__patched && tree.arrayCopy(node.childNodes));\n  },\n\n  _getChildNodes(node) {\n    if (!node.__dom.$childNodes) {\n      node.__dom.$childNodes = [];\n      for (let n=node.__dom.$firstChild; n; n=n.__dom.$nextSibling) {\n        node.__dom.$childNodes.push(n);\n      }\n    }\n    return node.__dom.$childNodes;\n  },\n\n  getComposedChildNodes(node) {\n    return node.__dom.$childNodes;\n  },\n\n  getParentNode(node) {\n    return this.hasParentNode(node) ? node.__dom.$parentNode :\n      (!node.__patched && node.parentNode);\n  },\n\n  getFirstChild(node) {\n    return node.__patched ? node.__dom.$firstChild : node.firstChild;\n  },\n\n  getLastChild(node) {\n    return node.__patched ? node.__dom.$lastChild : node.lastChild;\n  },\n\n  getNextSibling(node) {\n    return node.__patched ? node.__dom.$nextSibling : node.nextSibling;\n  },\n\n  getPreviousSibling(node) {\n    return node.__patched ? node.__dom.$previousSibling : node.previousSibling;\n  },\n\n  getFirstElementChild(node) {\n    return node.__patched ? this._getFirstElementChild(node) :\n      node.firstElementChild;\n  },\n\n  _getFirstElementChild(node) {\n    let n = node.__dom.$firstChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.$nextSibling;\n    }\n    return n;\n  },\n\n  getLastElementChild(node) {\n    return node.__patched ? this._getLastElementChild(node) :\n      node.lastElementChild;\n  },\n\n  _getLastElementChild(node) {\n    let n = node.__dom.$lastChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.$previousSibling;\n    }\n    return n;\n  },\n\n  getNextElementSibling(node) {\n    return node.__patched ? this._getNextElementSibling(node) :\n      node.nextElementSibling;\n  },\n\n  _getNextElementSibling(node) {\n    let n = node.__dom.$nextSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getNextSibling(n);\n    }\n    return n;\n  },\n\n  getPreviousElementSibling(node) {\n    return node.__patched ? this._getPreviousElementSibling(node) :\n      node.previousElementSibling;\n  },\n\n  _getPreviousElementSibling(node) {\n    let n = node.__dom.$previousSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getPreviousSibling(n);\n    }\n    return n;\n  },\n\n  saveChildNodes(node) {\n    if (!this.hasChildNodes(node)) {\n      node.__dom = node.__dom || {};\n      node.__dom.$firstChild = node.firstChild;\n      node.__dom.$lastChild = node.lastChild;\n      let c$ = node.__dom.$childNodes = tree.arrayCopyChildNodes(node);\n      for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n        this.saveComposedData(n);\n      }\n    }\n  },\n\n  saveComposedData(node) {\n    node.__dom = node.__dom || {};\n    if (node.__dom.$parentNode === undefined) {\n      node.__dom.$parentNode = node.parentNode;\n    }\n    if (node.__dom.$nextSibling === undefined) {\n      node.__dom.$nextSibling = node.nextSibling;\n    }\n    if (node.__dom.$previousSibling === undefined) {\n      node.__dom.$previousSibling = node.previousSibling;\n    }\n  },\n\n  recordInsertBefore(node, container, ref_node) {\n    container.__dom.$childNodes = null;\n    // handle document fragments\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      // TODO(sorvell): remember this for patching:\n      // the act of setting this info can affect patched nodes\n      // getters; therefore capture childNodes before patching.\n      for (let n=this.getFirstChild(node); n; n=this.getNextSibling(n)) {\n        this._linkNode(n, container, ref_node);\n      }\n    } else {\n      this._linkNode(node, container, ref_node);\n    }\n  },\n\n  _linkNode(node, container, ref_node) {\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (ref_node) {\n      ref_node.__dom = ref_node.__dom || {};\n    }\n    // update ref_node.previousSibling <-> node\n    node.__dom.$previousSibling = ref_node ? ref_node.__dom.$previousSibling :\n      container.__dom.$lastChild;\n    if (node.__dom.$previousSibling) {\n      node.__dom.$previousSibling.__dom.$nextSibling = node;\n    }\n    // update node <-> ref_node\n    node.__dom.$nextSibling = ref_node;\n    if (node.__dom.$nextSibling) {\n      node.__dom.$nextSibling.__dom.$previousSibling = node;\n    }\n    // update node <-> container\n    node.__dom.$parentNode = container;\n    if (ref_node) {\n      if (ref_node === container.__dom.$firstChild) {\n        container.__dom.$firstChild = node;\n      }\n    } else {\n      container.__dom.$lastChild = node;\n      if (!container.__dom.$firstChild) {\n        container.__dom.$firstChild = node;\n      }\n    }\n    // remove caching of childNodes\n    container.__dom.$childNodes = null;\n  },\n\n  recordRemoveChild(node, container) {\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (node === container.__dom.$firstChild) {\n      container.__dom.$firstChild = node.__dom.$nextSibling;\n    }\n    if (node === container.__dom.$lastChild) {\n      container.__dom.$lastChild = node.__dom.$previousSibling;\n    }\n    let p = node.__dom.$previousSibling;\n    let n = node.__dom.$nextSibling;\n    if (p) {\n      p.__dom = p.__dom || {};\n      p.__dom.$nextSibling = n;\n    }\n    if (n) {\n      n.__dom = n.__dom || {};\n      n.__dom.$previousSibling = p;\n    }\n    node.__dom.$parentNode = node.__dom.$previousSibling =\n      node.__dom.$nextSibling = null;\n    // remove caching of childNodes\n    container.__dom.$childNodes = null;\n  },\n\n  clearChildNodes(node) {\n    let c$ = this.getChildNodes(node);\n    for (let i=0, c; i < c$.length; i++) {\n      c = c$[i];\n      this.recordRemoveChild(c, node);\n      nativeRemoveChild.call(node, c)\n    }\n  },\n\n  saveParentNode(node) {\n    node.__dom = node.__dom || {};\n    node.__dom.$parentNode = node.parentNode;\n  },\n\n  insertBefore(parentNode, newChild, refChild) {\n    this.saveChildNodes(parentNode);\n    // remove from current location.\n    this._addChild(parentNode, newChild, refChild);\n    return nativeInsertBefore.call(parentNode, newChild, refChild || null);\n  },\n\n  appendChild(parentNode, newChild) {\n    this.saveChildNodes(parentNode);\n    this._addChild(parentNode, newChild);\n    return nativeAppendChild.call(parentNode, newChild);\n  },\n\n  removeChild(parentNode, node) {\n    let currentParent = this.getParentNode(node);\n    this.saveChildNodes(parentNode);\n    this._removeChild(parentNode, node);\n    if (currentParent === parentNode) {\n      return nativeRemoveChild.call(parentNode, node);\n    }\n  },\n\n  _addChild(parentNode, newChild, refChild) {\n    let isFrag = (newChild.nodeType === Node.DOCUMENT_FRAGMENT_NODE);\n    let oldParent = this.getParentNode(newChild);\n    if (oldParent) {\n      this._removeChild(oldParent, newChild);\n    }\n    if (isFrag) {\n      let c$ = this.getChildNodes(newChild);\n      for (let i=0; i < c$.length; i++) {\n        let c = c$[i];\n        // unlink document fragment children\n        this._removeChild(newChild, c);\n        this.recordInsertBefore(c, parentNode, refChild);\n      }\n    } else {\n      this.recordInsertBefore(newChild, parentNode, refChild);\n    }\n  },\n\n  _removeChild(parentNode, node) {\n    this.recordRemoveChild(node, parentNode);\n  }\n\n};\n\n// for testing...\nlet descriptors = {};\nexport function getNativeProperty(element, property) {\n  if (!descriptors[property]) {\n    descriptors[property] = Object.getOwnPropertyDescriptor(\n      HTMLElement.prototype, property) ||\n    Object.getOwnPropertyDescriptor(\n      Element.prototype, property) ||\n    Object.getOwnPropertyDescriptor(\n      Node.prototype, property);\n  }\n  return descriptors[property].get.call(element);\n}\n\n// for testing...\nfunction assertNative(element, property, tracked) {\n  let native = getNativeProperty(element, property);\n  if (native != tracked && element.__patched) {\n    window.console.warn('tracked', tracked, 'native', native);\n  }\n  return tracked;\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {tree} from './tree'\n\nexport default class {\n\n  constructor(root) {\n    this.root = root;\n    this.insertionPointTag = 'slot';\n  }\n\n  getInsertionPoints() {\n    return this.root.querySelectorAll(this.insertionPointTag);\n  }\n\n  hasInsertionPoint() {\n    return Boolean(this.root._insertionPoints &&\n      this.root._insertionPoints.length);\n  }\n\n  isInsertionPoint(node) {\n    return node.localName && node.localName == this.insertionPointTag;\n  }\n\n  distribute() {\n    if (this.hasInsertionPoint()) {\n      return this.distributePool(this.root, this.collectPool());\n    }\n    return [];\n  }\n\n  // Gather the pool of nodes that should be distributed. We will combine\n  // these with the \"content root\" to arrive at the composed tree.\n  collectPool() {\n    return tree.arrayCopy(\n      tree.Logical.getChildNodes(this.root.host));\n  }\n\n  // perform \"logical\" distribution; note, no actual dom is moved here,\n  // instead elements are distributed into storage\n  // array where applicable.\n  distributePool(node, pool) {\n    let dirtyRoots = [];\n    let p$ = this.root._insertionPoints;\n    for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n      this.distributeInsertionPoint(p, pool);\n      // provoke redistribution on insertion point parents\n      // must do this on all candidate hosts since distribution in this\n      // scope invalidates their distribution.\n      // only get logical parent.\n      let parent = tree.Logical.getParentNode(p);\n      if (parent && parent.shadyRoot &&\n          this.hasInsertionPoint(parent.shadyRoot)) {\n        dirtyRoots.push(parent.shadyRoot);\n      }\n    }\n    for (let i=0; i < pool.length; i++) {\n      if (pool[i]) {\n        pool[i]._assignedSlot = undefined;\n      }\n    }\n    return dirtyRoots;\n  }\n\n  distributeInsertionPoint(insertionPoint, pool) {\n    let prevAssignedNodes = insertionPoint._assignedNodes;\n    if (prevAssignedNodes) {\n      this.clearAssignedSlots(insertionPoint, true);\n    }\n    insertionPoint._assignedNodes = [];\n    let needsSlotChange = false;\n    // distribute nodes from the pool that this selector matches\n    let anyDistributed = false;\n    for (let i=0, l=pool.length, node; i < l; i++) {\n      node=pool[i];\n      // skip nodes that were already used\n      if (!node) {\n        continue;\n      }\n      // distribute this node if it matches\n      if (this.matchesInsertionPoint(node, insertionPoint)) {\n        if (node.__prevAssignedSlot != insertionPoint) {\n          needsSlotChange = true;\n        }\n        this.distributeNodeInto(node, insertionPoint)\n        // remove this node from the pool\n        pool[i] = undefined;\n        // since at least one node matched, we won't need fallback content\n        anyDistributed = true;\n      }\n    }\n    // Fallback content if nothing was distributed here\n    if (!anyDistributed) {\n      let children = tree.Logical.getChildNodes(insertionPoint);\n      for (let j = 0, node; j < children.length; j++) {\n        node = children[j];\n        if (node.__prevAssignedSlot != insertionPoint) {\n          needsSlotChange = true;\n        }\n        this.distributeNodeInto(node, insertionPoint);\n      }\n    }\n    // we're already dirty if a node was newly added to the slot\n    // and we're also dirty if the assigned count decreased.\n    if (prevAssignedNodes) {\n      for (let i=0; i < prevAssignedNodes.length; i++) {\n        prevAssignedNodes[i].__prevAssignedSlot = null;\n      }\n      if (insertionPoint._assignedNodes.length < prevAssignedNodes.length) {\n        needsSlotChange = true;\n      }\n    }\n    this.setDistributedNodesOnInsertionPoint(insertionPoint);\n    if (needsSlotChange) {\n      this._fireSlotChange(insertionPoint);\n    }\n  }\n\n  clearAssignedSlots(slot, savePrevious) {\n    let n$ = slot._assignedNodes;\n    if (n$) {\n      for (let i=0; i < n$.length; i++) {\n        let n = n$[i];\n        if (savePrevious) {\n          n.__prevAssignedSlot = n._assignedSlot;\n        }\n        // only clear if it was previously set to this slot;\n        // this helps ensure that if the node has otherwise been distributed\n        // ignore it.\n        if (n._assignedSlot === slot) {\n          n._assignedSlot = null;\n        }\n      }\n    }\n  }\n\n  matchesInsertionPoint(node, insertionPoint) {\n    let slotName = insertionPoint.getAttribute('name');\n    slotName = slotName ? slotName.trim() : '';\n    let slot = node.getAttribute && node.getAttribute('slot');\n    slot = slot ? slot.trim() : '';\n    return (slot == slotName);\n  }\n\n  distributeNodeInto(child, insertionPoint) {\n    insertionPoint._assignedNodes.push(child);\n    child._assignedSlot = insertionPoint;\n  }\n\n  setDistributedNodesOnInsertionPoint(insertionPoint) {\n    let n$ = insertionPoint._assignedNodes;\n    insertionPoint._distributedNodes = [];\n    for (let i=0, n; (i<n$.length) && (n=n$[i]) ; i++) {\n      if (this.isInsertionPoint(n)) {\n        let d$ = n._distributedNodes;\n        if (d$) {\n          for (let j=0; j < d$.length; j++) {\n            insertionPoint._distributedNodes.push(d$[j]);\n          }\n        }\n      } else {\n        insertionPoint._distributedNodes.push(n$[i]);\n      }\n    }\n  }\n\n  _fireSlotChange(insertionPoint) {\n    // NOTE: cannot bubble correctly here so not setting bubbles: true\n    // Safari tech preview does not bubble but chrome does\n    // Spec says it bubbles (https://dom.spec.whatwg.org/#mutation-observers)\n    insertionPoint.dispatchEvent(new Event('slotchange'));\n    if (insertionPoint._assignedSlot) {\n      this._fireSlotChange(insertionPoint._assignedSlot);\n    }\n  }\n\n  isFinalDestination(insertionPoint) {\n    return !(insertionPoint._assignedSlot);\n  }\n\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n// Cribbed from ShadowDOM polyfill\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/ShadowDOM/wrappers/HTMLElement.js#L28\n/////////////////////////////////////////////////////////////////////////////\n// innerHTML and outerHTML\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString\nlet escapeAttrRegExp = /[&\\u00A0\"]/g;\nlet escapeDataRegExp = /[&\\u00A0<>]/g;\n\nfunction escapeReplace(c) {\n  switch (c) {\n    case '&':\n      return '&amp;';\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '\"':\n      return '&quot;';\n    case '\\u00A0':\n      return '&nbsp;';\n  }\n}\n\nfunction escapeAttr(s) {\n  return s.replace(escapeAttrRegExp, escapeReplace);\n}\n\nfunction escapeData(s) {\n  return s.replace(escapeDataRegExp, escapeReplace);\n}\n\nfunction makeSet(arr) {\n  let set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n// http://www.whatwg.org/specs/web-apps/current-work/#void-elements\nlet voidElements = makeSet([\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]);\n\nlet plaintextParents = makeSet([\n  'style',\n  'script',\n  'xmp',\n  'iframe',\n  'noembed',\n  'noframes',\n  'plaintext',\n  'noscript'\n]);\n\nexport function getOuterHTML(node, parentNode, composed) {\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE: {\n      let tagName = node.localName;\n      let s = '<' + tagName;\n      let attrs = node.attributes;\n      for (let i = 0, attr; (attr = attrs[i]); i++) {\n        s += ' ' + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n      }\n      s += '>';\n      if (voidElements[tagName]) {\n        return s;\n      }\n      return s + getInnerHTML(node, composed) + '</' + tagName + '>';\n    }\n    case Node.TEXT_NODE: {\n      let data = node.data;\n      if (parentNode && plaintextParents[parentNode.localName]) {\n        return data;\n      }\n      return escapeData(data);\n    }\n    case Node.COMMENT_NODE: {\n      return '<!--' + node.data + '-->';\n    }\n    default: {\n      window.console.error(node);\n      throw new Error('not implemented');\n    }\n  }\n}\n\nexport function getInnerHTML(node, composed) {\n  if (node.localName === 'template') {\n    node = node.content;\n  }\n  let s = '';\n  let c$ = composed ? composed(node) : node.childNodes;\n  for (let i=0, l=c$.length, child; (i<l) && (child=c$[i]); i++) {\n    s += getOuterHTML(child, node, composed);\n  }\n  return s;\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\nimport {getInnerHTML} from './innerHTML'\nimport {tree} from './tree'\n\nlet mixinImpl = {\n\n  // Try to add node. Record logical info, track insertion points, perform\n  // distribution iff needed. Return true if the add is handled.\n  addNode(container, node, ref_node) {\n    let ownerRoot = this.ownerShadyRootForNode(container);\n    if (ownerRoot) {\n      // optimization: special insertion point tracking\n      if (node.__noInsertionPoint) {\n        ownerRoot._skipUpdateInsertionPoints = true;\n      }\n      // note: we always need to see if an insertion point is added\n      // since this saves logical tree info; however, invalidation state\n      // needs\n      let ipAdded = this._maybeAddInsertionPoint(node, container, ownerRoot);\n      // invalidate insertion points IFF not already invalid!\n      if (ipAdded) {\n        ownerRoot._skipUpdateInsertionPoints = false;\n      }\n      this._addedNode(node, ownerRoot);\n    }\n    if (tree.Logical.hasChildNodes(container)) {\n      tree.Logical.recordInsertBefore(node, container, ref_node);\n    }\n    // if not distributing and not adding to host, do a fast path addition\n    let handled = this._maybeDistribute(node, container, ownerRoot) ||\n      container.shadyRoot;\n    // TODO(sorvell): Can we do this cleanup code before distribution?\n    // if shady is handling this node,\n    // the actual dom may not be removed if the node or fragment contents\n    // remain undistributed so we ensure removal here.\n    // NOTE: we only remove from existing location iff shady dom is involved.\n    // This is because a node fragment is passed to the native add method\n    // which expects to see fragment children. Regular elements must also\n    // use this check because not doing so causes separation of\n    // attached/detached and breaks, for example,\n    // dom-if's attached/detached checks.\n    if (handled) {\n      if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        // TODO(sorvell): copy nodes ahead of time to avoid iloop\n        // that can occur when parent is not patched and child is...\n        let c$ = tree.arrayCopyChildNodes(node);\n        for (let i=0; i < c$.length; i++) {\n          tree.Composed.removeChild(node, c$[i]);\n        }\n      } else {\n        let parent = tree.Composed.getParentNode(node);\n        if (parent) {\n          tree.Composed.removeChild(parent, node);\n        }\n      }\n    }\n    return handled;\n  },\n\n  // Try to remove node: update logical info and perform distribution iff\n  // needed. Return true if the removal has been handled.\n  // note that it's possible for both the node's host and its parent\n  // to require distribution... both cases are handled here.\n  removeNode(node) {\n    // important that we want to do this only if the node has a logical parent\n    let logicalParent = tree.Logical.hasParentNode(node) &&\n      tree.Logical.getParentNode(node);\n    let distributed;\n    let ownerRoot = this.ownerShadyRootForNode(node);\n    if (logicalParent) {\n      // distribute node's parent iff needed\n      distributed = this.maybeDistributeParent(node);\n      tree.Logical.recordRemoveChild(node, logicalParent);\n      // remove node from root and distribute it iff needed\n      if (ownerRoot && (this._removeDistributedChildren(ownerRoot, node) ||\n        logicalParent.localName === ownerRoot.getInsertionPointTag())) {\n        ownerRoot._skipUpdateInsertionPoints = false;\n        ownerRoot.update();\n      }\n    }\n    this._removeOwnerShadyRoot(node);\n    if (ownerRoot) {\n      this._removedNode(node, ownerRoot);\n    }\n    return distributed;\n  },\n\n\n  _scheduleObserver(node) {\n    let observer = node.__dom && node.__dom.observer;\n    if (observer) {\n      observer.schedule();\n    }\n  },\n\n  removeNodeFromParent(node, parent) {\n    if (parent) {\n      this._scheduleObserver(parent);\n      this.removeNode(node);\n    } else {\n      this._removeOwnerShadyRoot(node);\n    }\n  },\n\n  _hasCachedOwnerRoot(node) {\n    return Boolean(node.__ownerShadyRoot !== undefined);\n  },\n\n  getRootNode(node) {\n    if (!node || !node.nodeType) {\n      return;\n    }\n    let root = node.__ownerShadyRoot;\n    if (root === undefined) {\n      if (utils.isShadyRoot(node)) {\n        root = node;\n      } else {\n        let parent = tree.Logical.getParentNode(node);\n        root = parent ? this.getRootNode(parent) : node;\n      }\n      // memo-ize result for performance but only memo-ize\n      // result if node is in the document. This avoids a problem where a root\n      // can be cached while an element is inside a fragment.\n      // If this happens and we cache the result, the value can become stale\n      // because for perf we avoid processing the subtree of added fragments.\n      if (document.contains(node)) {\n        node.__ownerShadyRoot = root;\n      }\n    }\n    return root;\n  },\n\n  ownerShadyRootForNode(node) {\n    let root = this.getRootNode(node);\n    if (utils.isShadyRoot(root)) {\n      return root;\n    }\n  },\n\n  _maybeDistribute(node, container, ownerRoot) {\n    // TODO(sorvell): technically we should check non-fragment nodes for\n    // <content> children but since this case is assumed to be exceedingly\n    // rare, we avoid the cost and will address with some specific api\n    // when the need arises.  For now, the user must call\n    // distributeContent(true), which updates insertion points manually\n    // and forces distribution.\n    let insertionPointTag = ownerRoot && ownerRoot.getInsertionPointTag() || '';\n    let fragContent = (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) &&\n      !node.__noInsertionPoint &&\n      insertionPointTag && node.querySelector(insertionPointTag);\n    let wrappedContent = fragContent &&\n      (tree.Logical.getParentNode(fragContent).nodeType !==\n      Node.DOCUMENT_FRAGMENT_NODE);\n    let hasContent = fragContent || (node.localName === insertionPointTag);\n    // There are 3 possible cases where a distribution may need to occur:\n    // 1. <content> being inserted (the host of the shady root where\n    //    content is inserted needs distribution)\n    // 2. children being inserted into parent with a shady root (parent\n    //    needs distribution)\n    // 3. container is an insertionPoint\n    if (hasContent || (container.localName === insertionPointTag)) {\n      if (ownerRoot) {\n        // note, insertion point list update is handled after node\n        // mutations are complete\n        ownerRoot.update();\n      }\n    }\n    let needsDist = this._nodeNeedsDistribution(container);\n    if (needsDist) {\n      container.shadyRoot.update();\n    }\n    // Return true when distribution will fully handle the composition\n    // Note that if a content was being inserted that was wrapped by a node,\n    // and the parent does not need distribution, return false to allow\n    // the nodes to be added directly, after which children may be\n    // distributed and composed into the wrapping node(s)\n    return needsDist || (hasContent && !wrappedContent);\n  },\n\n  /* note: parent argument is required since node may have an out\n  of date parent at this point; returns true if a <content> is being added */\n  _maybeAddInsertionPoint(node, parent, root) {\n    let added;\n    let insertionPointTag = root.getInsertionPointTag();\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\n      !node.__noInsertionPoint) {\n      let c$ = node.querySelectorAll(insertionPointTag);\n      for (let i=0, n, np, na; (i<c$.length) && (n=c$[i]); i++) {\n        np = tree.Logical.getParentNode(n);\n        // don't allow node's parent to be fragment itself\n        if (np === node) {\n          np = parent;\n        }\n        na = this._maybeAddInsertionPoint(n, np, root);\n        added = added || na;\n      }\n    } else if (node.localName === insertionPointTag) {\n      tree.Logical.saveChildNodes(parent);\n      tree.Logical.saveChildNodes(node);\n      added = true;\n    }\n    return added;\n  },\n\n  _nodeNeedsDistribution(node) {\n    return node && node.shadyRoot &&\n      node.shadyRoot.hasInsertionPoint();\n  },\n\n  // TODO(sorvell): needed for style scoping, use MO?\n  _addedNode() {},\n  _removedNode() {},\n  /*\n  _addedNode(node, root) {\n    // if (ShadyDOM.addedNode) {\n    //   ShadyDOM.addedNode(node, root);\n    // }\n  },\n\n  _removedNode(node, root) {\n    if (ShadyDOM.removedNode) {\n      ShadyDOM.removedNode(node, root);\n    }\n  },\n  */\n\n  _removeDistributedChildren(root, container) {\n    let hostNeedsDist;\n    let ip$ = root._insertionPoints;\n    for (let i=0; i<ip$.length; i++) {\n      let insertionPoint = ip$[i];\n      if (this._contains(container, insertionPoint)) {\n        let dc$ = insertionPoint.assignedNodes({flatten: true});\n        for (let j=0; j<dc$.length; j++) {\n          hostNeedsDist = true;\n          let node = dc$[j];\n          let parent = tree.Composed.getParentNode(node);\n          if (parent) {\n            tree.Composed.removeChild(parent, node);\n          }\n        }\n      }\n    }\n    return hostNeedsDist;\n  },\n\n  _contains(container, node) {\n    while (node) {\n      if (node == container) {\n        return true;\n      }\n      node = tree.Logical.getParentNode(node);\n    }\n  },\n\n  _removeOwnerShadyRoot(node) {\n    // optimization: only reset the tree if node is actually in a root\n    if (this._hasCachedOwnerRoot(node)) {\n      let c$ = tree.Logical.getChildNodes(node);\n      for (let i=0, l=c$.length, n; (i<l) && (n=c$[i]); i++) {\n        this._removeOwnerShadyRoot(n);\n      }\n    }\n    node.__ownerShadyRoot = undefined;\n  },\n\n  // TODO(sorvell): This will fail if distribution that affects this\n  // question is pending; this is expected to be exceedingly rare, but if\n  // the issue comes up, we can force a flush in this case.\n  firstComposedNode(insertionPoint) {\n    let n$ = insertionPoint.assignedNodes({flatten: true});\n    let root = this.getRootNode(insertionPoint);\n    for (let i=0, l=n$.length, n; (i<l) && (n=n$[i]); i++) {\n      // means that we're composed to this spot.\n      if (root.isFinalDestination(insertionPoint, n)) {\n        return n;\n      }\n    }\n  },\n\n  clearNode(node) {\n    while (node.firstChild) {\n      node.removeChild(node.firstChild);\n    }\n  },\n\n  maybeDistributeParent(node) {\n    let parent = tree.Logical.getParentNode(node);\n    if (this._nodeNeedsDistribution(parent)) {\n      parent.shadyRoot.update();\n      return true;\n    }\n  },\n\n  maybeDistributeAttributeChange(node, name) {\n    let distribute = (node.localName === 'slot' && name === 'name');\n    if (distribute) {\n      let root = this.getRootNode(node);\n      if (root.update) {\n        root.update();\n      }\n    }\n  },\n\n  // NOTE: `query` is used primarily for ShadyDOM's querySelector impl,\n  // but it's also generally useful to recurse through the element tree\n  // and is used by Polymer's styling system.\n  query(node, matcher, halter) {\n    let list = [];\n    this._queryElements(tree.Logical.getChildNodes(node), matcher,\n      halter, list);\n    return list;\n  },\n\n  _queryElements(elements, matcher, halter, list) {\n    for (let i=0, l=elements.length, c; (i<l) && (c=elements[i]); i++) {\n      if (c.nodeType === Node.ELEMENT_NODE &&\n          this._queryElement(c, matcher, halter, list)) {\n        return true;\n      }\n    }\n  },\n\n  _queryElement(node, matcher, halter, list) {\n    let result = matcher(node);\n    if (result) {\n      list.push(node);\n    }\n    if (halter && halter(result)) {\n      return result;\n    }\n    this._queryElements(tree.Logical.getChildNodes(node), matcher,\n      halter, list);\n  },\n\n  activeElementForNode(node) {\n    let active = document.activeElement;\n    if (!active) {\n      return null;\n    }\n    let isShadyRoot = !!(utils.isShadyRoot(node));\n    if (node !== document) {\n      // If this node isn't a document or shady root, then it doesn't have\n      // an active element.\n      if (!isShadyRoot) {\n        return null;\n      }\n      // If this shady root's host is the active element or the active\n      // element is not a descendant of the host (in the composed tree),\n      // then it doesn't have an active element.\n      if (node.host === active ||\n          !node.host.contains(active)) {\n        return null;\n      }\n    }\n    // This node is either the document or a shady root of which the active\n    // element is a (composed) descendant of its host; iterate upwards to\n    // find the active element's most shallow host within it.\n    let activeRoot = this.ownerShadyRootForNode(active);\n    while (activeRoot && activeRoot !== node) {\n      active = activeRoot.host;\n      activeRoot = this.ownerShadyRootForNode(active);\n    }\n    if (node === document) {\n      // This node is the document, so activeRoot should be null.\n      return activeRoot ? null : active;\n    } else {\n      // This node is a non-document shady root, and it should be\n      // activeRoot.\n      return activeRoot === node ? active : null;\n    }\n  }\n\n};\n\nlet nativeCloneNode = Element.prototype.cloneNode;\nlet nativeImportNode = Document.prototype.importNode;\nlet nativeSetAttribute = Element.prototype.setAttribute;\nlet nativeRemoveAttribute = Element.prototype.removeAttribute;\n\nlet NodeMixin = {};\n\nObject.defineProperties(NodeMixin, {\n\n  parentElement: {\n    get() {\n      return tree.Logical.getParentNode(this);\n    },\n    configurable: true\n  },\n\n  parentNode: {\n    get() {\n      return tree.Logical.getParentNode(this);\n    },\n    configurable: true\n  },\n\n  nextSibling: {\n    get() {\n      return tree.Logical.getNextSibling(this);\n    },\n    configurable: true\n  },\n\n  previousSibling: {\n    get() {\n      return tree.Logical.getPreviousSibling(this);\n    },\n    configurable: true\n  },\n\n  nextElementSibling: {\n    get() {\n      return tree.Logical.getNextElementSibling(this);\n    },\n    configurable: true\n  },\n\n  previousElementSibling: {\n    get() {\n      return tree.Logical.getPreviousElementSibling(this);\n    },\n    configurable: true\n  },\n\n  assignedSlot: {\n    get() {\n      return this._assignedSlot;\n    },\n    configurable: true\n  }\n});\n\nlet FragmentMixin = {\n\n  appendChild(node) {\n    return this.insertBefore(node);\n  },\n\n  // cases in which we may not be able to just do standard native call\n  // 1. container has a shadyRoot (needsDistribution IFF the shadyRoot\n  // has an insertion point)\n  // 2. container is a shadyRoot (don't distribute, instead set\n  // container to container.host.\n  // 3. node is <content> (host of container needs distribution)\n  insertBefore(node, ref_node) {\n    if (ref_node && tree.Logical.getParentNode(ref_node) !== this) {\n      throw Error('The ref_node to be inserted before is not a child ' +\n        'of this node');\n    }\n    // remove node from its current position iff it's in a tree.\n    if (node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n      let parent = tree.Logical.getParentNode(node);\n      mixinImpl.removeNodeFromParent(node, parent);\n    }\n    if (!mixinImpl.addNode(this, node, ref_node)) {\n      if (ref_node) {\n        // if ref_node is an insertion point replace with first distributed node\n        let root = mixinImpl.ownerShadyRootForNode(ref_node);\n        if (root) {\n          ref_node = ref_node.localName === root.getInsertionPointTag() ?\n            mixinImpl.firstComposedNode(ref_node) : ref_node;\n        }\n      }\n      // if adding to a shadyRoot, add to host instead\n      let container = utils.isShadyRoot(this) ?\n        this.host : this;\n      if (ref_node) {\n        tree.Composed.insertBefore(container, node, ref_node);\n      } else {\n        tree.Composed.appendChild(container, node);\n      }\n    }\n    mixinImpl._scheduleObserver(this);\n    return node;\n  },\n\n  /**\n    Removes the given `node` from the element's `lightChildren`.\n    This method also performs dom composition.\n  */\n  removeChild(node) {\n    if (tree.Logical.getParentNode(node) !== this) {\n      throw Error('The node to be removed is not a child of this node: ' +\n        node);\n    }\n    if (!mixinImpl.removeNode(node)) {\n      // if removing from a shadyRoot, remove form host instead\n      let container = utils.isShadyRoot(this) ?\n        this.host :\n        this;\n      // not guaranteed to physically be in container; e.g.\n      // undistributed nodes.\n      let parent = tree.Composed.getParentNode(node);\n      if (container === parent) {\n        tree.Composed.removeChild(container, node);\n      }\n    }\n    mixinImpl._scheduleObserver(this);\n    return node;\n  },\n\n  replaceChild(node, ref_node) {\n    this.insertBefore(node, ref_node);\n    this.removeChild(ref_node);\n    return node;\n  },\n\n  // TODO(sorvell): consider doing native QSA and filtering results.\n  querySelector(selector) {\n    // match selector and halt on first result.\n    let result = mixinImpl.query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  },\n\n  querySelectorAll(selector) {\n    return mixinImpl.query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    });\n  },\n\n  cloneNode(deep) {\n    if (this.localName == 'template') {\n      return nativeCloneNode.call(this, deep);\n    } else {\n      let n = nativeCloneNode.call(this, false);\n      if (deep) {\n        let c$ = this.childNodes;\n        for (let i=0, nc; i < c$.length; i++) {\n          nc = c$[i].cloneNode(true);\n          n.appendChild(nc);\n        }\n      }\n      return n;\n    }\n  },\n\n  importNode(externalNode, deep) {\n    // for convenience use this node's ownerDoc if the node isn't a document\n    let doc = this instanceof Document ? this :\n      this.ownerDocument;\n    let n = nativeImportNode.call(doc, externalNode, false);\n    if (deep) {\n      let c$ = tree.Logical.getChildNodes(externalNode);\n      utils.common.patchNode(n);\n      for (let i=0, nc; i < c$.length; i++) {\n        nc = doc.importNode(c$[i], true);\n        n.appendChild(nc);\n      }\n    }\n    return n;\n  }\n};\n\nObject.defineProperties(FragmentMixin, {\n\n  childNodes: {\n    get() {\n      let c$ = tree.Logical.getChildNodes(this);\n      return Array.isArray(c$) ? c$ : tree.arrayCopyChildNodes(this);\n    },\n    configurable: true\n  },\n\n  children: {\n    get() {\n      if (tree.Logical.hasChildNodes(this)) {\n        return Array.prototype.filter.call(this.childNodes, function(n) {\n          return (n.nodeType === Node.ELEMENT_NODE);\n        });\n      } else {\n        return tree.arrayCopyChildren(this);\n      }\n    },\n    configurable: true\n  },\n\n  firstChild: {\n    get() {\n      return tree.Logical.getFirstChild(this);\n    },\n    configurable: true\n  },\n\n  lastChild: {\n    get() {\n      return tree.Logical.getLastChild(this);\n    },\n    configurable: true\n  },\n\n  firstElementChild: {\n    get() {\n      return tree.Logical.getFirstElementChild(this);\n    },\n    configurable: true\n  },\n\n  lastElementChild: {\n    get() {\n      return tree.Logical.getLastElementChild(this);\n    },\n    configurable: true\n  },\n\n  // TODO(srovell): strictly speaking fragments do not have textContent\n  // or innerHTML but ShadowRoots do and are not easily distinguishable.\n  // textContent / innerHTML\n  textContent: {\n    get() {\n      if (this.childNodes) {\n        let tc = [];\n        for (let i = 0, cn = this.childNodes, c; (c = cn[i]); i++) {\n          if (c.nodeType !== Node.COMMENT_NODE) {\n            tc.push(c.textContent);\n          }\n        }\n        return tc.join('');\n      }\n      return '';\n    },\n    set(text) {\n      mixinImpl.clearNode(this);\n      if (text) {\n        this.appendChild(document.createTextNode(text));\n      }\n    },\n    configurable: true\n  },\n\n  innerHTML: {\n    get() {\n      return getInnerHTML(this);\n    },\n    set(text) {\n      mixinImpl.clearNode(this);\n      let d = document.createElement('div');\n      d.innerHTML = text;\n      // here, appendChild may move nodes async so we cannot rely\n      // on node position when copying\n      let c$ = tree.arrayCopyChildNodes(d);\n      for (let i=0; i < c$.length; i++) {\n        this.appendChild(c$[i]);\n      }\n    },\n    configurable: true\n  }\n\n});\n\nlet ElementMixin = {\n\n  // TODO(sorvell): should only exist on <slot>\n  assignedNodes(options) {\n    return (options && options.flatten ? this._distributedNodes :\n      this._assignedNodes) || [];\n  },\n\n\n  setAttribute(name, value) {\n    nativeSetAttribute.call(this, name, value);\n    if (!mixinImpl.maybeDistributeParent(this)) {\n      mixinImpl.maybeDistributeAttributeChange(this, name);\n    }\n  },\n\n  removeAttribute(name) {\n    nativeRemoveAttribute.call(this, name);\n    if (!mixinImpl.maybeDistributeParent(this)) {\n      mixinImpl.maybeDistributeAttributeChange(this, name);\n    }\n  }\n\n};\n\nObject.defineProperties(ElementMixin, {\n\n  shadowRoot: {\n    get() {\n      return this.shadyRoot;\n    }\n  },\n\n  slot: {\n    get() {\n      return this.getAttribute('slot');\n    },\n    set(value) {\n      this.setAttribute('slot', value);\n    }\n  }\n\n});\n\nlet activeElementDescriptor = {\n  get() {\n    return mixinImpl.activeElementForNode(this);\n  }\n}\n\nlet ActiveElementMixin = {};\nObject.defineProperties(ActiveElementMixin, {\n  activeElement: activeElementDescriptor\n});\n\nlet UnderActiveElementMixin = {};\nObject.defineProperties(UnderActiveElementMixin, {\n  _activeElement: activeElementDescriptor\n});\n\nexport let Mixins = {\n\n  Node: utils.extendAll({__patched: 'Node'}, NodeMixin),\n\n  Fragment: utils.extendAll({__patched: 'Fragment'},\n    NodeMixin, FragmentMixin, ActiveElementMixin),\n\n  Element: utils.extendAll({__patched: 'Element'},\n    NodeMixin, FragmentMixin, ElementMixin, ActiveElementMixin),\n\n  // Note: activeElement cannot be patched on document!\n  Document: utils.extendAll({__patched: 'Document'},\n    NodeMixin, FragmentMixin, ElementMixin, UnderActiveElementMixin)\n\n};\n\nexport let getRootNode = function(node) {\n  return mixinImpl.getRootNode(node);\n}\n\nexport function filterMutations(mutations, target) {\n  const targetRootNode = getRootNode(target);\n  return mutations.filter(function(mutation) {\n    const mutationInScope = (targetRootNode === getRootNode(mutation.target));\n    if (mutationInScope && mutation.addedNodes) {\n      let nodes = Array.from(mutation.addedNodes).filter(function(n) {\n        return (targetRootNode === getRootNode(n));\n      });\n      Object.defineProperty(mutation, 'addedNodes', {\n        value: nodes,\n        configurable: true\n      });\n    }\n    return mutationInScope &&\n      (!mutation.addedNodes || mutation.addedNodes.length);\n  });\n}\n\nclass AsyncObserver {\n\n  constructor() {\n    this._scheduled = false;\n    this.callbacks = new Set();\n  }\n\n  schedule() {\n    if (!this._scheduled) {\n      this._scheduled = true;\n      Promise.resolve().then(() => {\n        this.flush();\n      });\n    }\n  }\n\n  flush() {\n    this._scheduled = false;\n    for (let cb of this.callbacks) {\n      cb();\n    }\n  }\n\n}\n\nexport let observeChildren = function(node, callback) {\n  utils.common.patchNode(node);\n  if (!node.__dom.observer) {\n    node.__dom.observer = new AsyncObserver();\n  }\n  node.__dom.observer.callbacks.add(callback);\n  callback.observer = node.__dom.observer;\n  return callback;\n}\n\nexport let unobserveChildren = function(callbackHandle) {\n  let observer = callbackHandle && callbackHandle.observer;\n  if (observer) {\n    observer.callbacks.delete(callbackHandle);\n    if (!observer.callbacks.size) {\n      observer.target.__dom.observer = null;\n    }\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {calculateSplices} from './array-splice'\nimport * as utils from './utils'\nimport {tree} from './tree'\nimport Distributor from './distributor'\n\n/**\n  Implements a pared down version of ShadowDOM's scoping, which is easy to\n  polyfill across browsers.\n*/\nexport class ShadyRoot {\n\n  constructor(host) {\n    if (!host) {\n      throw 'Must provide a host';\n    }\n    // NOTE: this strange construction is necessary because\n    // DocumentFragment cannot be subclassed on older browsers.\n    let frag = document.createDocumentFragment();\n    frag.__proto__ = ShadyFragmentMixin;\n    frag._init(host);\n    return frag;\n  }\n\n}\n\nlet ShadyMixin = {\n\n  _init(host) {\n    // NOTE: set a fake local name so this element can be\n    // distinguished from a DocumentFragment when patching.\n    // FF doesn't allow this to be `localName`\n    this.__localName = 'ShadyRoot';\n    // root <=> host\n    host.shadyRoot = this;\n    this.host = host;\n    // logical dom setup\n    tree.Logical.saveChildNodes(host);\n    tree.Logical.saveChildNodes(this);\n    // state flags\n    this._clean = true;\n    this._hasRendered = false;\n    this._distributor = new Distributor(this);\n    this.update();\n  },\n\n  // async render the \"top\" distributor (this is all that is needed to\n  // distribute this host).\n  update() {\n    let distributionRoot = this._findDistributionRoot(this.host);\n    //console.log('update from', this.host, 'root', distributionRoot.host, distributionRoot._clean);\n    if (distributionRoot._clean) {\n      distributionRoot._clean = false;\n      enqueue(function() {\n        distributionRoot.render();\n      });\n    }\n  },\n\n  // returns the host that's the top of this host's distribution tree\n  _findDistributionRoot(element) {\n    let root = element.shadyRoot;\n    while (element && this._elementNeedsDistribution(element)) {\n      root = element.getRootNode();\n      element = root && root.host;\n    }\n    return root;\n  },\n\n  // Return true if a host's children includes\n  // an insertion point that selects selectively\n  _elementNeedsDistribution(element) {\n    let c$ = tree.Logical.getChildNodes(element);\n    for (let i=0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (this._distributor.isInsertionPoint(c)) {\n        return element.getRootNode();\n      }\n    }\n  },\n\n  render() {\n    if (!this._clean) {\n      if (!this._skipUpdateInsertionPoints) {\n        this.updateInsertionPoints();\n      } else if (!this._hasRendered) {\n        this._insertionPoints = [];\n      }\n      this._skipUpdateInsertionPoints = false;\n      // TODO(sorvell): previous ShadyDom had a fast path here\n      // that would avoid distribution for initial render if\n      // no insertion points exist. We cannot currently do this because\n      // it relies on elements being in the physical shadowRoot element\n      // so that native methods will be used. The current append code\n      // simply provokes distribution in this case and does not put the\n      // nodes in the shadowRoot. This could be done but we'll need to\n      // consider if the special processing is worth the perf gain.\n      // if (!this._hasRendered && !this._insertionPoints.length) {\n      //   tree.Composed.clearChildNodes(this.host);\n      //   tree.Composed.appendChild(this.host, this);\n      // } else {\n      // logical\n      this.distribute();\n      // physical\n      this.compose();\n      this._clean = true;\n      this._hasRendered = true;\n    }\n  },\n\n  forceRender() {\n    this._clean = false;\n    this.render();\n  },\n\n  distribute() {\n    let dirtyRoots = this._distributor.distribute();\n    for (let i=0; i<dirtyRoots.length; i++) {\n      dirtyRoots[i].forceRender();\n    }\n  },\n\n  updateInsertionPoints() {\n    let i$ = this.__insertionPoints;\n    // if any insertion points have been removed, clear their distribution info\n    if (i$) {\n      for (let i=0, c; i < i$.length; i++) {\n        c = i$[i];\n        if (c.getRootNode() !== this) {\n          this._distributor.clearAssignedSlots(c);\n        }\n      }\n    }\n    i$ = this._insertionPoints = this._distributor.getInsertionPoints();\n    // ensure insertionPoints's and their parents have logical dom info.\n    // save logical tree info\n    // a. for shadyRoot\n    // b. for insertion points (fallback)\n    // c. for parents of insertion points\n    for (let i=0, c; i < i$.length; i++) {\n      c = i$[i];\n      tree.Logical.saveChildNodes(c);\n      tree.Logical.saveChildNodes(tree.Logical.getParentNode(c));\n    }\n  },\n\n  get _insertionPoints() {\n    if (!this.__insertionPoints) {\n      this.updateInsertionPoints();\n    }\n    return this.__insertionPoints || (this.__insertionPoints = []);\n  },\n\n  set _insertionPoints(insertionPoints) {\n    this.__insertionPoints = insertionPoints;\n  },\n\n  hasInsertionPoint() {\n    return this._distributor.hasInsertionPoint();\n  },\n\n  compose() {\n    // compose self\n    // note: it's important to mark this clean before distribution\n    // so that attachment that provokes additional distribution (e.g.\n    // adding something to your parentNode) works\n    this._composeTree();\n    // TODO(sorvell): See fast paths here in Polymer v1\n    // (these seem unnecessary)\n  },\n\n  // Reify dom such that it is at its correct rendering position\n  // based on logical distribution.\n  _composeTree() {\n    this._updateChildNodes(this.host, this._composeNode(this.host));\n    let p$ = this._insertionPoints || [];\n    for (let i=0, l=p$.length, p, parent; (i<l) && (p=p$[i]); i++) {\n      parent = tree.Logical.getParentNode(p);\n      if ((parent !== this.host) && (parent !== this)) {\n        this._updateChildNodes(parent, this._composeNode(parent));\n      }\n    }\n  },\n\n  // Returns the list of nodes which should be rendered inside `node`.\n  _composeNode(node) {\n    let children = [];\n    let c$ = tree.Logical.getChildNodes(node.shadyRoot || node);\n    for (let i = 0; i < c$.length; i++) {\n      let child = c$[i];\n      if (this._distributor.isInsertionPoint(child)) {\n        let distributedNodes = child._distributedNodes ||\n          (child._distributedNodes = []);\n        for (let j = 0; j < distributedNodes.length; j++) {\n          let distributedNode = distributedNodes[j];\n          if (this.isFinalDestination(child, distributedNode)) {\n            children.push(distributedNode);\n          }\n        }\n      } else {\n        children.push(child);\n      }\n    }\n    return children;\n  },\n\n  isFinalDestination(insertionPoint, node) {\n    return this._distributor.isFinalDestination(\n      insertionPoint, node);\n  },\n\n  // Ensures that the rendered node list inside `container` is `children`.\n  _updateChildNodes(container, children) {\n    let composed = tree.Composed.getChildNodes(container);\n    let splices = calculateSplices(children, composed);\n    // process removals\n    for (let i=0, d=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n        // check if the node is still where we expect it is before trying\n        // to remove it; this can happen if we move a node and\n        // then schedule its previous host for distribution resulting in\n        // the node being removed here.\n        if (tree.Composed.getParentNode(n) === container) {\n          tree.Composed.removeChild(container, n);\n        }\n        composed.splice(s.index + d, 1);\n      }\n      d -= s.addedCount;\n    }\n    // process adds\n    for (let i=0, s, next; (i<splices.length) && (s=splices[i]); i++) { //eslint-disable-line no-redeclare\n      next = composed[s.index];\n      for (let j=s.index, n; j < s.index + s.addedCount; j++) {\n        n = children[j];\n        tree.Composed.insertBefore(container, n, next);\n        // TODO(sorvell): is this splice strictly needed?\n        composed.splice(j, 0, n);\n      }\n    }\n  },\n\n  getInsertionPointTag() {\n    return this._distributor.insertionPointTag;\n  }\n\n}\n\nlet ShadyFragmentMixin = Object.create(DocumentFragment.prototype);\nutils.extend(ShadyFragmentMixin, ShadyMixin);\n\n// let needsUpgrade = window.CustomElements && !CustomElements.useNative;\n\n// function upgradeLogicalChildren(children) {\n//   if (needsUpgrade && children) {\n//     for (let i=0; i < children.length; i++) {\n//       CustomElements.upgrade(children[i]);\n//     }\n//   }\n// }\n\n// render enqueuer/flusher\nlet customElements = window.CustomElements;\nlet flushList = [];\nlet scheduled;\nexport function enqueue(callback) {\n  if (!scheduled) {\n    scheduled = true;\n    Promise.resolve().then(flush);\n  }\n  flushList.push(callback);\n}\n\nlet flushImpl = function() {\n  scheduled = false;\n  while (flushList.length) {\n    flushList.shift()();\n  }\n  if (customElements) {\n    customElements.takeRecords();\n  }\n  // continue flushing after elements are upgraded...\n  if (flushList.length) {\n    flushImpl();\n  }\n}\n\nflushImpl.flushList = flushList;\n\nexport let flush = flushImpl;","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\n'use strict';\nimport {tree} from './tree'\nimport * as utils from './utils'\nimport {Mixins} from './element-mixin'\n\nexport let patchedCount = 0;\n\nlet log = false;\n\nlet patchImpl = {\n\n  canPatchNode: function(node) {\n    switch (node) {\n      case document.head:\n      case document.documentElement:\n        return false;\n      default:\n        return true;\n    }\n  },\n\n  hasPrototypeDescriptors: Boolean(Object.getOwnPropertyDescriptor(\n    window.Node.prototype, 'textContent')),\n\n  patch: function(node) {\n    patchedCount++;\n    log && window.console.warn('patch node', node);\n    if (this.hasPrototypeDescriptors) {\n      utils.patchPrototype(node, this.mixinForObject(node));\n    } else {\n      window.console.warn('Patching instance rather than prototype', node);\n      utils.extend(node, this.mixinForNode(node));\n    }\n  },\n\n  mixinForObject: function(obj) {\n    switch (obj.nodeType) {\n      case Node.ELEMENT_NODE:\n        return Mixins.Element;\n      case Node.DOCUMENT_FRAGMENT_NODE:\n        return Mixins.Fragment;\n      case Node.DOCUMENT_NODE:\n        return Mixins.Document;\n      case Node.TEXT_NODE:\n      case Node.COMMENT_NODE:\n        return Mixins.Node;\n    }\n  },\n\n  unpatch: function(obj) {\n    if (obj.__sourceProto) {\n      obj.__proto__ = obj.__sourceProto;\n\n    }\n    // TODO(sorvell): implement unpatching for non-proto patchable browsers\n  }\n\n};\n\nexport function patchNode(node) {\n  if (!utils.settings.inUse) {\n    return;\n  }\n  if (!isNodePatched(node) && patchImpl.canPatchNode(node)) {\n    tree.saveChildNodes(node);\n    patchImpl.patch(node);\n  }\n}\n\nexport function unpatchNode(node) {\n  patchImpl.unpatch(node);\n}\n\nexport function isNodePatched(node) {\n  return Boolean(node.__patched);\n}\n\n// TODO(sorvell): fake export\nutils.common.patchNode = patchNode;","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\n\nlet origAddEventListener = Element.prototype.addEventListener;\nlet origRemoveEventListener = Element.prototype.removeEventListener;\n\n// https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937\nlet alwaysComposed = {\n  blur: true,\n  focus: true,\n  focusin: true,\n  focusout: true,\n  click: true,\n  dblclick: true,\n  mousedown: true,\n  mouseenter: true,\n  mouseleave: true,\n  mousemove: true,\n  mouseout: true,\n  mouseover: true,\n  mouseup: true,\n  wheel: true,\n  beforeinput: true,\n  input: true,\n  keydown: true,\n  keyup: true,\n  compositionstart: true,\n  compositionupdate: true,\n  compositionend: true,\n  touchstart: true,\n  touchend: true,\n  touchmove: true,\n  touchcancel: true,\n  pointerover: true,\n  pointerenter: true,\n  pointerdown: true,\n  pointermove: true,\n  pointerup: true,\n  pointercancel: true,\n  pointerout: true,\n  pointerleave: true,\n  gotpointercapture: true,\n  lostpointercapture: true,\n  dragstart: true,\n  drag: true,\n  dragenter: true,\n  dragleave: true,\n  dragover: true,\n  drop: true,\n  dragend: true,\n  DOMActivate: true,\n  DOMFocusIn: true,\n  DOMFocusOut: true,\n  keypress: true\n};\n\nfunction pathComposer(startNode, composed) {\n  let composedPath = [];\n  let current = startNode;\n  let startRoot = startNode === window ? window : startNode.getRootNode();\n  while (current) {\n    composedPath.push(current);\n    if (current.assignedSlot) {\n      current = current.assignedSlot;\n    } else if (current.host && (composed || current !== startRoot)) {\n      current = current.host;\n    } else {\n      current = current.parentNode;\n    }\n  }\n  // event composedPath includes window when startNode's ownerRoot is document\n  if (composedPath[composedPath.length - 1] === document) {\n    composedPath.push(window);\n  }\n  return composedPath;\n}\n\nfunction retarget(refNode, path) {\n  if (!utils.isShadyRoot) {\n    return refNode;\n  }\n  // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's\n  // shadow-including inclusive ancestor, return ANCESTOR.\n  let refNodePath = pathComposer(refNode, true);\n  let p$ = path;\n  for (let i=0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {\n    ancestor = p$[i];\n    root = ancestor === window ? window : ancestor.getRootNode();\n    if (root !== lastRoot) {\n      rootIdx = refNodePath.indexOf(root);\n      lastRoot = root;\n    }\n    if (!utils.isShadyRoot(root) || rootIdx > -1) {\n      return ancestor;\n    }\n  }\n}\n\nlet EventMixin = {\n\n  __patched: 'Event',\n\n  get composed() {\n    if (this.isTrusted && this.__composed === undefined) {\n      this.__composed = alwaysComposed[this.type];\n    }\n    return this.__composed || false;\n  },\n\n  composedPath() {\n    if (!this.__composedPath) {\n      this.__composedPath = pathComposer(this.__target, this.composed);\n    }\n    return this.__composedPath;\n  },\n\n  get target() {\n    return retarget(this.currentTarget, this.composedPath());\n  },\n\n  // http://w3c.github.io/webcomponents/spec/shadow/#event-relatedtarget-retargeting\n  get relatedTarget() {\n    if (!this.__relatedTarget) {\n      return null;\n    }\n    if (!this.__relatedTargetComposedPath) {\n      this.__relatedTargetComposedPath = pathComposer(this.__relatedTarget, true);\n    }\n    // find the deepest node in relatedTarget composed path that is in the same root with the currentTarget\n    return retarget(this.currentTarget, this.__relatedTargetComposedPath);\n  },\n  stopPropagation() {\n    Event.prototype.stopPropagation.call(this);\n    this.__propagationStopped = true;\n  },\n  stopImmediatePropagation() {\n    Event.prototype.stopImmediatePropagation.call(this);\n    this.__immediatePropagationStopped = true;\n    this.__propagationStopped = true;\n  }\n\n};\n\nfunction mixinComposedFlag(Base) {\n  // NOTE: avoiding use of `class` here so that transpiled output does not\n  // try to do `Base.call` with a dom construtor.\n  let klazz = function(type, options) {\n    let event = new Base(type, options);\n    event.__composed = options && Boolean(options.composed);\n    return event;\n  }\n  // put constructor properties on subclass\n  utils.mixin(klazz, Base);\n  klazz.prototype = Base.prototype;\n  return klazz;\n}\n\nlet nonBubblingEventsToRetarget = {\n  focus: true,\n  blur: true\n};\n\nfunction fireHandlers(event, node, phase) {\n  let hs = node.__handlers && node.__handlers[event.type] &&\n    node.__handlers[event.type][phase];\n  if (hs) {\n    for (let i = 0, fn; (fn = hs[i]); i++) {\n      fn.call(node, event);\n      if (event.__immediatePropagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction retargetNonBubblingEvent(e) {\n  let path = e.composedPath();\n  let node;\n  // override `currentTarget` to let patched `target` calculate correctly\n  Object.defineProperty(e, 'currentTarget', {\n    get: function() {\n      return node;\n    },\n    configurable: true\n  });\n  for (let i = path.length - 1; i >= 0; i--) {\n    node = path[i];\n    fireHandlers(e, node, 'capture');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n  Object.defineProperty(e, 'eventPhase', {value: Event.BUBBLING_PHASE});\n  for (let i = 0; i < path.length; i++) {\n    node = path[i];\n    fireHandlers(e, node, 'bubble');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n}\n\nfunction shouldCapture(optionsOrCapture) {\n  return Boolean(typeof optionsOrCapture === 'object' ?\n    optionsOrCapture.capture : optionsOrCapture);\n}\n\nexport function addEventListener(type, fn, optionsOrCapture) {\n  if (!fn) {\n    return;\n  }\n  // TODO: investigate if this is worth tracking, as it is only used for\n  // deciding if the `slotchanged` event should be fired\n  if (!this.__eventListenerCount) {\n    this.__eventListenerCount = 0;\n  }\n  this.__eventListenerCount++;\n  let wrappedFn = function(e) {\n    if (!e.__target) {\n      e.__target = e.target;\n      e.__relatedTarget = e.relatedTarget;\n      utils.patchPrototype(e, EventMixin);\n    }\n    // There are two critera that should stop events from firing on this node\n    // 1. the event is not composed and the current node is not in the same root as the target\n    // 2. when bubbling, if after retargeting, relatedTarget and target point to the same node\n    if (e.composed || e.composedPath().indexOf(this) > -1) {\n      if (e.eventPhase === Event.BUBBLING_PHASE) {\n        if (e.target === e.relatedTarget) {\n          e.stopImmediatePropagation();\n          return;\n        }\n      }\n      return fn(e);\n    }\n  };\n  fn.__eventWrapper = wrappedFn;\n  if (nonBubblingEventsToRetarget[type]) {\n    this.__handlers = this.__handlers || {};\n    this.__handlers[type] = this.__handlers[type] || {capture: [], bubble: []};\n    if (shouldCapture(optionsOrCapture)) {\n      this.__handlers[type].capture.push(wrappedFn);\n    } else {\n      this.__handlers[type].bubble.push(wrappedFn);\n    }\n  } else {\n    origAddEventListener.call(this, type, wrappedFn, optionsOrCapture);\n  }\n}\n\nexport function removeEventListener(type, fn, optionsOrCapture) {\n  if (!fn) {\n    return;\n  }\n  let wrapper = fn.__eventWrapper;\n  origRemoveEventListener.call(this, type, wrapper || fn, optionsOrCapture);\n  if (wrapper) {\n    fn.__eventWrapper = null;\n    this.__eventListenerCount--;\n    if (nonBubblingEventsToRetarget[type]) {\n      if (this.__handlers) {\n        if (this.__handlers[type]) {\n          let idx;\n          if (shouldCapture(optionsOrCapture)) {\n            idx = this.__handlers[type].capture.indexOf(wrapper);\n            if (idx > -1) {\n              this.__handlers[type].capture.splice(idx, 1);\n            }\n          } else {\n            idx = this.__handlers[type].bubble.indexOf(wrapper);\n            if (idx > -1) {\n              this.__handlers[type].bubble.splice(idx, 1);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfor (let ev in nonBubblingEventsToRetarget) {\n  window.addEventListener(ev, function(e) {\n    if (!e.__target) {\n      e.__target = e.target;\n      e.__relatedTarget = e.relatedTarget;\n      utils.patchPrototype(e, EventMixin);\n      retargetNonBubblingEvent(e);\n      e.stopImmediatePropagation();\n    }\n  }, true);\n}\n\nexport let OriginalEvent = Event;\nexport let PatchedEvent = mixinComposedFlag(Event);\nexport let PatchedCustomEvent = mixinComposedFlag(CustomEvent);\nexport let PatchedMouseEvent = mixinComposedFlag(MouseEvent);","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\n'use strict';\nimport * as utils from './utils'\nimport {ShadyRoot, flush, enqueue} from './shady'\nimport * as patch from './patch'\nimport {getRootNode, filterMutations, observeChildren, unobserveChildren}\n  from './element-mixin'\nimport * as events from './event-mixin'\n\nif (utils.settings.inUse) {\n\n  window.ShadyDOM = {\n    patch: patch.patchNode,\n    isPatched: patch.isNodePatched,\n    unpatch: patch.unpatchNode,\n    isShadyRoot: utils.isShadyRoot,\n    enqueue: enqueue,\n    flush: flush,\n    inUse: utils.settings.inUse,\n    filterMutations: filterMutations,\n    observeChildren: observeChildren,\n    unobserveChildren: unobserveChildren\n  };\n\n  let createRootAndEnsurePatched = function(node) {\n    // TODO(sorvell): need to ensure ancestors are patched but this introduces\n    // a timing problem with gathering composed children.\n    // (1) currently the child list is crawled and patched when patching occurs\n    // (this needs to change)\n    // (2) we can only patch when an element has received its parsed children\n    // because we cannot detect them when inserted by parser.\n    // let ancestor = node;\n    // while (ancestor) {\n    //   patchNode(ancestor);\n    //   ancestor = ancestor.parentNode || ancestor.host;\n    // }\n    patch.patchNode(node);\n    let root = new ShadyRoot(node);\n    patch.patchNode(root);\n    return root;\n  }\n\n  Element.prototype.attachShadow = function() {\n    return createRootAndEnsurePatched(this);\n  }\n\n  Node.prototype.addEventListener = events.addEventListener;\n  Node.prototype.removeEventListener = events.removeEventListener;\n  Event = events.PatchedEvent;\n  CustomEvent = events.PatchedCustomEvent;\n  MouseEvent = events.PatchedMouseEvent;\n\n  Object.defineProperty(Node.prototype, 'isConnected', {\n    get() {\n      return document.contains(this);\n    },\n    configurable: true\n  });\n\n  Node.prototype.getRootNode = function(options) {\n    return getRootNode(this, options);\n  }\n\n  Object.defineProperty(Element.prototype, 'slot', {\n    get() {\n      return this.getAttribute('slot');\n    },\n    set(value) {\n      this.setAttribute('slot', value);\n    },\n    configurable: true\n  });\n\n  Object.defineProperty(Node.prototype, 'assignedSlot', {\n    get() {\n      return this._assignedSlot || null;\n    },\n    configurable: true\n  });\n\n  // TODO(sorvell): super experimental auto patching of document fragment\n  // via appendChild. This either needs to be expanded or contracted.\n  // DocumentFragment.prototype.appendChild = function(node) {\n  //   patchNode(this);\n  //   return this.appendChild(node);\n  // }\n\n}\n"],"sourceRoot":"/source/"}