{"version":3,"sources":[" [synthetic:base] "," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:util/polyfill] "," [synthetic:es6/object/setprototypeof] ","src/array-splice.js","src/getrootnode.js","src/utils.js","src/tree.js","src/distributor.js","src/innerHTML.js","src/element-mixin.js","src/shady.js","src/patch.js","src/event-mixin.js","src/env.js"],"names":["newSplice$$module$$src$array_splice","newSplice","index","removed","addedCount","EDIT_LEAVE","EDIT_UPDATE","EDIT_ADD","EDIT_DELETE","ArraySplice","calcEditDistances","current","currentStart","currentEnd","old","oldStart","oldEnd","rowCount","columnCount","distances","Array","i","j","equals","north","west","spliceOperationsFromEditDistances","length","edits","push","northWest","min","reverse","calcSplices","prefixCount","suffixCount","minLength","Math","sharedPrefix","sharedSuffix","splice","ops","undefined","splices","oldIndex","searchLength","index1","index2","count","calculateSplices","previous","currentValue","previousValue","calculateSplices$$module$$src$array_splice","module$$src$array_splice","Element","prototype","Node","options","composed","curNode","rootNode","parentNode","host","settings","window","ShadyDOM","hasNativeShadowDOM","attachShadow","inUse","force","isShadyRoot$$module$$src$utils","isShadyRoot","obj","__localName","p","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","matchesSelector$$module$$src$utils","element","selector","call","copyOwnProperty$$module$$src$utils","copyOwnProperty","name","source","target","pd","Object","getOwnPropertyDescriptor","defineProperty","extend$$module$$src$utils","extend","n$","getOwnPropertyNames","n","extendAll$$module$$src$utils","extendAll","sources","mixin$$module$$src$utils","mixin","patchPrototype$$module$$src$utils","patchPrototype","proto","getPrototypeOf","hasOwnProperty","patchProto","create","__sourceProto","__patchProto","setPrototypeOf","unpatchPrototype$$module$$src$utils","unpatchPrototype","common","module$$src$utils","nativeInsertBefore","insertBefore","nativeAppendChild","appendChild","nativeRemoveChild","removeChild","tree","arrayCopyChildNodes","parent","copy","firstChild","nextSibling","arrayCopyChildren","firstElementChild","nextElementSibling","arrayCopy","a$","l","saveChildNodes","node","Logical","Composed","hasParentNode","saveComposedData","__dom","hasChildNodes","childNodes","getChildNodes","_getChildNodes","getFirstChild","getNextSibling","getParentNode","getLastChild","lastChild","getPreviousSibling","previousSibling","getFirstElementChild","_getFirstElementChild","nodeType","ELEMENT_NODE","getLastElementChild","_getLastElementChild","getNextElementSibling","_getNextElementSibling","getPreviousElementSibling","_getPreviousElementSibling","c$","patchNode","recordInsertBefore","container","ref_node","DOCUMENT_FRAGMENT_NODE","_linkNode","recordRemoveChild","$parentNode","$childNodes","__patched","$firstChild","$nextSibling","getComposedChildNodes","$lastChild","$previousSibling","lastElementChild","previousElementSibling","clearChildNodes","c","saveParentNode","newChild","refChild","_addChild","currentParent","_removeChild","isFrag","oldParent","descriptors","getNativeProperty$$module$$src$tree","getNativeProperty","property","HTMLElement","get","assertNative$$module$$src$tree","assertNative","tracked","native","console","warn","module$$src$tree","$jscompDefaultExport","constructor","root","insertionPointTag","getInsertionPoints","querySelectorAll","hasInsertionPoint","_insertionPoints","isInsertionPoint","localName","reset","children","resetChild","p$","resetInsertionPoint","child","_assignedSlot","insertionPoint","_distributedNodes","_assignedNodes","distribute","distributePool","collectPool","pool","dirtyRoots","distributeInsertionPoint","shadyRoot","anyDistributed","matchesInsertionPoint","distributeNodeInto","setDistributedNodesOnInsertionPoint","slotName","getAttribute","trim","slot","d$","isFinalDestination","rendered","ip$","__eventListenerCount","dispatchEvent","Event","cancelable","module$$src$distributor","default","escapeAttrRegExp","escapeDataRegExp","escapeReplace$$module$$src$innerHTML","escapeReplace","escapeAttr$$module$$src$innerHTML","escapeAttr","s","replace","escapeData$$module$$src$innerHTML","escapeData","makeSet$$module$$src$innerHTML","makeSet","arr","set","voidElements","plaintextParents","getOuterHTML$$module$$src$innerHTML","getOuterHTML","tagName","attrs","attributes","attr","value","getInnerHTML","TEXT_NODE","data","COMMENT_NODE","error","Error","getInnerHTML$$module$$src$innerHTML","content","module$$src$innerHTML","mixinImpl","addNode","ownerRoot","ownerShadyRootForNode","__noInsertionPoint","_skipUpdateInsertionPoints","_maybeAddInsertionPoint","ipAdded","_addedNode","handled","_maybeDistribute","removeNode","logicalParent","distributed","maybeDistributeParent","_removeDistributedChildren","getInsertionPointTag","update","_removeOwnerShadyRoot","_removedNode","removeNodeFromParent","_hasCachedOwnerRoot","__ownerShadyRoot","getRootNode","document","contains","fragContent","querySelector","wrappedContent","hasContent","needsDist","_nodeNeedsDistribution","added","np","na","hostNeedsDist","_contains","dc$","assignedNodes","flatten","firstComposedNode","clearNode","maybeDistributeAttributeChange","query","matcher","halter","list","_queryElements","elements","_queryElement","result","activeElementForNode","active","activeElement","activeRoot","nativeCloneNode","cloneNode","nativeImportNode","Document","importNode","nativeSetAttribute","setAttribute","nativeRemoveAttribute","removeAttribute","NodeMixin","defineProperties","parentElement","configurable","assignedSlot","FragmentMixin","replaceChild","deep","nc","externalNode","doc","ownerDocument","isArray","filter","textContent","tc","cn","join","text","createTextNode","innerHTML","d","createElement","ElementMixin","shadowRoot","activeElementDescriptor","ActiveElementMixin","UnderActiveElementMixin","_activeElement","Mixins","Fragment","module$$src$element_mixin","ShadyRoot","frag","createDocumentFragment","__proto__","ShadyFragmentMixin","_init","ShadyMixin","_clean","_hasRendered","_distributor","distributionRoot","_findDistributionRoot","enqueue","render","_elementNeedsDistribution","updateInsertionPoints","compose","forceRender","i$","__insertionPoints","insertionPoints","_composeTree","_updateChildNodes","_composeNode","distributedNodes","distributedNode","next","DocumentFragment","customElements","CustomElements","flushList","scheduled","enqueue$$module$$src$shady","callback","Promise","resolve","then","flush","flush$$module$$src$shady","shift","takeRecords","module$$src$shady","patchedCount","log","patchImpl","canPatchNode","head","documentElement","hasPrototypeDescriptors","patch","mixinForObject","mixinForNode","DOCUMENT_NODE","unpatch","patchNode$$module$$src$patch","isNodePatched","unpatchNode$$module$$src$patch","unpatchNode","isNodePatched$$module$$src$patch","module$$src$patch","origAddEventListener","addEventListener","origRemoveEventListener","removeEventListener","alwaysComposed","blur","focus","focusin","focusout","click","dblclick","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","wheel","beforeinput","input","keydown","keyup","compositionstart","compositionupdate","compositionend","touchstart","touchend","touchmove","touchcancel","pointerover","pointerenter","pointerdown","pointermove","pointerup","pointercancel","pointerout","pointerleave","gotpointercapture","lostpointercapture","dragstart","drag","dragenter","dragleave","dragover","drop","dragend","DOMActivate","DOMFocusIn","DOMFocusOut","keypress","pathComposer$$module$$src$event_mixin","pathComposer","startNode","composedPath","startRoot","retarget$$module$$src$event_mixin","retarget","refNode","path","refNodePath","ancestor","lastRoot","rootIdx","indexOf","EventMixin","isTrusted","__composed","type","__composedPath","__target","currentTarget","relatedTarget","__relatedTarget","__relatedTargetComposedPath","stopPropagation","__propagationStopped","stopImmediatePropagation","__immediatePropagationStopped","mixinComposedFlag$$module$$src$event_mixin","mixinComposedFlag","Base","klazz","event","nonBubblingEventsToRetarget","fireHandlers$$module$$src$event_mixin","fireHandlers","phase","hs","__handlers","fn","retargetNonBubblingEvent$$module$$src$event_mixin","retargetNonBubblingEvent","e","BUBBLING_PHASE","shouldCapture$$module$$src$event_mixin","shouldCapture","optionsOrCapture","capture","addEventListener$$module$$src$event_mixin","wrappedFn","eventPhase","__eventWrapper","bubble","removeEventListener$$module$$src$event_mixin","wrapper","idx","ev","OriginalEvent","PatchedEvent","PatchedCustomEvent","CustomEvent","PatchedMouseEvent","MouseEvent","module$$src$event_mixin","isPatched","createRootAndEnsurePatched","Element.prototype.attachShadow","Node.prototype.getRootNode"],"mappings":"A;;;;;;;;;;aAyBA,IAAI,QAAU,CAGN,MAAQ,EAHF,CCWd,QAAA,eAAA,CACsC,UAAlC,EAAA,MAAO,OAAA,iBAAP,CACA,MAAA,eADA,CAEA,QAAQ,CAAC,CAAD,CAAS,CAAT,CAAmB,CAAnB,CAA+B,CAErC,GAAI,CAAA,IAAJ,EAAsB,CAAA,IAAtB,CACE,KAAM,KAAI,SAAJ,CAAc,2CAAd,CAAN,CAEE,CAAJ,EAAc,KAAA,UAAd,EAAiC,CAAjC,EAA2C,MAAA,UAA3C,GACA,CAAA,CAAO,CAAP,CADA,CACmB,CAAA,MADnB,CALqC,CCV3C,QAAA,UAAA,CAAoB,QAAQ,CAAC,CAAD,CAAc,CACxC,MAAyB,WAAlB,EAAC,MAAO,OAAR,EAAiC,MAAjC,GAA4C,CAA5C,CACH,CADG,CAEe,WAAlB,EAAC,MAAO,OAAR,CAAiC,MAAjC,CAA0C,CAHN,CAc1C,QAAA,OAAA,CAAiB,OAAA,UAAA,CAAkB,IAAlB,CCdjB;OAAA,SAAA,CAAmB,QAAQ,CAAC,CAAD,CAAS,CAAT,CAAmB,CAAnB,CAA6B,CAA7B,CAAqC,CAC9D,GAAK,CAAL,CAAA,CACI,CAAA,CAAM,OAAA,OACN,EAAA,CAAQ,CAAA,MAAA,CAAa,GAAb,CACZ,KAAS,CAAT,CAAa,CAAb,CAAgB,CAAhB,CAAoB,CAAA,OAApB,CAAmC,CAAnC,CAAsC,CAAA,EAAtC,CAA2C,CACzC,IAAI,EAAM,CAAA,CAAM,CAAN,CACJ,EAAN,GAAa,EAAb,GAAmB,CAAA,CAAI,CAAJ,CAAnB,CAA8B,EAA9B,CACA,EAAA,CAAM,CAAA,CAAI,CAAJ,CAHmC,CAKvC,CAAA,CAAW,CAAA,CAAM,CAAA,OAAN,CAAqB,CAArB,CACX,EAAA,CAAO,CAAA,CAAI,CAAJ,CACP,EAAA,CAAO,CAAA,CAAS,CAAT,CACP,EAAJ,EAAY,CAAZ,EAA4B,IAA5B,EAAoB,CAApB,EACA,OAAA,eAAA,CACI,CADJ,CACS,CADT,CACmB,CAAC,aAAc,CAAA,CAAf,CAAqB,SAAU,CAAA,CAA/B,CAAqC,MAAO,CAA5C,CADnB,CAZA,CAD8D,CCVhE,QAAA,SAAA,CAAiB,uBAAjB,CAA0C,QAAQ,CAAC,CAAD,CAAO,CACvD,MAAI,EAAJ,CAAiB,CAAjB,CAG2B,QAA3B,EAAI,MAAO,EAAA,UAAX,CAA4C,IAA5C,CAYe,QAAQ,CAAC,CAAD,CAAS,CAAT,CAAgB,CACrC,CAAA,UAAA,CAAmB,CACnB,IAAI,CAAA,UAAJ,GAAyB,CAAzB,CACE,KAAM,KAAI,SAAJ,CAAc,CAAd,CAAuB,oBAAvB,CAAN,CAEF,MAAO,EAL8B,CAhBgB,CAAzD,CAwBG,KAxBH,CAwBU,KAxBV,CCTC,KAAA,yBAAA,EAEDA;QAASC,oCAAS,CAACC,CAAD,CAAQC,CAAR,CAAiBC,CAAjB,CAA6B,CAC7C,MAAO,CACLF,MAAOA,CADF,CAELC,QAASA,CAFJ,CAGLC,WAAYA,CAHP,CADsC;AAQ/C,IAAMC,qCAAa,CAAnB,CACMC,sCAAc,CADpB,CAEMC,mCAAW,CAFjB,CAGMC,sCAAc,CAHpB,CAKIC,sCAAc,CAahBC,kBAAAA,QAAiB,CAACC,CAAD,CAAUC,CAAV,CAAwBC,CAAxB,CACWC,CADX,CACgBC,CADhB,CAC0BC,CAD1B,CACkC,CAE7CC,CAAAA,CAAWD,CAAXC,CAAoBF,CAApBE,CAA+B,CAC/BC,EAAAA,CAAcL,CAAdK,CAA2BN,CAA3BM,CAA0C,CAI9C,KAHA,IAAIC,EAAgBC,KAAJ,CAAUH,CAAV,CAAhB,CAGSI,EAAI,CAAb,CAAgBA,CAAhB,CAAoBJ,CAApB,CAA8BI,CAAA,EAA9B,CACEF,CAAA,CAAUE,CAAV,CACA,CADmBD,KAAJ,CAAUF,CAAV,CACf,CAAAC,CAAA,CAAUE,CAAV,CAAA,CAAa,CAAb,CAAA,CAAkBA,CAIpB,KAASC,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBJ,CAApB,CAAiCI,CAAA,EAAjC,CACEH,CAAA,CAAU,CAAV,CAAA,CAAaG,CAAb,CAAA,CAAkBA,CAEpB,KAASD,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBJ,CAApB,CAA8BI,CAAA,EAA9B,CACE,IAAK,IAAIC,EAAI,CAAb,CAAgBA,CAAhB,CAAoBJ,CAApB,CAAiCI,CAAA,EAAjC,CACE,GAAI,IAAAC,OAAA,CAAYZ,CAAA,CAAQC,CAAR,CAAuBU,CAAvB,CAA2B,CAA3B,CAAZ,CAA2CR,CAAA,CAAIC,CAAJ,CAAeM,CAAf,CAAmB,CAAnB,CAA3C,CAAJ,CACEF,CAAA,CAAUE,CAAV,CAAA,CAAaC,CAAb,CAAA,CAAkBH,CAAA,CAAUE,CAAV,CAAc,CAAd,CAAA,CAAiBC,CAAjB,CAAqB,CAArB,CADpB,KAEK,CACH,IAAIE,EAAQL,CAAA,CAAUE,CAAV,CAAc,CAAd,CAAA,CAAiBC,CAAjB,CAARE,CAA8B,CAAlC,CACIC,EAAON,CAAA,CAAUE,CAAV,CAAA,CAAaC,CAAb,CAAiB,CAAjB,CAAPG,CAA6B,CACjCN,EAAA,CAAUE,CAAV,CAAA,CAAaC,CAAb,CAAA,CAAkBE,CAAA,CAAQC,CAAR,CAAeD,CAAf,CAAuBC,CAHtC,CAQT,MAAON,EA5B0C,CAdnC,CAgDhBO,kCAAAA,QAAiC,CAACP,CAAD,CAAY,CAK3C,IAJA,IAAIE;AAAIF,CAAAQ,OAAJN,CAAuB,CAA3B,CACIC,EAAIH,CAAA,CAAU,CAAV,CAAAQ,OAAJL,CAA0B,CAD9B,CAEIX,EAAUQ,CAAA,CAAUE,CAAV,CAAA,CAAaC,CAAb,CAFd,CAGIM,EAAQ,EACZ,CAAW,CAAX,CAAOP,CAAP,EAAoB,CAApB,CAAgBC,CAAhB,CAAA,CACE,GAAS,CAAT,EAAID,CAAJ,CACEO,CAAAC,KAAA,CAAWtB,kCAAX,CACA,CAAAe,CAAA,EAFF,KAKA,IAAS,CAAT,EAAIA,CAAJ,CACEM,CAAAC,KAAA,CAAWrB,qCAAX,CACA,CAAAa,CAAA,EAFF,KAAA,CAKA,IAAIS,EAAYX,CAAA,CAAUE,CAAV,CAAc,CAAd,CAAA,CAAiBC,CAAjB,CAAqB,CAArB,CAAhB,CACIG,EAAON,CAAA,CAAUE,CAAV,CAAc,CAAd,CAAA,CAAiBC,CAAjB,CADX,CAEIE,EAAQL,CAAA,CAAUE,CAAV,CAAA,CAAaC,CAAb,CAAiB,CAAjB,CAFZ,CAIIS,CAEFA,EAAA,CADEN,CAAJ,CAAWD,CAAX,CACQC,CAAA,CAAOK,CAAP,CAAmBL,CAAnB,CAA0BK,CADlC,CAGQN,CAAA,CAAQM,CAAR,CAAoBN,CAApB,CAA4BM,CAEhCC,EAAJ,EAAWD,CAAX,EACMA,CAAJ,EAAiBnB,CAAjB,CACEiB,CAAAC,KAAA,CAAWxB,oCAAX,CADF,EAGEuB,CAAAC,KAAA,CAAWvB,qCAAX,CACA,CAAAK,CAAA,CAAUmB,CAJZ,CAOA,CADAT,CAAA,EACA,CAAAC,CAAA,EARF,EASWS,CAAJ,EAAWN,CAAX,EACLG,CAAAC,KAAA,CAAWrB,qCAAX,CAEA,CADAa,CAAA,EACA,CAAAV,CAAA,CAAUc,CAHL,GAKLG,CAAAC,KAAA,CAAWtB,kCAAX,CAEA,CADAe,CAAA,EACA,CAAAX,CAAA,CAAUa,CAPL,CAxBP,CAmCFI,CAAAI,QAAA,EACA,OAAOJ,EA/CoC,CAhD7B,CA0HhBK,YAAAA,QAAW,CAACtB,CAAD;AAAUC,CAAV,CAAwBC,CAAxB,CACWC,CADX,CACgBC,CADhB,CAC0BC,CAD1B,CACkC,CAC3C,IAAIkB,EAAc,CAAlB,CACIC,EAAc,CADlB,CAIIC,EAAYC,IAAAN,IAAA,CAASlB,CAAT,CAAsBD,CAAtB,CAAoCI,CAApC,CAA6CD,CAA7C,CACI,EAApB,EAAIH,CAAJ,EAAqC,CAArC,EAAyBG,CAAzB,GACEmB,CADF,CACgB,IAAAI,aAAA,CAAkB3B,CAAlB,CAA2BG,CAA3B,CAAgCsB,CAAhC,CADhB,CAGIvB,EAAJ,EAAkBF,CAAAgB,OAAlB,EAAoCX,CAApC,EAA8CF,CAAAa,OAA9C,GACEQ,CADF,CACgB,IAAAI,aAAA,CAAkB5B,CAAlB,CAA2BG,CAA3B,CAAgCsB,CAAhC,CAA4CF,CAA5C,CADhB,CAGAtB,EAAA,EAAgBsB,CAChBnB,EAAA,EAAYmB,CACZrB,EAAA,EAAcsB,CACdnB,EAAA,EAAUmB,CAEV,IAAiC,CAAjC,EAAItB,CAAJ,CAAiBD,CAAjB,EAA2D,CAA3D,EAAsCI,CAAtC,CAA+CD,CAA/C,CACE,MAAO,EAET,IAAIH,CAAJ,EAAoBC,CAApB,CAAgC,CAE9B,IADA2B,CACA,CADSvC,mCAAA,CAAUW,CAAV,CAAwB,EAAxB,CAA4B,CAA5B,CACT,CAAOG,CAAP,CAAkBC,CAAlB,CAAA,CACEwB,CAAArC,QAAA0B,KAAA,CAAoBf,CAAA,CAAIC,CAAA,EAAJ,CAApB,CAEF,OAAO,CAAEyB,CAAF,CALuB,CAMzB,GAAIzB,CAAJ,EAAgBC,CAAhB,CACL,MAAO,CAAEf,mCAAA,CAAUW,CAAV,CAAwB,EAAxB,CAA4BC,CAA5B,CAAyCD,CAAzC,CAAF,CAEL6B,EAAAA,CAAM,IAAAf,kCAAA,CACN,IAAAhB,kBAAA,CAAuBC,CAAvB,CAAgCC,CAAhC,CAA8CC,CAA9C,CACuBC,CADvB,CAC4BC,CAD5B,CACsCC,CADtC,CADM,CAIVwB,EAAA,CAASE,IAAAA,EACLC,EAAAA,CAAU,EAGd,KAAStB,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBoB,CAAAd,OAApB,CAAgCN,CAAA,EAAhC,CACE,OAAOoB,CAAA,CAAIpB,CAAJ,CAAP,EACE,KAAKhB,oCAAL,CACMmC,CAAJ;CACEG,CAAAd,KAAA,CAAaW,CAAb,CACA,CAAAA,CAAA,CAASE,IAAAA,EAFX,CAKAxC,EAAA,EACA0C,EAAA,EACA,MACF,MAAKtC,qCAAL,CACOkC,CAAL,GACEA,CADF,CACWvC,mCAAA,CAAUC,CAAV,CAAiB,EAAjB,CAAqB,CAArB,CADX,CAGAsC,EAAApC,WAAA,EACAF,EAAA,EAEAsC,EAAArC,QAAA0B,KAAA,CAAoBf,CAAA,CAAI8B,CAAJ,CAApB,CACAA,EAAA,EACA,MACF,MAAKrC,kCAAL,CACOiC,CAAL,GACEA,CADF,CACWvC,mCAAA,CAAUC,CAAV,CAAiB,EAAjB,CAAqB,CAArB,CADX,CAGAsC,EAAApC,WAAA,EACAF,EAAA,EACA,MACF,MAAKM,qCAAL,CACOgC,CAIL,GAHEA,CAGF,CAHWvC,mCAAA,CAAUC,CAAV,CAAiB,EAAjB,CAAqB,CAArB,CAGX,EADAsC,CAAArC,QAAA0B,KAAA,CAAoBf,CAAA,CAAI8B,CAAJ,CAApB,CACA,CAAAA,CAAA,EAhCJ,CAqCEJ,CAAJ,EACEG,CAAAd,KAAA,CAAaW,CAAb,CAEF,OAAOG,EA9EoC,CA3H7B,CA4MhBL,aAAAA,QAAY,CAAC3B,CAAD,CAAUG,CAAV,CAAe+B,CAAf,CAA6B,CACvC,IAAK,IAAIxB,EAAI,CAAb,CAAgBA,CAAhB,CAAoBwB,CAApB,CAAkCxB,CAAA,EAAlC,CACE,GAAK,CAAA,IAAAE,OAAA,CAAYZ,CAAA,CAAQU,CAAR,CAAZ;AAAwBP,CAAA,CAAIO,CAAJ,CAAxB,CAAL,CACE,MAAOA,EACX,OAAOwB,EAJgC,CA5MzB,CAmNhBN,aAAAA,QAAY,CAAC5B,CAAD,CAAUG,CAAV,CAAe+B,CAAf,CAA6B,CAIvC,IAHA,IAAIC,EAASnC,CAAAgB,OAAb,CACIoB,EAASjC,CAAAa,OADb,CAEIqB,EAAQ,CACZ,CAAOA,CAAP,CAAeH,CAAf,EAA+B,IAAAtB,OAAA,CAAYZ,CAAA,CAAQ,EAAEmC,CAAV,CAAZ,CAA+BhC,CAAA,CAAI,EAAEiC,CAAN,CAA/B,CAA/B,CAAA,CACEC,CAAA,EAEF,OAAOA,EAPgC,CAnNzB,CA6NhBC,iBAAAA,QAAgB,CAACtC,CAAD,CAAUuC,CAAV,CAAoB,CAClC,MAAO,KAAAjB,YAAA,CAAiBtB,CAAjB,CAA0B,CAA1B,CAA6BA,CAAAgB,OAA7B,CAA6CuB,CAA7C,CAAuD,CAAvD,CACiBA,CAAAvB,OADjB,CAD2B,CA7NpB,CAkOhBJ,OAAAA,QAAM,CAAC4B,CAAD,CAAeC,CAAf,CAA8B,CAClC,MAAOD,EAAP,GAAwBC,CADU,CAlOpB,CALlB,CA6OWH,2CAAmBI,QAAA,CAAC1C,CAAD,CAAUuC,CAAV,CAC5B,CAAA,MAAAzC,sCAAAwC,iBAAA,CAA6BtC,CAA7B,CAAsCuC,CAAtC,CAAA,CADSI,yBAAAL,iBAAA,CAAAA,0C,CCvPV,IAAA,wBAAA,EAOGM,QAAAC,UAAA,aAAJ,EAA0C,CAAAC,IAAAD,UAAA,YAA1C,GACEC,IAAAD,UAAA,YADF,CACkC,QAAQ,CAACE,CAAD,CAAU,CAC5CC,CAAAA,CAAWD,CAAXC,EAAsBD,CAAA,SAG1B,KAFA,IAAIE,EAAU,IAAd,CACIC,EAAW,IACf,CAAOD,CAAP,CAAA,CACEC,CACA,CADWD,CACX,CAAAA,CAAA,CAAUA,CAAAE,WAAV,EAAiCH,CAAjC,EAA6CC,CAAAG,KAE/C,OAAOF,EARyC,CADpD,C,CCPC,IAAA,kBAAA,EAAA,CAGUG,4BAAWC,MAAAC,SAAXF,EAA8B,EAEzCA,4BAAAG,mBAAA,CAA8B,CAAQC,CAAAb,OAAAC,UAAAY,aAEtCJ,4BAAAK,MAAA,CAAiBL,2BAAAM,MAAjB,EAAmC,CAACN,2BAAAG,mBAE7BI,SAASC,+BAAW,CAACC,CAAD,CAAM,CAC/B,MAAmC,WAAnC,GAAeA,CAAAC,YADgB;AAIjC,IAAIC,qBAAIpB,OAAAC,UAAR,CACIoB,2BAAUD,oBAAAC,QAAVA,EAAuBD,oBAAAE,gBAAvBD,EACFD,oBAAAG,mBADEF,EACsBD,oBAAAI,kBADtBH,EAEFD,oBAAAK,iBAFEJ,EAEoBD,oBAAAM,sBAEjBC,SAASL,mCAAe,CAACM,CAAD,CAAUC,CAAV,CAAoB,CACjD,MAAOR,2BAAAS,KAAA,CAAaF,CAAb,CAAsBC,CAAtB,CAD0C;AAInDE,QAASC,mCAAe,CAACC,CAAD,CAAOC,CAAP,CAAeC,CAAf,CAAuB,CAE7C,CADIC,CACJ,CADSC,MAAAC,yBAAA,CAAgCJ,CAAhC,CAAwCD,CAAxC,CACT,GACEI,MAAAE,eAAA,CAAsBJ,CAAtB,CAA8BF,CAA9B,CAAoCG,CAApC,CAH2C,CAOxCI,QAASC,0BAAM,CAACN,CAAD,CAASD,CAAT,CAAiB,CACrC,GAAIC,CAAJ,EAAcD,CAAd,CAEE,IADA,IAAIQ,EAAKL,MAAAM,oBAAA,CAA2BT,CAA3B,CAAT,CACSpE,EAAE,CADX,CACc8E,CAAd,CAAkB9E,CAAlB,CAAoB4E,CAAAtE,OAApB,GAAmCwE,CAAnC,CAAqCF,CAAA,CAAG5E,CAAH,CAArC,EAA6CA,CAAA,EAA7C,CACEkE,kCAAA,CAAgBY,CAAhB,CAAmBV,CAAnB,CAA2BC,CAA3B,CAGJ,OAAOA,EAAP,EAAiBD,CAPoB,CAUhCW,QAASC,6BAAS,CAACX,CAAD,CAAS,CAAT,CAAqB,CAAZ,IAAA,IAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,SAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA,CAAA,CAAA,CAChC,KAASrE,CAAT,CAAW,CAAX,CAAcA,CAAd,CAD4CiF,CAC1B3E,OAAlB,CAAkCN,CAAA,EAAlC,CACE2E,yBAAA,CAAON,CAAP,CAF0CY,CAE3B,CAAQjF,CAAR,CAAf,CAEF,OAAOqE,EAJqC;AAOvCa,QAASC,yBAAK,CAACd,CAAD,CAASD,CAAT,CAAiB,CACpC,IAAKpE,IAAIA,CAAT,GAAcoE,EAAd,CACEC,CAAA,CAAOrE,CAAP,CAAA,CAAYoE,CAAA,CAAOpE,CAAP,CAEd,OAAOqE,EAJ6B,CAO/Be,QAASC,kCAAc,CAACjC,CAAD,CAAM+B,CAAN,CAAa,CACzC,IAAIG,EAAQf,MAAAgB,eAAA,CAAsBnC,CAAtB,CACZ,IAAK,CAAAkC,CAAAE,eAAA,CAAqB,cAArB,CAAL,CAA2C,CACzC,IAAIC,EAAalB,MAAAmB,OAAA,CAAcJ,CAAd,CACjBG,EAAAE,cAAA,CAA2BL,CAC3BX,0BAAA,CAAOc,CAAP,CAAmBN,CAAnB,CACAG,EAAAM,aAAA,CAAqBH,CAJoB,CAM3ClB,MAAAsB,eAAA,CAAsBzC,CAAtB,CAA2BkC,CAAAM,aAA3B,CARyC,CAWpCE,QAASC,oCAAgB,CAAC3C,CAAD,CAAM,CAChCA,CAAAuC,cAAJ,EACEpB,MAAAsB,eAAA,CAAsBzC,CAAtB,CAA2BA,CAAAuC,cAA3B,CAFkC,CAM/B,IAAIK,0BAAS,EAnETC,kBAAAtD,SAAA,CAAAA,2BAMKsD;iBAAA9C,YAAA,CAAAA,8BASA8C,kBAAAzC,gBAAA,CAAAA,kCAWAyC,kBAAAtB,OAAA,CAAAA,yBAUAsB,kBAAAjB,UAAA,CAAAA,4BAOAiB,kBAAAd,MAAA,CAAAA,wBAOAc,kBAAAZ,eAAA,CAAAA,iCAWAY,kBAAAF,iBAAA,CAAAA,mCAMLE,kBAAAD,OAAA,CAAAA,yB,CCtEV,IAAA,iBAAA,EAAA,CAQGE,qCAAqBhE,OAAAC,UAAAgE,aARxB,CASGC,oCAAoBlE,OAAAC,UAAAkE,YATvB,CAUGC,oCAAoBpE,OAAAC,UAAAoE,YAVvB,CAgBUC,uBAAO,CAGhBC,oBAAAA,QAAmB,CAACC,CAAD,CAAS,CAAA,IACtBC,EAAK,EADiB,CACb3G,EAAE,CACf,KAAS8E,CAAT,CAAW4B,CAAAE,WAAX,CAA8B9B,CAA9B,CAAiCA,CAAjC,CAAmCA,CAAA+B,YAAnC,CACEF,CAAA,CAAK3G,CAAA,EAAL,CAAA,CAAY8E,CAEd,OAAO6B,EALmB,CAHZ,CAWhBG,kBAAAA,QAAiB,CAACJ,CAAD,CAAS,CAAA,IACpBC,EAAK,EADe,CACX3G,EAAE,CACf,KAAS8E,CAAT,CAAW4B,CAAAK,kBAAX,CAAqCjC,CAArC,CAAwCA,CAAxC,CAA0CA,CAAAkC,mBAA1C,CACEL,CAAA,CAAK3G,CAAA,EAAL,CAAA,CAAY8E,CAEd,OAAO6B,EALiB,CAXV,CAmBhBM,UAAAA,QAAS,CAACC,CAAD,CAAK,CAGZ,IAFA,IAAIC,EAAID,CAAA5G,OAAR;AACIqG,EAAW5G,KAAJ,CAAUoH,CAAV,CADX,CAESnH,EAAE,CAAX,CAAcA,CAAd,CAAkBmH,CAAlB,CAAqBnH,CAAA,EAArB,CACE2G,CAAA,CAAK3G,CAAL,CAAA,CAAUkH,CAAA,CAAGlH,CAAH,CAEZ,OAAO2G,EANK,CAnBE,CA4BhBS,eAAAA,QAAc,CAACC,CAAD,CAAO,CACnBb,sBAAAc,QAAAF,eAAA,CAA4BC,CAA5B,CACKb,uBAAAe,SAAAC,cAAA,CAA4BH,CAA5B,CAAL,EACEb,sBAAAe,SAAAE,iBAAA,CAA+BJ,CAA/B,CAGFb,uBAAAe,SAAAH,eAAA,CAA6BC,CAA7B,CANmB,CA5BL,CAuCb,QAAU,CAEbG,cAAAA,QAAa,CAACH,CAAD,CAAO,CAClB,MAAO,EAAQK,CAAAL,CAAAK,MAAR,EAAsBjF,CAAA4E,CAAAK,MAAAjF,WAAtB,CADW,CAFP,CAMbkF,cAAAA,QAAa,CAACN,CAAD,CAAO,CAClB,MAAO,EAAQK,CAAAL,CAAAK,MAAR,EAAgDrG,IAAAA,EAAhD,GAAsBgG,CAAAK,MAAAE,WAAtB,CADW,CANP,CAUbC,cAAAA,QAAa,CAACR,CAAD,CAAO,CAKlB,MAAO,KAAAM,cAAA,CAAmBN,CAAnB,CAAA,CAA2B,IAAAS,eAAA,CAAoBT,CAApB,CAA3B,CACLb,sBAAAe,SAAAM,cAAA,CAA4BR,CAA5B,CANgB,CAVP;AAmBbS,eAAAA,QAAc,CAACT,CAAD,CAAO,CACnB,GAAKO,CAAAP,CAAAK,MAAAE,WAAL,CAA4B,CAC1BP,CAAAK,MAAAE,WAAA,CAAwB,EACxB,KAAK,IAAI9C,EAAE,IAAAiD,cAAA,CAAmBV,CAAnB,CAAX,CAAqCvC,CAArC,CAAwCA,CAAxC,CAA0C,IAAAkD,eAAA,CAAoBlD,CAApB,CAA1C,CACEuC,CAAAK,MAAAE,WAAApH,KAAA,CAA2BsE,CAA3B,CAHwB,CAM5B,MAAOuC,EAAAK,MAAAE,WAPY,CAnBR,CAmCbK,cAAAA,QAAa,CAACZ,CAAD,CAAO,CAClB,MAAOA,EAAAK,MAAA,EAAwCrG,IAAAA,EAAxC,GAAcgG,CAAAK,MAAAjF,WAAd,CACL4E,CAAAK,MAAAjF,WADK,CACmB+D,sBAAAe,SAAAU,cAAA,CAA4BZ,CAA5B,CAFR,CAnCP,CAwCbU,cAAAA,QAAa,CAACV,CAAD,CAAO,CAClB,MAAOA,EAAAK,MAAA,EAAwCrG,IAAAA,EAAxC,GAAcgG,CAAAK,MAAAd,WAAd,CACLS,CAAAK,MAAAd,WADK,CACmBJ,sBAAAe,SAAAQ,cAAA,CAA4BV,CAA5B,CAFR,CAxCP,CA6Cba,aAAAA,QAAY,CAACb,CAAD,CAAO,CACjB,MAAOA,EAAAK,MAAA;AAAwCrG,IAAAA,EAAxC,GAAcgG,CAAAK,MAAAS,UAAd,CACLd,CAAAK,MAAAS,UADK,CACkB3B,sBAAAe,SAAAW,aAAA,CAA2Bb,CAA3B,CAFR,CA7CN,CAkDbW,eAAAA,QAAc,CAACX,CAAD,CAAO,CACnB,MAAOA,EAAAK,MAAA,EAA0CrG,IAAAA,EAA1C,GAAcgG,CAAAK,MAAAb,YAAd,CACLQ,CAAAK,MAAAb,YADK,CACoBL,sBAAAe,SAAAS,eAAA,CAA6BX,CAA7B,CAFR,CAlDR,CAuDbe,mBAAAA,QAAkB,CAACf,CAAD,CAAO,CACvB,MAAOA,EAAAK,MAAA,EAA8CrG,IAAAA,EAA9C,GAAcgG,CAAAK,MAAAW,gBAAd,CACLhB,CAAAK,MAAAW,gBADK,CACwB7B,sBAAAe,SAAAa,mBAAA,CAAiCf,CAAjC,CAFR,CAvDZ,CA4DbiB,qBAAAA,QAAoB,CAACjB,CAAD,CAAO,CACzB,MAAOA,EAAAK,MAAA,EAAwCrG,IAAAA,EAAxC,GAAcgG,CAAAK,MAAAd,WAAd,CACL,IAAA2B,sBAAA,CAA2BlB,CAA3B,CADK;AAELb,sBAAAe,SAAAe,qBAAA,CAAmCjB,CAAnC,CAHuB,CA5Dd,CAkEbkB,sBAAAA,QAAqB,CAAClB,CAAD,CAAO,CAE1B,IADIvC,CACJ,CADQuC,CAAAK,MAAAd,WACR,CAAO9B,CAAP,EAAYA,CAAA0D,SAAZ,GAA2BpG,IAAAqG,aAA3B,CAAA,CACE3D,CAAA,CAAIA,CAAA4C,MAAAb,YAEN,OAAO/B,EALmB,CAlEf,CA0Eb4D,oBAAAA,QAAmB,CAACrB,CAAD,CAAO,CACxB,MAAOA,EAAAK,MAAA,EAAuCrG,IAAAA,EAAvC,GAAcgG,CAAAK,MAAAS,UAAd,CACL,IAAAQ,qBAAA,CAA0BtB,CAA1B,CADK,CAELb,sBAAAe,SAAAmB,oBAAA,CAAkCrB,CAAlC,CAHsB,CA1Eb,CAgFbsB,qBAAAA,QAAoB,CAACtB,CAAD,CAAO,CAEzB,IADIvC,CACJ,CADQuC,CAAAK,MAAAS,UACR,CAAOrD,CAAP,EAAYA,CAAA0D,SAAZ,GAA2BpG,IAAAqG,aAA3B,CAAA,CACE3D,CAAA,CAAIA,CAAA4C,MAAAW,gBAEN,OAAOvD,EALkB,CAhFd,CAwFb8D,sBAAAA,QAAqB,CAACvB,CAAD,CAAO,CAC1B,MAAOA,EAAAK,MAAA;AAAyCrG,IAAAA,EAAzC,GAAcgG,CAAAK,MAAAb,YAAd,CACL,IAAAgC,uBAAA,CAA4BxB,CAA5B,CADK,CAELb,sBAAAe,SAAAqB,sBAAA,CAAoCvB,CAApC,CAHwB,CAxFf,CA8FbwB,uBAAAA,QAAsB,CAACxB,CAAD,CAAO,CAE3B,IADIvC,CACJ,CADQuC,CAAAK,MAAAb,YACR,CAAO/B,CAAP,EAAYA,CAAA0D,SAAZ,GAA2BpG,IAAAqG,aAA3B,CAAA,CACE3D,CAAA,CAAI,IAAAkD,eAAA,CAAoBlD,CAApB,CAEN,OAAOA,EALoB,CA9FhB,CAsGbgE,0BAAAA,QAAyB,CAACzB,CAAD,CAAO,CAC9B,MAAOA,EAAAK,MAAA,EAA6CrG,IAAAA,EAA7C,GAAcgG,CAAAK,MAAAW,gBAAd,CACL,IAAAU,2BAAA,CAAgC1B,CAAhC,CADK,CAELb,sBAAAe,SAAAuB,0BAAA,CAAwCzB,CAAxC,CAH4B,CAtGnB,CA4Gb0B,2BAAAA,QAA0B,CAAC1B,CAAD,CAAO,CAE/B,IADIvC,CACJ,CADQuC,CAAAK,MAAAW,gBACR,CAAOvD,CAAP;AAAYA,CAAA0D,SAAZ,GAA2BpG,IAAAqG,aAA3B,CAAA,CACE3D,CAAA,CAAI,IAAAsD,mBAAA,CAAwBtD,CAAxB,CAEN,OAAOA,EALwB,CA5GpB,CA0HbsC,eAAAA,QAAc,CAACC,CAAD,CAAO,CACnB,GAAK,CAAA,IAAAM,cAAA,CAAmBN,CAAnB,CAAL,CAA+B,CAC7BA,CAAAK,MAAA,CAAaL,CAAAK,MAAb,EAA2B,EAC3BL,EAAAK,MAAAd,WAAA,CAAwBS,CAAAT,WACxBS,EAAAK,MAAAS,UAAA,CAAuBd,CAAAc,UAEvB,KADA,IAAIa,EAAK3B,CAAAK,MAAAE,WAALoB,CAA6BxC,sBAAAC,oBAAA,CAAyBY,CAAzB,CAAjC,CACSrH,EAAE,CADX,CACc8E,CAAd,CAAkB9E,CAAlB,CAAoBgJ,CAAA1I,OAApB,GAAmCwE,CAAnC,CAAqCkE,CAAA,CAAGhJ,CAAH,CAArC,EAA6CA,CAAA,EAA7C,CACE8E,CAAA4C,MAIA,CAJU5C,CAAA4C,MAIV,EAJqB,EAIrB,CAHA5C,CAAA4C,MAAAjF,WAGA,CAHqB4E,CAGrB,CAFAvC,CAAA4C,MAAAb,YAEA,CAFsBmC,CAAA,CAAGhJ,CAAH,CAAK,CAAL,CAEtB,EAFiC,IAEjC,CADA8E,CAAA4C,MAAAW,gBACA,CAD0BW,CAAA,CAAGhJ,CAAH,CAAK,CAAL,CAC1B,EADqC,IACrC,CAAAiG,iBAAAD,OAAAiD,UAAA,CAAuBnE,CAAvB,CAV2B,CADZ,CA1HR,CA6IboE,mBAAAA,QAAkB,CAAC7B,CAAD,CAAO8B,CAAP,CAAkBC,CAAlB,CAA4B,CAC5CD,CAAAzB,MAAAE,WAAA;AAA6B,IAE7B,IAAIP,CAAAmB,SAAJ,GAAsBpG,IAAAiH,uBAAtB,CAAmD,CAEjD,IADA,IAAIL,EAAKxC,sBAAAC,oBAAA,CAAyBY,CAAzB,CAAT,CACSrH,EAAE,CAAX,CAAcA,CAAd,CAAkBgJ,CAAA1I,OAAlB,CAA6BN,CAAA,EAA7B,CACE,IAAAsJ,UAAA,CAAeN,CAAA,CAAGhJ,CAAH,CAAf,CAAsBmJ,CAAtB,CAAiCC,CAAjC,CAGF/B,EAAAK,MAAA,CAAaL,CAAAK,MAAb,EAA2B,EAC3BL,EAAAK,MAAAd,WAAA,CAAwBS,CAAAK,MAAAS,UAAxB,CAA+C9G,IAAAA,EAC/CgG,EAAAK,MAAAE,WAAA,CAAwB,IARyB,CAAnD,IAUE,KAAA0B,UAAA,CAAejC,CAAf,CAAqB8B,CAArB,CAAgCC,CAAhC,CAb0C,CA7IjC,CA8JbE,UAAAA,QAAS,CAACjC,CAAD,CAAO8B,CAAP,CAAkBC,CAAlB,CAA4B,CACnCnD,iBAAAD,OAAAiD,UAAA,CAAuB5B,CAAvB,CACA+B,EAAA,CAAWA,CAAX,EAAuB,IACvB/B,EAAAK,MAAA,CAAaL,CAAAK,MAAb,EAA2B,EAC3ByB,EAAAzB,MAAA,CAAkByB,CAAAzB,MAAlB,EAAqC,EACjC0B,EAAJ,GACEA,CAAA1B,MADF,CACmB0B,CAAA1B,MADnB,EACqC,EADrC,CAIAL,EAAAK,MAAAW,gBAAA,CAA6Be,CAAA,CAAWA,CAAA1B,MAAAW,gBAAX,CAC3Bc,CAAAzB,MAAAS,UACEd,EAAAK,MAAAW,gBAAJ,GACEhB,CAAAK,MAAAW,gBAAAX,MAAAb,YADF;AACiDQ,CADjD,CAIAA,EAAAK,MAAAb,YAAA,CAAyBuC,CACrB/B,EAAAK,MAAAb,YAAJ,GACEQ,CAAAK,MAAAb,YAAAa,MAAAW,gBADF,CACiDhB,CADjD,CAIAA,EAAAK,MAAAjF,WAAA,CAAwB0G,CACpBC,EAAJ,CACMA,CADN,GACmBD,CAAAzB,MAAAd,WADnB,GAEIuC,CAAAzB,MAAAd,WAFJ,CAEiCS,CAFjC,GAKE8B,CAAAzB,MAAAS,UACA,CAD4Bd,CAC5B,CAAK8B,CAAAzB,MAAAd,WAAL,GACEuC,CAAAzB,MAAAd,WADF,CAC+BS,CAD/B,CANF,CAWA8B,EAAAzB,MAAAE,WAAA,CAA6B,IAhCM,CA9JxB,CAiMb2B,kBAAAA,QAAiB,CAAClC,CAAD,CAAO8B,CAAP,CAAkB,CACjC9B,CAAAK,MAAA,CAAaL,CAAAK,MAAb,EAA2B,EAC3ByB,EAAAzB,MAAA,CAAkByB,CAAAzB,MAAlB,EAAqC,EACjCL,EAAJ,GAAa8B,CAAAzB,MAAAd,WAAb,GACEuC,CAAAzB,MAAAd,WADF,CAC+BS,CAAAK,MAAAb,YAD/B,CAGIQ,EAAJ,GAAa8B,CAAAzB,MAAAS,UAAb,GACEgB,CAAAzB,MAAAS,UADF,CAC8Bd,CAAAK,MAAAW,gBAD9B,CAGA,KAAI/E,EAAI+D,CAAAK,MAAAW,gBAAR,CACIvD,EAAIuC,CAAAK,MAAAb,YACJvD;CAAJ,GACEA,CAAAoE,MACA,CADUpE,CAAAoE,MACV,EADqB,EACrB,CAAApE,CAAAoE,MAAAb,YAAA,CAAsB/B,CAFxB,CAIIA,EAAJ,GACEA,CAAA4C,MACA,CADU5C,CAAA4C,MACV,EADqB,EACrB,CAAA5C,CAAA4C,MAAAW,gBAAA,CAA0B/E,CAF5B,CAOA+D,EAAAK,MAAAjF,WAAA,CAAwB4E,CAAAK,MAAAW,gBAAxB,CACEhB,CAAAK,MAAAb,YADF,CAC2BxF,IAAAA,EAE3B8H,EAAAzB,MAAAE,WAAA,CAA6B,IAzBI,CAjMtB,CAvCG,CA0Qb,SAAW,CAEdJ,cAAAA,QAAa,CAACH,CAAD,CAAO,CAClB,MAAO,EAAQK,CAAAL,CAAAK,MAAR,EAAiDrG,IAAAA,EAAjD,GAAsBgG,CAAAK,MAAA8B,YAAtB,CADW,CAFN,CAMd7B,cAAAA,QAAa,CAACN,CAAD,CAAO,CAClB,MAAO,EAAQK,CAAAL,CAAAK,MAAR,EAAiDrG,IAAAA,EAAjD,GAAsBgG,CAAAK,MAAA+B,YAAtB,CADW,CANN,CAUd5B,cAAAA,QAAa,CAACR,CAAD,CAAO,CAClB,MAAO,KAAAM,cAAA,CAAmBN,CAAnB,CAAA,CAA2B,IAAAS,eAAA,CAAoBT,CAApB,CAA3B,CACJ,CAACA,CAAAqC,UADG,EACelD,sBAAAS,UAAA,CAAeI,CAAAO,WAAf,CAFJ,CAVN,CAedE,eAAAA,QAAc,CAACT,CAAD,CAAO,CACnB,GAAKoC,CAAApC,CAAAK,MAAA+B,YAAL,CAA6B,CAC3BpC,CAAAK,MAAA+B,YAAA;AAAyB,EACzB,KAAK,IAAI3E,EAAEuC,CAAAK,MAAAiC,YAAX,CAAmC7E,CAAnC,CAAsCA,CAAtC,CAAwCA,CAAA4C,MAAAkC,aAAxC,CACEvC,CAAAK,MAAA+B,YAAAjJ,KAAA,CAA4BsE,CAA5B,CAHyB,CAM7B,MAAOuC,EAAAK,MAAA+B,YAPY,CAfP,CAyBdI,sBAAAA,QAAqB,CAACxC,CAAD,CAAO,CAC1B,MAAOA,EAAAK,MAAA+B,YADmB,CAzBd,CA6BdxB,cAAAA,QAAa,CAACZ,CAAD,CAAO,CAClB,MAAO,KAAAG,cAAA,CAAmBH,CAAnB,CAAA,CAA2BA,CAAAK,MAAA8B,YAA3B,CACJ,CAACnC,CAAAqC,UADG,EACerC,CAAA5E,WAFJ,CA7BN,CAkCdsF,cAAAA,QAAa,CAACV,CAAD,CAAO,CAClB,MAAOA,EAAAqC,UAAA,CAAiBrC,CAAAK,MAAAiC,YAAjB,CAA0CtC,CAAAT,WAD/B,CAlCN,CAsCdsB,aAAAA,QAAY,CAACb,CAAD,CAAO,CACjB,MAAOA,EAAAqC,UAAA,CAAiBrC,CAAAK,MAAAoC,WAAjB,CAAyCzC,CAAAc,UAD/B,CAtCL,CA0CdH,eAAAA,QAAc,CAACX,CAAD,CAAO,CACnB,MAAOA,EAAAqC,UAAA,CAAiBrC,CAAAK,MAAAkC,aAAjB;AAA2CvC,CAAAR,YAD/B,CA1CP,CA8CduB,mBAAAA,QAAkB,CAACf,CAAD,CAAO,CACvB,MAAOA,EAAAqC,UAAA,CAAiBrC,CAAAK,MAAAqC,iBAAjB,CAA+C1C,CAAAgB,gBAD/B,CA9CX,CAkDdC,qBAAAA,QAAoB,CAACjB,CAAD,CAAO,CACzB,MAAOA,EAAAqC,UAAA,CAAiB,IAAAnB,sBAAA,CAA2BlB,CAA3B,CAAjB,CACLA,CAAAN,kBAFuB,CAlDb,CAuDdwB,sBAAAA,QAAqB,CAAClB,CAAD,CAAO,CAE1B,IADIvC,CACJ,CADQuC,CAAAK,MAAAiC,YACR,CAAO7E,CAAP,EAAYA,CAAA0D,SAAZ,GAA2BpG,IAAAqG,aAA3B,CAAA,CACE3D,CAAA,CAAIA,CAAA4C,MAAAkC,aAEN,OAAO9E,EALmB,CAvDd,CA+Dd4D,oBAAAA,QAAmB,CAACrB,CAAD,CAAO,CACxB,MAAOA,EAAAqC,UAAA,CAAiB,IAAAf,qBAAA,CAA0BtB,CAA1B,CAAjB,CACLA,CAAA2C,iBAFsB,CA/DZ,CAoEdrB,qBAAAA,QAAoB,CAACtB,CAAD,CAAO,CAEzB,IADIvC,CACJ,CADQuC,CAAAK,MAAAoC,WACR,CAAOhF,CAAP;AAAYA,CAAA0D,SAAZ,GAA2BpG,IAAAqG,aAA3B,CAAA,CACE3D,CAAA,CAAIA,CAAA4C,MAAAqC,iBAEN,OAAOjF,EALkB,CApEb,CA4Ed8D,sBAAAA,QAAqB,CAACvB,CAAD,CAAO,CAC1B,MAAOA,EAAAqC,UAAA,CAAiB,IAAAb,uBAAA,CAA4BxB,CAA5B,CAAjB,CACLA,CAAAL,mBAFwB,CA5Ed,CAiFd6B,uBAAAA,QAAsB,CAACxB,CAAD,CAAO,CAE3B,IADIvC,CACJ,CADQuC,CAAAK,MAAAkC,aACR,CAAO9E,CAAP,EAAYA,CAAA0D,SAAZ,GAA2BpG,IAAAqG,aAA3B,CAAA,CACE3D,CAAA,CAAI,IAAAkD,eAAA,CAAoBlD,CAApB,CAEN,OAAOA,EALoB,CAjFf,CAyFdgE,0BAAAA,QAAyB,CAACzB,CAAD,CAAO,CAC9B,MAAOA,EAAAqC,UAAA,CAAiB,IAAAX,2BAAA,CAAgC1B,CAAhC,CAAjB,CACLA,CAAA4C,uBAF4B,CAzFlB,CA8FdlB,2BAAAA,QAA0B,CAAC1B,CAAD,CAAO,CAE/B,IADIvC,CACJ,CADQuC,CAAAK,MAAAqC,iBACR,CAAOjF,CAAP,EAAYA,CAAA0D,SAAZ;AAA2BpG,IAAAqG,aAA3B,CAAA,CACE3D,CAAA,CAAI,IAAAsD,mBAAA,CAAwBtD,CAAxB,CAEN,OAAOA,EALwB,CA9FnB,CAsGdsC,eAAAA,QAAc,CAACC,CAAD,CAAO,CACnB,GAAK,CAAA,IAAAM,cAAA,CAAmBN,CAAnB,CAAL,CAA+B,CAC7BA,CAAAK,MAAA,CAAaL,CAAAK,MAAb,EAA2B,EAC3BL,EAAAK,MAAAiC,YAAA,CAAyBtC,CAAAT,WACzBS,EAAAK,MAAAoC,WAAA,CAAwBzC,CAAAc,UACpBa,EAAAA,CAAK3B,CAAAK,MAAA+B,YAALT,CAA8BxC,sBAAAC,oBAAA,CAAyBY,CAAzB,CAClC,KAL6B,IAKpBrH,EAAE,CALkB,CAKf8E,CAAd,CAAkB9E,CAAlB,CAAoBgJ,CAAA1I,OAApB,GAAmCwE,CAAnC,CAAqCkE,CAAA,CAAGhJ,CAAH,CAArC,EAA6CA,CAAA,EAA7C,CACE,IAAAyH,iBAAA,CAAsB3C,CAAtB,CAN2B,CADZ,CAtGP,CAkHd2C,iBAAAA,QAAgB,CAACJ,CAAD,CAAO,CACrBA,CAAAK,MAAA,CAAaL,CAAAK,MAAb,EAA2B,EACIrG,KAAAA,EAA/B,GAAIgG,CAAAK,MAAA8B,YAAJ,GACEnC,CAAAK,MAAA8B,YADF,CAC2BnC,CAAA5E,WAD3B,CAGgCpB,KAAAA,EAAhC,GAAIgG,CAAAK,MAAAkC,aAAJ,GACEvC,CAAAK,MAAAkC,aADF,CAC4BvC,CAAAR,YAD5B,CAGoCxF;IAAAA,EAApC,GAAIgG,CAAAK,MAAAqC,iBAAJ,GACE1C,CAAAK,MAAAqC,iBADF,CACgC1C,CAAAgB,gBADhC,CARqB,CAlHT,CA+Hda,mBAAAA,QAAkB,CAAC7B,CAAD,CAAO8B,CAAP,CAAkBC,CAAlB,CAA4B,CAC5CD,CAAAzB,MAAA+B,YAAA,CAA8B,IAE9B,IAAIpC,CAAAmB,SAAJ,GAAsBpG,IAAAiH,uBAAtB,CAIE,IAASvE,CAAT,CAAW,IAAAiD,cAAA,CAAmBV,CAAnB,CAAX,CAAqCvC,CAArC,CAAwCA,CAAxC,CAA0C,IAAAkD,eAAA,CAAoBlD,CAApB,CAA1C,CACE,IAAAwE,UAAA,CAAexE,CAAf,CAAkBqE,CAAlB,CAA6BC,CAA7B,CALJ,KAQE,KAAAE,UAAA,CAAejC,CAAf,CAAqB8B,CAArB,CAAgCC,CAAhC,CAX0C,CA/HhC,CA8IdE,UAAAA,QAAS,CAACjC,CAAD,CAAO8B,CAAP,CAAkBC,CAAlB,CAA4B,CACnC/B,CAAAK,MAAA,CAAaL,CAAAK,MAAb,EAA2B,EAC3ByB,EAAAzB,MAAA,CAAkByB,CAAAzB,MAAlB,EAAqC,EACjC0B,EAAJ,GACEA,CAAA1B,MADF,CACmB0B,CAAA1B,MADnB,EACqC,EADrC,CAIAL,EAAAK,MAAAqC,iBAAA,CAA8BX,CAAA,CAAWA,CAAA1B,MAAAqC,iBAAX,CAC5BZ,CAAAzB,MAAAoC,WACEzC,EAAAK,MAAAqC,iBAAJ,GACE1C,CAAAK,MAAAqC,iBAAArC,MAAAkC,aADF;AACmDvC,CADnD,CAIAA,EAAAK,MAAAkC,aAAA,CAA0BR,CACtB/B,EAAAK,MAAAkC,aAAJ,GACEvC,CAAAK,MAAAkC,aAAAlC,MAAAqC,iBADF,CACmD1C,CADnD,CAIAA,EAAAK,MAAA8B,YAAA,CAAyBL,CACrBC,EAAJ,CACMA,CADN,GACmBD,CAAAzB,MAAAiC,YADnB,GAEIR,CAAAzB,MAAAiC,YAFJ,CAEkCtC,CAFlC,GAKE8B,CAAAzB,MAAAoC,WACA,CAD6BzC,CAC7B,CAAK8B,CAAAzB,MAAAiC,YAAL,GACER,CAAAzB,MAAAiC,YADF,CACgCtC,CADhC,CANF,CAWA8B,EAAAzB,MAAA+B,YAAA,CAA8B,IA9BK,CA9IvB,CA+KdF,kBAAAA,QAAiB,CAAClC,CAAD,CAAO8B,CAAP,CAAkB,CACjC9B,CAAAK,MAAA,CAAaL,CAAAK,MAAb,EAA2B,EAC3ByB,EAAAzB,MAAA,CAAkByB,CAAAzB,MAAlB,EAAqC,EACjCL,EAAJ,GAAa8B,CAAAzB,MAAAiC,YAAb,GACER,CAAAzB,MAAAiC,YADF,CACgCtC,CAAAK,MAAAkC,aADhC,CAGIvC,EAAJ,GAAa8B,CAAAzB,MAAAoC,WAAb,GACEX,CAAAzB,MAAAoC,WADF,CAC+BzC,CAAAK,MAAAqC,iBAD/B,CAGA,KAAIzG,EAAI+D,CAAAK,MAAAqC,iBAAR;AACIjF,EAAIuC,CAAAK,MAAAkC,aACJtG,EAAJ,GACEA,CAAAoE,MACA,CADUpE,CAAAoE,MACV,EADqB,EACrB,CAAApE,CAAAoE,MAAAkC,aAAA,CAAuB9E,CAFzB,CAIIA,EAAJ,GACEA,CAAA4C,MACA,CADU5C,CAAA4C,MACV,EADqB,EACrB,CAAA5C,CAAA4C,MAAAqC,iBAAA,CAA2BzG,CAF7B,CAIA+D,EAAAK,MAAA8B,YAAA,CAAyBnC,CAAAK,MAAAqC,iBAAzB,CACE1C,CAAAK,MAAAkC,aADF,CAC4B,IAE5BT,EAAAzB,MAAA+B,YAAA,CAA8B,IAtBG,CA/KrB,CAwMdS,gBAAAA,QAAe,CAAC7C,CAAD,CAAO,CAEpB,IADA,IAAI2B,EAAK,IAAAnB,cAAA,CAAmBR,CAAnB,CAAT,CACSrH,EAAE,CADX,CACcmK,CAAd,CAAiBnK,CAAjB,CAAqBgJ,CAAA1I,OAArB,CAAgCN,CAAA,EAAhC,CACEmK,CAEA,CAFInB,CAAA,CAAGhJ,CAAH,CAEJ,CADA,IAAAuJ,kBAAA,CAAuBY,CAAvB,CAA0B9C,CAA1B,CACA,CAAAf,mCAAAtC,KAAA,CAAuBqD,CAAvB,CAA6B8C,CAA7B,CALkB,CAxMR,CAiNdC,eAAAA,QAAc,CAAC/C,CAAD,CAAO,CACnBA,CAAAK,MAAA,CAAaL,CAAAK,MAAb,EAA2B,EAC3BL,EAAAK,MAAA8B,YAAA,CAAyBnC,CAAA5E,WAFN,CAjNP,CAsNd0D,aAAAA,QAAY,CAAC1D,CAAD,CAAa4H,CAAb,CAAuBC,CAAvB,CAAiC,CAC3C,IAAAlD,eAAA,CAAoB3E,CAApB,CAEA;IAAA8H,UAAA,CAAe9H,CAAf,CAA2B4H,CAA3B,CAAqCC,CAArC,CACA,OAAOpE,qCAAAlC,KAAA,CAAwBvB,CAAxB,CAAoC4H,CAApC,CAA8CC,CAA9C,EAA0D,IAA1D,CAJoC,CAtN/B,CA6NdjE,YAAAA,QAAW,CAAC5D,CAAD,CAAa4H,CAAb,CAAuB,CAChC,IAAAjD,eAAA,CAAoB3E,CAApB,CACA,KAAA8H,UAAA,CAAe9H,CAAf,CAA2B4H,CAA3B,CACA,OAAOjE,oCAAApC,KAAA,CAAuBvB,CAAvB,CAAmC4H,CAAnC,CAHyB,CA7NpB,CAmOd9D,YAAAA,QAAW,CAAC9D,CAAD,CAAa4E,CAAb,CAAmB,CAC5B,IAAImD,EAAgB,IAAAvC,cAAA,CAAmBZ,CAAnB,CACpB,KAAAD,eAAA,CAAoB3E,CAApB,CACA,KAAAgI,aAAA,CAAkBhI,CAAlB,CAA8B4E,CAA9B,CACA,IAAImD,CAAJ,GAAsB/H,CAAtB,CACE,MAAO6D,oCAAAtC,KAAA,CAAuBvB,CAAvB,CAAmC4E,CAAnC,CALmB,CAnOhB,CA4OdkD,UAAAA,QAAS,CAAC9H,CAAD,CAAa4H,CAAb,CAAuBC,CAAvB,CAAiC,CACxC,IAAII,EAAUL,CAAA7B,SAAVkC,GAAgCtI,IAAAiH,uBAApC,CACIsB,EAAY,IAAA1C,cAAA,CAAmBoC,CAAnB,CACZM,EAAJ,EACE,IAAAF,aAAA,CAAkBE,CAAlB,CAA6BN,CAA7B,CAEF,IAAIK,CAAJ,CAEE,IADI1B,CACKhJ;AADA,IAAA6H,cAAA,CAAmBwC,CAAnB,CACArK,CAAAA,CAAAA,CAAE,CAAX,CAAcA,CAAd,CAAkBgJ,CAAA1I,OAAlB,CAA6BN,CAAA,EAA7B,CAAkC,CAChC,IAAImK,EAAInB,CAAA,CAAGhJ,CAAH,CAER,KAAAyK,aAAA,CAAkBJ,CAAlB,CAA4BF,CAA5B,CACA,KAAAjB,mBAAA,CAAwBiB,CAAxB,CAA2B1H,CAA3B,CAAuC6H,CAAvC,CAJgC,CAFpC,IASE,KAAApB,mBAAA,CAAwBmB,CAAxB,CAAkC5H,CAAlC,CAA8C6H,CAA9C,CAfsC,CA5O5B,CA+PdG,aAAAA,QAAY,CAAChI,CAAD,CAAa4E,CAAb,CAAmB,CAC7B,IAAAkC,kBAAA,CAAuBlC,CAAvB,CAA6B5E,CAA7B,CAD6B,CA/PjB,CA1QE,CAhBjB,CAgiBGmI,8BAAc,EACXC;QAASC,oCAAiB,CAAChH,CAAD,CAAUiH,CAAV,CAAoB,CAC9CH,6BAAA,CAAYG,CAAZ,CAAL,GACEH,6BAAA,CAAYG,CAAZ,CADF,CAC0BxG,MAAAC,yBAAA,CACtBwG,WAAA7I,UADsB,CACC4I,CADD,CAD1B,EAGExG,MAAAC,yBAAA,CACEtC,OAAAC,UADF,CACqB4I,CADrB,CAHF,EAKExG,MAAAC,yBAAA,CACEpC,IAAAD,UADF,CACkB4I,CADlB,CALF,CAQA,OAAOH,8BAAA,CAAYG,CAAZ,CAAAE,IAAAjH,KAAA,CAA+BF,CAA/B,CAT4C,CAarDoH,QAASC,+BAAY,CAACrH,CAAD,CAAUiH,CAAV,CAAoBK,CAApB,CAA6B,CAC5CC,CAAAA,CAASP,mCAAA,CAAkBhH,CAAlB,CAA2BiH,CAA3B,CACTM,EAAJ,EAAcD,CAAd,EAAyBtH,CAAA4F,UAAzB,EACE9G,MAAA0I,QAAAC,KAAA,CAAoB,SAApB,CAA+BH,CAA/B,CAAwC,QAAxC,CAAkDC,CAAlD,CAEF,OAAOD,EALyC;AA9hBvCI,gBAAAhF,KAAA,CAAAA,sBAihBKgF,iBAAAV,kBAAA,CAAAA,mC,CCjiBf,IAAA,wBAAA,EAAA,CAIDW,8CAEEC,QAAW,CAACC,CAAD,CAAO,CAChB,IAAAA,KAAA,CAAYA,CACZ,KAAAC,kBAAA,CAAyB,MAFT,CAKlB,8CAAA,UAAA,mBAAA,CAAAC,QAAkB,EAAG,CACnB,MAAO,KAAAF,KAAAG,iBAAA,CAA2B,IAAAF,kBAA3B,CADY,CAIrB,8CAAA,UAAA,kBAAA,CAAAG,QAAiB,EAAG,CAClB,MAAO,EAAQC,CAAA,IAAAL,KAAAK,iBAAR,EACL1L,CAAA,IAAAqL,KAAAK,iBAAA1L,OADK,CADW,CAKpB;6CAAA,UAAA,iBAAA,CAAA2L,QAAgB,CAAC5E,CAAD,CAAO,CACrB,MAAOA,EAAA6E,UAAP,EAAyB7E,CAAA6E,UAAzB,EAA2C,IAAAN,kBADtB,CAIvB,8CAAA,UAAA,MAAA,CAAAO,QAAK,EAAG,CAGN,IADA,IAAIC,EAAWZ,gBAAAhF,KAAAc,QAAAO,cAAA,CAA2B,IAAA8D,KAAAjJ,KAA3B,CAAf,CACS1C,EAAI,CAAb,CAAgBA,CAAhB,CAAoBoM,CAAA9L,OAApB,CAAqCN,CAAA,EAArC,CACE,IAAAqM,WAAA,CAAgBD,CAAA,CAASpM,CAAT,CAAhB,CAGEsM,EAAAA,CAAK,IAAAX,KAAAK,iBACT,KAAS/L,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoBqM,CAAAhM,OAApB,CAA+BL,CAAA,EAA/B,CACE,IAAAsM,oBAAA,CAAyBD,CAAA,CAAGrM,CAAH,CAAzB,CATI,CAaR;6CAAA,UAAA,WAAA,CAAAoM,QAAU,CAACG,CAAD,CAAQ,CAChBA,CAAAC,cAAA,CAAsBpL,IAAAA,EADN,CAIlB,8CAAA,UAAA,oBAAA,CAAAkL,QAAmB,CAACG,CAAD,CAAiB,CAClCA,CAAAC,kBAAA,CAAmC,EACnCD,EAAAE,eAAA,CAAgC,EAFE,CAKpC,8CAAA,UAAA,WAAA,CAAAC,QAAU,EAAG,CACX,MAAI,KAAAd,kBAAA,EAAJ,EACE,IAAAI,MAAA,EACO,CAAA,IAAAW,eAAA,CAAoB,IAAAnB,KAApB,CAA+B,IAAAoB,YAAA,EAA/B,CAFT,EAIO,EALI,CAUb,8CAAA,UAAA,YAAA,CAAAA,QAAW,EAAG,CACZ,MAAOvB,iBAAAhF,KAAAS,UAAA,CACLuE,gBAAAhF,KAAAc,QAAAO,cAAA,CAA2B,IAAA8D,KAAAjJ,KAA3B,CADK,CADK,CAQd;6CAAA,UAAA,eAAA,CAAAoK,QAAc,CAACzF,CAAD,CAAO2F,CAAP,CAAa,CACrBC,CAAAA,CAAa,EAEjB,KADA,IAAIX,EAAK,IAAAX,KAAAK,iBAAT,CACShM,EAAE,CADX,CACcmH,EAAEmF,CAAAhM,OADhB,CAC2BgD,CAA3B,CAA+BtD,CAA/B,CAAiCmH,CAAjC,GAAwC7D,CAAxC,CAA0CgJ,CAAA,CAAGtM,CAAH,CAA1C,EAAkDA,CAAA,EAAlD,CAAuD,CACrD,IAAAkN,yBAAA,CAA8B5J,CAA9B,CAAiC0J,CAAjC,CAKA,KAAItG,EAAS8E,gBAAAhF,KAAAc,QAAAW,cAAA,CAA2B3E,CAA3B,CACToD,EAAJ,EAAcA,CAAAyG,UAAd,EACI,IAAApB,kBAAA,CAAuBrF,CAAAyG,UAAvB,CADJ,EAEEF,CAAAzM,KAAA,CAAgBkG,CAAAyG,UAAhB,CATmD,CAYvD,MAAOF,EAfkB,CAkB3B;6CAAA,UAAA,yBAAA,CAAAC,QAAwB,CAACR,CAAD,CAAiBM,CAAjB,CAAuB,CAG7C,IADA,IAAII,EAAiB,CAAA,CAArB,CACSpN,EAAE,CADX,CACcmH,EAAE6F,CAAA1M,OADhB,CAC6B+G,CAA7B,CAAmCrH,CAAnC,CAAuCmH,CAAvC,CAA0CnH,CAAA,EAA1C,CAGE,CAFAqH,CAEA,CAFK2F,CAAA,CAAKhN,CAAL,CAEL,GAII,IAAAqN,sBAAA,CAA2BhG,CAA3B,CAAiCqF,CAAjC,CAJJ,GAKE,IAAAY,mBAAA,CAAwBjG,CAAxB,CAA8BqF,CAA9B,CAIA,CAFAM,CAAA,CAAKhN,CAAL,CAEA,CAFUqB,IAAAA,EAEV,CAAA+L,CAAA,CAAiB,CAAA,CATnB,CAaF,IAAKA,CAAAA,CAAL,CAEE,IADIhB,CACKnM,CADMuL,gBAAAhF,KAAAc,QAAAO,cAAA,CAA2B6E,CAA3B,CACNzM,CAAAA,CAAAA,CAAI,CAAb,CAAgBA,CAAhB,CAAoBmM,CAAA9L,OAApB,CAAqCL,CAAA,EAArC,CACE,IAAAqN,mBAAA,CAAwBlB,CAAA,CAASnM,CAAT,CAAxB,CAAqCyM,CAArC,CAGJ,KAAAa,oCAAA,CAAyCb,CAAzC,CAzB6C,CA4B/C;6CAAA,UAAA,sBAAA,CAAAW,QAAqB,CAAChG,CAAD,CAAOqF,CAAP,CAAuB,CAE1Cc,CAAA,CAAW,CADPA,CACO,CADId,CAAAe,aAAA,CAA4B,MAA5B,CACJ,EAAWD,CAAAE,KAAA,EAAX,CAA6B,EAExCC,EAAA,CAAO,CADHA,CACG,CADItG,CAAAoG,aACJ,EADyBpG,CAAAoG,aAAA,CAAkB,MAAlB,CACzB,EAAOE,CAAAD,KAAA,EAAP,CAAqB,EAC5B,OAAQC,EAAR,EAAgBH,CAL0B,CAQ5C,8CAAA,UAAA,mBAAA,CAAAF,QAAkB,CAACd,CAAD,CAAQE,CAAR,CAAwB,CACxCA,CAAAE,eAAApM,KAAA,CAAmCgM,CAAnC,CACAA,EAAAC,cAAA,CAAsBC,CAFkB,CAK1C;6CAAA,UAAA,oCAAA,CAAAa,QAAmC,CAACb,CAAD,CAAiB,CAClD,IAAI9H,EAAK8H,CAAAE,eACTF,EAAAC,kBAAA,CAAmC,EACnC,KAHkD,IAGzC3M,EAAE,CAHuC,CAGpC8E,CAAd,CAAkB9E,CAAlB,CAAoB4E,CAAAtE,OAApB,GAAmCwE,CAAnC,CAAqCF,CAAA,CAAG5E,CAAH,CAArC,EAA8CA,CAAA,EAA9C,CACE,GAAI,IAAAiM,iBAAA,CAAsBnH,CAAtB,CAAJ,CAA8B,CAC5B,IAAI8I,EAAK9I,CAAA6H,kBACT,IAAIiB,CAAJ,CACE,IAAK,IAAI3N,EAAE,CAAX,CAAcA,CAAd,CAAkB2N,CAAAtN,OAAlB,CAA6BL,CAAA,EAA7B,CACEyM,CAAAC,kBAAAnM,KAAA,CAAsCoN,CAAA,CAAG3N,CAAH,CAAtC,CAJwB,CAA9B,IAQEyM,EAAAC,kBAAAnM,KAAA,CAAsCoE,CAAA,CAAG5E,CAAH,CAAtC,CAZ8C,CAiBpD,8CAAA,UAAA,mBAAA,CAAA6N,QAAkB,CAACnB,CAAD,CAAiB,CACjC,MAAO,CAAEA,CAAAD,cADwB,CAInC;6CAAA,UAAA,SAAA,CAAAqB,QAAQ,EAAG,CAET,IADA,IAAIC,EAAM,IAAApC,KAAAK,iBAAV,CACShM,EAAE,CADX,CACc2N,CAAd,CAAoB3N,CAApB,CAAwB+N,CAAAzN,OAAxB,CAAoCN,CAAA,EAApC,CACE2N,CACA,CADOI,CAAA,CAAI/N,CAAJ,CACP,CAAI2N,CAAAK,qBAAJ,EAEEL,CAAAM,cAAA,CAAmB,IAAIC,KAAJ,CAAU,YAAV,CAAwB,CAAEC,WAAY,CAAA,CAAd,CAAxB,CAAnB,CANK,CA5IEC,wBAAAC,QAAA,CAAA5C,6C,CCJd,IAAA,sBAAA,EAAA,CAQG6C,wCAAmB,aARtB,CASGC,wCAAmB,cAEvBC,SAASC,qCAAa,CAACtE,CAAD,CAAI,CACxB,OAAQA,CAAR,EACE,KAAK,GAAL,CACE,MAAO,OACT,MAAK,GAAL,CACE,MAAO,MACT,MAAK,GAAL,CACE,MAAO,MACT,MAAK,GAAL,CACE,MAAO,QACT,MAAK,QAAL,CACE,MAAO,QAVX,CADwB,CAe1BuE,QAASC,kCAAU,CAACC,CAAD,CAAI,CACrB,MAAOA,EAAAC,QAAA,CAAUP,uCAAV,CAA4BG,oCAA5B,CADc;AAIvBK,QAASC,kCAAU,CAACH,CAAD,CAAI,CACrB,MAAOA,EAAAC,QAAA,CAAUN,uCAAV,CAA4BE,oCAA5B,CADc,CAIvBO,QAASC,+BAAO,CAACC,CAAD,CAAM,CAEpB,IADA,IAAIC,EAAM,EAAV,CACSnP,EAAI,CAAb,CAAgBA,CAAhB,CAAoBkP,CAAA5O,OAApB,CAAgCN,CAAA,EAAhC,CACEmP,CAAA,CAAID,CAAA,CAAIlP,CAAJ,CAAJ,CAAA,CAAc,CAAA,CAEhB,OAAOmP,EALa,CAStB,IAAIC,oCAAeH,8BAAA,CAAQ,qFAAA,MAAA,CAAA,GAAA,CAAR,CAAnB,CAmBII,wCAAmBJ,8BAAA,CAAQ,6DAAA,MAAA,CAAA,GAAA,CAAR,CAWhBK;QAASC,oCAAY,CAAClI,CAAD,CAAO5E,CAAP,CAAmBH,CAAnB,CAA6B,CACvD,OAAQ+E,CAAAmB,SAAR,EACE,KAAKpG,IAAAqG,aAAL,CACM+G,CAAAA,CAAUnI,CAAA6E,UAGd,KAFA,IAAI0C,EAAI,GAAJA,CAAUY,CAAd,CACIC,EAAQpI,CAAAqI,WADZ,CAES1P,EAAI,CAFb,CAEgB2P,CAAhB,CAAuBA,CAAvB,CAA8BF,CAAA,CAAMzP,CAAN,CAA9B,CAAyCA,CAAA,EAAzC,CACE4O,CAAA,EAAK,GAAL,CAAWe,CAAAxL,KAAX,CAAuB,IAAvB,CAA8BwK,iCAAA,CAAWgB,CAAAC,MAAX,CAA9B,CAAuD,GAEzDhB,EAAA,EAAK,GACL,OAAIQ,oCAAA,CAAaI,CAAb,CAAJ,CACSZ,CADT,CAGOA,CAHP,CAGWiB,mCAAA,CAAaxI,CAAb,CAAmB/E,CAAnB,CAHX,CAG0C,IAH1C,CAGiDkN,CAHjD,CAG2D,GAE7D,MAAKpN,IAAA0N,UAAL,CAEE,MADIC,EACJ,CADW1I,CAAA0I,KACX,CAAItN,CAAJ,EAAkB4M,uCAAA,CAAiB5M,CAAAyJ,UAAjB,CAAlB,CACS6D,CADT,CAGOhB,iCAAA,CAAWgB,CAAX,CAET,MAAK3N,IAAA4N,aAAL,CACE,MAAO,SAAP;AAAgB3I,CAAA0I,KAAhB,CAA4B,QAE9B,SAEE,KADAnN,OAAA0I,QAAA2E,MAAA,CAAqB5I,CAArB,CACM,CAAI6I,KAAJ,CAAU,iBAAV,CAAN,CA1BJ,CADuD,CAgClDC,QAASN,oCAAY,CAACxI,CAAD,CAAO/E,CAAP,CAAiB,CACpB,UAAvB,GAAI+E,CAAA6E,UAAJ,GACE7E,CADF,CACSA,CAAA+I,QADT,CAKA,KAFA,IAAIxB,EAAI,EAAR,CACI5F,EAAK1G,CAAA,CAAWA,CAAA,CAAS+E,CAAT,CAAX,CAA4BA,CAAAO,WADrC,CAES5H,EAAE,CAFX,CAEcmH,EAAE6B,CAAA1I,OAFhB,CAE2BkM,CAA3B,CAAmCxM,CAAnC,CAAqCmH,CAArC,GAA4CqF,CAA5C,CAAkDxD,CAAA,CAAGhJ,CAAH,CAAlD,EAA0DA,CAAA,EAA1D,CACE4O,CAAA,EAAKW,mCAAA,CAAa/C,CAAb,CAAoBnF,CAApB,CAA0B/E,CAA1B,CAEP,OAAOsM,EAToC,CAhC7ByB,qBAAAd,aAAA,CAAAA,mCAgCAc,sBAAAR,aAAA,CAAAA,mC,CCzGf,IAAA,0BAAA,EAAA,CAMGS,qCAAY,CAIdC,QAAAA,QAAO,CAACpH,CAAD,CAAY9B,CAAZ,CAAkB+B,CAAlB,CAA4B,CACjC,IAAIoH,EAAY,IAAAC,sBAAA,CAA2BtH,CAA3B,CACZqH,EAAJ,GAEMnJ,CAAAqJ,mBAWJ,GAVEF,CAAAG,2BAUF,CAVyC,CAAA,CAUzC,EALc,IAAAC,wBAAAC,CAA6BxJ,CAA7BwJ,CAAmC1H,CAAnC0H,CAA8CL,CAA9CK,CAKd,GAFEL,CAAAG,2BAEF,CAFyC,CAAA,CAEzC,EAAA,IAAAG,WAAA,CAAgBzJ,CAAhB,CAAsBmJ,CAAtB,CAbF,CAeIhF,iBAAAhF,KAAAc,QAAAK,cAAA,CAA2BwB,CAA3B,CAAJ,EACEqC,gBAAAhF,KAAAc,QAAA4B,mBAAA,CAAgC7B,CAAhC,CAAsC8B,CAAtC,CAAiDC,CAAjD,CAeF,IAZI2H,CAYJ,CAZc,IAAAC,iBAAA,CAAsB3J,CAAtB,CAA4B8B,CAA5B,CAAuCqH,CAAvC,CAYd,EAXErH,CAAAgE,UAWF,CACE,GAAI9F,CAAAmB,SAAJ,GAAsBpG,IAAAiH,uBAAtB,CAIE,IADIL,CACKhJ,CADAwL,gBAAAhF,KAAAC,oBAAA,CAAyBY,CAAzB,CACArH;AAAAA,CAAAA,CAAE,CAAX,CAAcA,CAAd,CAAkBgJ,CAAA1I,OAAlB,CAA6BN,CAAA,EAA7B,CACEwL,gBAAAhF,KAAAe,SAAAhB,YAAA,CAA0Bc,CAA1B,CAAgC2B,CAAA,CAAGhJ,CAAH,CAAhC,CALJ,KASE,CADI0G,CACJ,CADa8E,gBAAAhF,KAAAe,SAAAU,cAAA,CAA4BZ,CAA5B,CACb,GACEmE,gBAAAhF,KAAAe,SAAAhB,YAAA,CAA0BG,CAA1B,CAAkCW,CAAlC,CAIN,OAAO0J,EAhD0B,CAJrB,CA2DdE,WAAAA,QAAU,CAAC5J,CAAD,CAAO,CAEf,IAAI6J,EAAgB1F,gBAAAhF,KAAAc,QAAAE,cAAA,CAA2BH,CAA3B,CAAhB6J,EACF1F,gBAAAhF,KAAAc,QAAAW,cAAA,CAA2BZ,CAA3B,CADF,CAEI8J,CAFJ,CAGIX,EAAY,IAAAC,sBAAA,CAA2BpJ,CAA3B,CACZ6J,EAAJ,GAEEC,CAGA,CAHc,IAAAC,sBAAA,CAA2B/J,CAA3B,CAGd,CAFAmE,gBAAAhF,KAAAc,QAAAiC,kBAAA,CAA+BlC,CAA/B,CAAqC6J,CAArC,CAEA,CAAIV,CAAJ,GAAkB,IAAAa,2BAAA,CAAgCb,CAAhC,CAA2CnJ,CAA3C,CAAlB,EACE6J,CAAAhF,UADF,GAC8BsE,CAAAc,qBAAA,EAD9B;CAEEd,CAAAG,2BACA,CADuC,CAAA,CACvC,CAAAH,CAAAe,OAAA,EAHF,CALF,CAWA,KAAAC,sBAAA,CAA2BnK,CAA3B,CACImJ,EAAJ,EACE,IAAAiB,aAAA,CAAkBpK,CAAlB,CAAwBmJ,CAAxB,CAEF,OAAOW,EArBQ,CA3DH,CAmFdO,qBAAAA,QAAoB,CAACrK,CAAD,CAAOX,CAAP,CAAe,CAC7BA,CAAJ,CAKE,IAAAuK,WAAA,CAAgB5J,CAAhB,CALF,CAOE,IAAAmK,sBAAA,CAA2BnK,CAA3B,CAR+B,CAnFrB,CA+FdsK,oBAAAA,QAAmB,CAACtK,CAAD,CAAO,CACxB,MAAyChG,KAAAA,EAAzC,GAAegG,CAAAuK,iBADS,CA/FZ,CAmGdC,YAAAA,QAAW,CAACxK,CAAD,CAAO,CAChB,GAAKA,CAAL,EAAcA,CAAAmB,SAAd,CAAA,CAGA,IAAImD,EAAOtE,CAAAuK,iBACEvQ,KAAAA,EAAb,GAAIsK,CAAJ,GAEIA,CAUF,CAXI1F,iBAAA9C,YAAA,CAAkBkE,CAAlB,CAAJ,CACSA,CADT,CAIS,CADHX,CACG,CADM8E,gBAAAhF,KAAAc,QAAAW,cAAA,CAA2BZ,CAA3B,CACN,EAAS,IAAAwK,YAAA,CAAiBnL,CAAjB,CAAT,CAAoCW,CAO7C,CAAIyK,QAAAC,SAAA,CAAkB1K,CAAlB,CAAJ,GACEA,CAAAuK,iBADF,CAC0BjG,CAD1B,CAZF,CAgBA;MAAOA,EApBP,CADgB,CAnGJ,CA2Hd8E,sBAAAA,QAAqB,CAACpJ,CAAD,CAAO,CACtBsE,CAAAA,CAAO,IAAAkG,YAAA,CAAiBxK,CAAjB,CACX,IAAIpB,iBAAA9C,YAAA,CAAkBwI,CAAlB,CAAJ,CACE,MAAOA,EAHiB,CA3Hd,CAkIdqF,iBAAAA,QAAgB,CAAC3J,CAAD,CAAO8B,CAAP,CAAkBqH,CAAlB,CAA6B,CAO3C,IAAI5E,EAAoB4E,CAApB5E,EAAiC4E,CAAAc,qBAAA,EAAjC1F,EAAqE,EAAzE,CACIoG,EAAe3K,CAAAmB,SAAfwJ,GAAiC5P,IAAAiH,uBAAjC2I,EACF,CAAC3K,CAAAqJ,mBADCsB,EAEFpG,CAFEoG,EAEmB3K,CAAA4K,cAAA,CAAmBrG,CAAnB,CAHvB,CAIIsG,EAAiBF,CAAjBE,EACD1G,gBAAAhF,KAAAc,QAAAW,cAAA,CAA2B+J,CAA3B,CAAAxJ,SADC0J,GAEF9P,IAAAiH,uBAQF,GAPI8I,CAOJ,CAPiBH,CAOjB,EAPiC3K,CAAA6E,UAOjC,GAPoDN,CAOpD,GAAmBzC,CAAA+C,UAAnB,GAA2CN,CAA3C,GACM4E,CADN,EAIIA,CAAAe,OAAA,EAIJ,EADIa,CACJ,CADgB,IAAAC,uBAAA,CAA4BlJ,CAA5B,CAChB,GACEA,CAAAgE,UAAAoE,OAAA,EAOF,OAAOa,EAAP,EAAqBD,CAArB,EAAmC,CAACD,CArCO,CAlI/B,CA4KdtB,wBAAAA,QAAuB,CAACvJ,CAAD;AAAOX,CAAP,CAAeiF,CAAf,CAAqB,CAC1C,IAAI2G,CAAJ,CACI1G,EAAoBD,CAAA2F,qBAAA,EACxB,IAAIjK,CAAAmB,SAAJ,GAAsBpG,IAAAiH,uBAAtB,EACGhC,CAAAqJ,mBADH,CAYWrJ,CAAA6E,UAAJ,GAAuBN,CAAvB,GACLJ,gBAAAhF,KAAAc,QAAAF,eAAA,CAA4BV,CAA5B,CAEA,CADA8E,gBAAAhF,KAAAc,QAAAF,eAAA,CAA4BC,CAA5B,CACA,CAAAiL,CAAA,CAAQ,CAAA,CAHH,CAZP,KAGE,KADItJ,IAAAA,EAAK3B,CAAAyE,iBAAA,CAAsBF,CAAtB,CAAL5C,CACKhJ,EAAE,CADPgJ,CACUlE,CADVkE,CACauJ,CAAjB,CAA0BvS,CAA1B,CAA4BgJ,CAAA1I,OAA5B,GAA2CwE,CAA3C,CAA6CkE,CAAA,CAAGhJ,CAAH,CAA7C,EAAqDA,CAAA,EAArD,CACEuS,CAMA,CANK/G,gBAAAhF,KAAAc,QAAAW,cAAA,CAA2BnD,CAA3B,CAML,CAJIyN,CAIJ,GAJWlL,CAIX,GAHEkL,CAGF,CAHO7L,CAGP,EADA8L,CACA,CADK,IAAA5B,wBAAA,CAA6B9L,CAA7B,CAAgCyN,CAAhC,CAAoC5G,CAApC,CACL,CAAA2G,CAAA,CAAQA,CAAR,EAAiBE,CAOrB,OAAOF,EApBmC,CA5K9B,CAmMdD,uBAAAA,QAAsB,CAAChL,CAAD,CAAO,CAC3B,MAAOA,EAAP,EAAeA,CAAA8F,UAAf,EACE9F,CAAA8F,UAAApB,kBAAA,EAFyB,CAnMf;AAyMd+E,WAAAA,QAAU,EAAG,EAzMC,CA0MdW,aAAAA,QAAY,EAAG,EA1MD,CAyNdJ,2BAAAA,QAA0B,CAAC1F,CAAD,CAAOxC,CAAP,CAAkB,CAC1C,IAAIsJ,CACA1E,EAAAA,CAAMpC,CAAAK,iBACV,KAAK,IAAIhM,EAAE,CAAX,CAAcA,CAAd,CAAgB+N,CAAAzN,OAAhB,CAA4BN,CAAA,EAA5B,CAAiC,CAC/B,IAAI0M,EAAiBqB,CAAA,CAAI/N,CAAJ,CACrB,IAAI,IAAA0S,UAAA,CAAevJ,CAAf,CAA0BuD,CAA1B,CAAJ,CAEE,IADIiG,IAAAA,EAAMjG,CAAAkG,cAAA,CAA6B,CAACC,QAAS,CAAA,CAAV,CAA7B,CAANF,CACK1S,EAAE,CAAX,CAAcA,CAAd,CAAgB0S,CAAArS,OAAhB,CAA4BL,CAAA,EAA5B,CAAiC,CAC/BwS,CAAA,CAAgB,CAAA,CAChB,KAAIpL,EAAOsL,CAAA,CAAI1S,CAAJ,CAAX,CACIyG,EAAS8E,gBAAAhF,KAAAe,SAAAU,cAAA,CAA4BZ,CAA5B,CACTX,EAAJ,EACE8E,gBAAAhF,KAAAe,SAAAhB,YAAA,CAA0BG,CAA1B,CAAkCW,CAAlC,CAL6B,CAJJ,CAcjC,MAAOoL,EAjBmC,CAzN9B,CA6OdC,UAAAA,QAAS,CAACvJ,CAAD,CAAY9B,CAAZ,CAAkB,CACzB,IAAA,CAAOA,CAAP,CAAA,CAAa,CACX,GAAIA,CAAJ,EAAY8B,CAAZ,CACE,MAAO,CAAA,CAET9B,EAAA,CAAOmE,gBAAAhF,KAAAc,QAAAW,cAAA,CAA2BZ,CAA3B,CAJI,CADY,CA7Ob,CAsPdmK,sBAAAA,QAAqB,CAACnK,CAAD,CAAO,CAE1B,GAAI,IAAAsK,oBAAA,CAAyBtK,CAAzB,CAAJ,CAEE,IADA,IAAI2B;AAAKwC,gBAAAhF,KAAAc,QAAAO,cAAA,CAA2BR,CAA3B,CAAT,CACSrH,EAAE,CADX,CACcmH,EAAE6B,CAAA1I,OADhB,CAC2BwE,CAA3B,CAA+B9E,CAA/B,CAAiCmH,CAAjC,GAAwCrC,CAAxC,CAA0CkE,CAAA,CAAGhJ,CAAH,CAA1C,EAAkDA,CAAA,EAAlD,CACE,IAAAwR,sBAAA,CAA2B1M,CAA3B,CAGJuC,EAAAuK,iBAAA,CAAwBvQ,IAAAA,EARE,CAtPd,CAoQdyR,kBAAAA,QAAiB,CAACpG,CAAD,CAAiB,CAGhC,IAFA,IAAI9H,EAAK8H,CAAAkG,cAAA,CAA6B,CAACC,QAAS,CAAA,CAAV,CAA7B,CAAT,CACIlH,EAAO,IAAAkG,YAAA,CAAiBnF,CAAjB,CADX,CAES1M,EAAE,CAFX,CAEcmH,EAAEvC,CAAAtE,OAFhB,CAE2BwE,CAA3B,CAA+B9E,CAA/B,CAAiCmH,CAAjC,GAAwCrC,CAAxC,CAA0CF,CAAA,CAAG5E,CAAH,CAA1C,EAAkDA,CAAA,EAAlD,CAEE,GAAI2L,CAAAkC,mBAAA,CAAwBnB,CAAxB,CAAwC5H,CAAxC,CAAJ,CACE,MAAOA,EANqB,CApQpB,CA+QdiO,UAAAA,QAAS,CAAC1L,CAAD,CAAO,CACd,IAAA,CAAOA,CAAAT,WAAP,CAAA,CACES,CAAAd,YAAA,CAAiBc,CAAAT,WAAjB,CAFY,CA/QF,CAqRdwK,sBAAAA,QAAqB,CAAC/J,CAAD,CAAO,CACtBX,CAAAA,CAAS8E,gBAAAhF,KAAAc,QAAAW,cAAA,CAA2BZ,CAA3B,CACb,IAAI,IAAAgL,uBAAA,CAA4B3L,CAA5B,CAAJ,CAEE,MADAA,EAAAyG,UAAAoE,OAAA,EACO;AAAA,CAAA,CAJiB,CArRd,CA6RdyB,+BAAAA,QAA8B,CAAC3L,CAAD,CAAOlD,CAAP,CAAa,CACJ,MACrC,GADkBkD,CAAA6E,UAClB,EADwD,MACxD,GAD+C/H,CAC/C,GACMwH,CACJ,CADW,IAAAkG,YAAA,CAAiBxK,CAAjB,CACX,CAAIsE,CAAA4F,OAAJ,EACE5F,CAAA4F,OAAA,EAHJ,CAFyC,CA7R7B,CA0Sd0B,MAAAA,QAAK,CAAC5L,CAAD,CAAO6L,CAAP,CAAgBC,CAAhB,CAAwB,CAC3B,IAAIC,EAAO,EACX,KAAAC,eAAA,CAAoB7H,gBAAAhF,KAAAc,QAAAO,cAAA,CAA2BR,CAA3B,CAApB,CAAsD6L,CAAtD,CACEC,CADF,CACUC,CADV,CAEA,OAAOA,EAJoB,CA1Sf,CAiTdC,eAAAA,QAAc,CAACC,CAAD,CAAWJ,CAAX,CAAoBC,CAApB,CAA4BC,CAA5B,CAAkC,CAC9C,IAD8C,IACrCpT,EAAE,CADmC,CAChCmH,EAAEmM,CAAAhT,OAD8B,CACb6J,CAAjC,CAAqCnK,CAArC,CAAuCmH,CAAvC,GAA8CgD,CAA9C,CAAgDmJ,CAAA,CAAStT,CAAT,CAAhD,EAA8DA,CAAA,EAA9D,CACE,GAAImK,CAAA3B,SAAJ,GAAmBpG,IAAAqG,aAAnB,EACI,IAAA8K,cAAA,CAAmBpJ,CAAnB,CAAsB+I,CAAtB,CAA+BC,CAA/B,CAAuCC,CAAvC,CADJ,CAEE,MAAO,CAAA,CAJmC,CAjTlC,CA0TdG,cAAAA,QAAa,CAAClM,CAAD,CAAO6L,CAAP,CAAgBC,CAAhB,CAAwBC,CAAxB,CAA8B,CACzC,IAAII,EAASN,CAAA,CAAQ7L,CAAR,CACTmM,EAAJ,EACEJ,CAAA5S,KAAA,CAAU6G,CAAV,CAEF,IAAI8L,CAAJ,EAAcA,CAAA,CAAOK,CAAP,CAAd,CACE,MAAOA,EAET,KAAAH,eAAA,CAAoB7H,gBAAAhF,KAAAc,QAAAO,cAAA,CAA2BR,CAA3B,CAApB;AAAsD6L,CAAtD,CACEC,CADF,CACUC,CADV,CARyC,CA1T7B,CAsUdK,qBAAAA,QAAoB,CAACpM,CAAD,CAAO,CACzB,IAAIqM,EAAS5B,QAAA6B,cACb,IAAKD,CAAAA,CAAL,CACE,MAAO,KAET,KAAIvQ,EAAc,CAAG,CAAA8C,iBAAA9C,YAAA,CAAkBkE,CAAlB,CACrB,IAAI,EAAAA,CAAA,GAASyK,QAAT,EAGG3O,CAHH,EASEkE,CAAA3E,KATF,GASgBgR,CAThB,EAUGrM,CAAA3E,KAAAqP,SAAA,CAAmB2B,CAAnB,CAVH,CAAJ,CAWI,MAAO,KAOX,KADIE,CACJ,CADiB,IAAAnD,sBAAA,CAA2BiD,CAA3B,CACjB,CAAOE,CAAP,EAAqBA,CAArB,GAAoCvM,CAApC,CAAA,CACEqM,CACA,CADSE,CAAAlR,KACT,CAAAkR,CAAA,CAAa,IAAAnD,sBAAA,CAA2BiD,CAA3B,CAEf,OAAIrM,EAAJ,GAAayK,QAAb,CAES8B,CAAA,CAAa,IAAb,CAAoBF,CAF7B,CAMSE,CAAA,GAAevM,CAAf,CAAsBqM,CAAtB,CAA+B,IAlCf,CAtUb,CANf,CAoXGG,2CAAkB3R,OAAAC,UAAA2R,UApXrB,CAqXGC,4CAAmBC,QAAA7R,UAAA8R,WArXtB,CAsXGC;AAAqBhS,OAAAC,UAAAgS,aAtXxB,CAuXGC,iDAAwBlS,OAAAC,UAAAkS,gBAvX3B,CAyXGC,qCAAY,EAEhB/P;MAAAgQ,iBAAA,CAAwBD,oCAAxB,CAAmC,CAEjCE,cAAe,CACbvJ,IAAAA,QAAG,EAAG,CACJ,MAAOO,iBAAAhF,KAAAc,QAAAW,cAAA,CAA2B,IAA3B,CADH,CADO,CAIbwM,aAAc,CAAA,CAJD,CAFkB,CASjChS,WAAY,CACVwI,IAAAA,QAAG,EAAG,CACJ,MAAOO,iBAAAhF,KAAAc,QAAAW,cAAA,CAA2B,IAA3B,CADH,CADI,CAIVwM,aAAc,CAAA,CAJJ,CATqB,CAgBjC5N,YAAa,CACXoE,IAAAA,QAAG,EAAG,CACJ,MAAOO,iBAAAhF,KAAAc,QAAAU,eAAA,CAA4B,IAA5B,CADH,CADK,CAIXyM,aAAc,CAAA,CAJH,CAhBoB,CAuBjCpM,gBAAiB,CACf4C,IAAAA,QAAG,EAAG,CACJ,MAAOO,iBAAAhF,KAAAc,QAAAc,mBAAA,CAAgC,IAAhC,CADH,CADS,CAIfqM,aAAc,CAAA,CAJC,CAvBgB,CA8BjCzN,mBAAoB,CAClBiE,IAAAA,QAAG,EAAG,CACJ,MAAOO,iBAAAhF,KAAAc,QAAAsB,sBAAA,CAAmC,IAAnC,CADH,CADY;AAIlB6L,aAAc,CAAA,CAJI,CA9Ba,CAqCjCxK,uBAAwB,CACtBgB,IAAAA,QAAG,EAAG,CACJ,MAAOO,iBAAAhF,KAAAc,QAAAwB,0BAAA,CAAuC,IAAvC,CADH,CADgB,CAItB2L,aAAc,CAAA,CAJQ,CArCS,CA4CjCC,aAAc,CACZzJ,IAAAA,QAAG,EAAG,CACJ,MAAO,KAAAwB,cADH,CADM,CAIZgI,aAAc,CAAA,CAJF,CA5CmB,CAAnC,CAoDA;IAAIE,yCAAgB,CAElBtO,YAAAA,QAAW,CAACgB,CAAD,CAAO,CAChB,MAAO,KAAAlB,aAAA,CAAkBkB,CAAlB,CADS,CAFA,CAYlBlB,aAAAA,QAAY,CAACkB,CAAD,CAAO+B,CAAP,CAAiB,CAC3B,GAAIA,CAAJ,EAAgBoC,gBAAAhF,KAAAc,QAAAW,cAAA,CAA2BmB,CAA3B,CAAhB,GAAyD,IAAzD,CACE,KAAM8G,MAAA,CAAM,gEAAN,CAAN,CAIF,GAAI7I,CAAAmB,SAAJ,GAAsBpG,IAAAiH,uBAAtB,CAAmD,CACjD,IAAI3C,EAAS8E,gBAAAhF,KAAAc,QAAAW,cAAA,CAA2BZ,CAA3B,CACbiJ,qCAAAoB,qBAAA,CAA+BrK,CAA/B,CAAqCX,CAArC,CAFiD,CAI9C4J,oCAAAC,QAAA,CAAkB,IAAlB,CAAwBlJ,CAAxB,CAA8B+B,CAA9B,CAAL,GACMA,CAYJ,GATMuC,CASN,CATa2E,oCAAAG,sBAAA,CAAgCrH,CAAhC,CASb;CAPIA,CAOJ,CAPeA,CAAA8C,UAAA,GAAuBP,CAAA2F,qBAAA,EAAvB,CACThB,oCAAAwC,kBAAA,CAA4B1J,CAA5B,CADS,CAC+BA,CAM9C,EAFID,CAEJ,CAFgBlD,iBAAA9C,YAAA,CAAkB,IAAlB,CAAA,CACd,IAAAT,KADc,CACF,IACd,CAAI0G,CAAJ,CACEoC,gBAAAhF,KAAAe,SAAApB,aAAA,CAA2BgD,CAA3B,CAAsC9B,CAAtC,CAA4C+B,CAA5C,CADF,CAGEoC,gBAAAhF,KAAAe,SAAAlB,YAAA,CAA0B8C,CAA1B,CAAqC9B,CAArC,CAhBJ,CAqBA,OAAOA,EA/BoB,CAZX,CAkDlBd,YAAAA,QAAW,CAACc,CAAD,CAAO,CAChB,GAAImE,gBAAAhF,KAAAc,QAAAW,cAAA,CAA2BZ,CAA3B,CAAJ,GAAyC,IAAzC,CACE,KAAM6I,MAAA,CAAM,sDAAN,CACJ7I,CADI,CAAN,CAGF,GAAK,CAAAiJ,oCAAAW,WAAA,CAAqB5J,CAArB,CAAL,CAAiC,CAE/B,IAAI8B,EAAYlD,iBAAA9C,YAAA,CAAkB,IAAlB,CAAA;AACd,IAAAT,KADc,CAEd,IAFF,CAKIgE,EAAS8E,gBAAAhF,KAAAe,SAAAU,cAAA,CAA4BZ,CAA5B,CACT8B,EAAJ,GAAkBzC,CAAlB,EACE8E,gBAAAhF,KAAAe,SAAAhB,YAAA,CAA0B4C,CAA1B,CAAqC9B,CAArC,CAT6B,CAcjC,MAAOA,EAnBS,CAlDA,CAwElBuN,aAAAA,QAAY,CAACvN,CAAD,CAAO+B,CAAP,CAAiB,CAC3B,IAAAjD,aAAA,CAAkBkB,CAAlB,CAAwB+B,CAAxB,CACA,KAAA7C,YAAA,CAAiB6C,CAAjB,CACA,OAAO/B,EAHoB,CAxEX,CA+ElB4K,cAAAA,QAAa,CAAClO,CAAD,CAAW,CAOtB,MALauM,qCAAA2C,MAAA,CAAgB,IAAhB,CAAsB,QAAQ,CAACnO,CAAD,CAAI,CAC7C,MAAOmB,kBAAAzC,gBAAA,CAAsBsB,CAAtB,CAAyBf,CAAzB,CADsC,CAAlC,CAEV,QAAQ,CAACe,CAAD,CAAI,CACb,MAAO,CAAQA,CAAAA,CADF,CAFF,CAAA0O,CAIV,CAJUA,CAKb,EAAiB,IAPK,CA/EN,CAyFlB1H,iBAAAA,QAAgB,CAAC/H,CAAD,CAAW,CACzB,MAAOuM,qCAAA2C,MAAA,CAAgB,IAAhB,CAAsB,QAAQ,CAACnO,CAAD,CAAI,CACvC,MAAOmB,kBAAAzC,gBAAA,CAAsBsB,CAAtB;AAAyBf,CAAzB,CADgC,CAAlC,CADkB,CAzFT,CA+FlB+P,UAAAA,QAAS,CAACe,CAAD,CAAO,CACd,GAAsB,UAAtB,EAAI,IAAA3I,UAAJ,CACE,MAAO2H,2CAAA7P,KAAA,CAAqB,IAArB,CAA2B6Q,CAA3B,CAEP,KAAI/P,EAAI+O,0CAAA7P,KAAA,CAAqB,IAArB,CAA2B,CAAA,CAA3B,CACR,IAAI6Q,CAAJ,CAAU,CACJ7L,CAAAA,CAAK,IAAApB,WACT,KAFQ,IAEC5H,EAAE,CAFH,CAEM8U,CAAd,CAAkB9U,CAAlB,CAAsBgJ,CAAA1I,OAAtB,CAAiCN,CAAA,EAAjC,CACE8U,CACA,CADK9L,CAAA,CAAGhJ,CAAH,CAAA8T,UAAA,CAAgB,CAAA,CAAhB,CACL,CAAAhP,CAAAuB,YAAA,CAAcyO,CAAd,CAJM,CAOV,MAAOhQ,EAZK,CA/FE,CA+GlBmP,WAAAA,QAAU,CAACc,CAAD,CAAeF,CAAf,CAAqB,CAE7B,IAAIG,EAAM,IAAA,WAAgBhB,SAAhB,CAA2B,IAA3B,CACR,IAAAiB,cADF,CAEInQ,EAAIiP,2CAAA/P,KAAA,CAAsBgR,CAAtB,CAA2BD,CAA3B,CAAyC,CAAA,CAAzC,CACR,IAAIF,CAAJ,CAAU,CACJ7L,CAAAA,CAAKwC,gBAAAhF,KAAAc,QAAAO,cAAA,CAA2BkN,CAA3B,CACT9O,kBAAAD,OAAAiD,UAAA,CAAuBnE,CAAvB,CACS9E;CAAAA,CAAE,CAAX,KAAK,IAAS8U,CAAd,CAAkB9U,CAAlB,CAAsBgJ,CAAA1I,OAAtB,CAAiCN,CAAA,EAAjC,CACE8U,CACA,CADKE,CAAAf,WAAA,CAAejL,CAAA,CAAGhJ,CAAH,CAAf,CAAsB,CAAA,CAAtB,CACL,CAAA8E,CAAAuB,YAAA,CAAcyO,CAAd,CALM,CAQV,MAAOhQ,EAbsB,CA/Gb,CAgIpBP;MAAAgQ,iBAAA,CAAwBI,wCAAxB,CAAuC,CAErC/M,WAAY,CACVqD,IAAAA,QAAG,EAAG,CACJ,IAAIjC,EAAKwC,gBAAAhF,KAAAc,QAAAO,cAAA,CAA2B,IAA3B,CACT,OAAO9H,MAAAmV,QAAA,CAAclM,CAAd,CAAA,CAAoBA,CAApB,CAAyBwC,gBAAAhF,KAAAC,oBAAA,CAAyB,IAAzB,CAF5B,CADI,CAKVgO,aAAc,CAAA,CALJ,CAFyB,CAUrCrI,SAAU,CACRnB,IAAAA,QAAG,EAAG,CACJ,MAAIO,iBAAAhF,KAAAc,QAAAK,cAAA,CAA2B,IAA3B,CAAJ,CACS5H,KAAAoC,UAAAgT,OAAAnR,KAAA,CAA4B,IAAA4D,WAA5B,CAA6C,QAAQ,CAAC9C,CAAD,CAAI,CAC9D,MAAQA,EAAA0D,SAAR,GAAuBpG,IAAAqG,aADuC,CAAzD,CADT,CAKS+C,gBAAAhF,KAAAM,kBAAA,CAAuB,IAAvB,CANL,CADE,CAUR2N,aAAc,CAAA,CAVN,CAV2B,CAuBrC7N,WAAY,CACVqE,IAAAA,QAAG,EAAG,CACJ,MAAOO,iBAAAhF,KAAAc,QAAAS,cAAA,CAA2B,IAA3B,CADH,CADI;AAIV0M,aAAc,CAAA,CAJJ,CAvByB,CA8BrCtM,UAAW,CACT8C,IAAAA,QAAG,EAAG,CACJ,MAAOO,iBAAAhF,KAAAc,QAAAY,aAAA,CAA0B,IAA1B,CADH,CADG,CAITuM,aAAc,CAAA,CAJL,CA9B0B,CAqCrC1N,kBAAmB,CACjBkE,IAAAA,QAAG,EAAG,CACJ,MAAOO,iBAAAhF,KAAAc,QAAAgB,qBAAA,CAAkC,IAAlC,CADH,CADW,CAIjBmM,aAAc,CAAA,CAJG,CArCkB,CA4CrCzK,iBAAkB,CAChBiB,IAAAA,QAAG,EAAG,CACJ,MAAOO,iBAAAhF,KAAAc,QAAAoB,oBAAA,CAAiC,IAAjC,CADH,CADU,CAIhB+L,aAAc,CAAA,CAJE,CA5CmB,CAsDrCW,YAAa,CACXnK,IAAAA,QAAG,EAAG,CACJ,GAAI,IAAArD,WAAJ,CAAqB,CAEnB,IADA,IAAIyN,EAAK,EAAT,CACSrV,EAAI,CADb,CACgBsV,EAAK,IAAA1N,WADrB,CACsCuC,CAAtC,CAA0CA,CAA1C,CAA8CmL,CAAA,CAAGtV,CAAH,CAA9C,CAAsDA,CAAA,EAAtD,CACMmK,CAAA3B,SAAJ,GAAmBpG,IAAA4N,aAAnB,EACEqF,CAAA7U,KAAA,CAAQ2J,CAAAiL,YAAR,CAGJ,OAAOC,EAAAE,KAAA,CAAQ,EAAR,CAPY,CASrB,MAAO,EAVH,CADK;AAaXpG,IAAAA,QAAG,CAACqG,CAAD,CAAO,CACRlF,oCAAAyC,UAAA,CAAoB,IAApB,CACIyC,EAAJ,EACE,IAAAnP,YAAA,CAAiByL,QAAA2D,eAAA,CAAwBD,CAAxB,CAAjB,CAHM,CAbC,CAmBXf,aAAc,CAAA,CAnBH,CAtDwB,CA4ErCiB,UAAW,CACTzK,IAAAA,QAAG,EAAG,CACJ,MAAOoF,sBAAAR,aAAA,CAAa,IAAb,CADH,CADG,CAITV,IAAAA,QAAG,CAACqG,CAAD,CAAO,CACRlF,oCAAAyC,UAAA,CAAoB,IAApB,CACA,KAAI4C,EAAI7D,QAAA8D,cAAA,CAAuB,KAAvB,CACRD,EAAAD,UAAA,CAAcF,CAGVxM,EAAAA,CAAKwC,gBAAAhF,KAAAC,oBAAA,CAAyBkP,CAAzB,CACT,KAAS3V,CAAT,CAAW,CAAX,CAAcA,CAAd,CAAkBgJ,CAAA1I,OAAlB,CAA6BN,CAAA,EAA7B,CACE,IAAAqG,YAAA,CAAiB2C,CAAA,CAAGhJ,CAAH,CAAjB,CARM,CAJD,CAeTyU,aAAc,CAAA,CAfL,CA5E0B,CAAvC,CAgGA;IAAIoB,wCAAe,CAGjBjD,cAAAA,QAAa,CAACvQ,CAAD,CAAU,CACrB,OAAQA,CAAA,EAAWA,CAAAwQ,QAAX,CAA6B,IAAAlG,kBAA7B,CACN,IAAAC,eADF,GAC0B,EAFL,CAHN,CASjBuH,aAAAA,QAAY,CAAChQ,CAAD,CAAOyL,CAAP,CAAc,CACxBsE,6CAAAlQ,KAAA,CAAwB,IAAxB,CAA8BG,CAA9B,CAAoCyL,CAApC,CACKU,qCAAAc,sBAAA,CAAgC,IAAhC,CAAL,EACEd,oCAAA0C,+BAAA,CAAyC,IAAzC,CAA+C7O,CAA/C,CAHsB,CATT,CAgBjBkQ,gBAAAA,QAAe,CAAClQ,CAAD,CAAO,CACpBiQ,gDAAApQ,KAAA,CAA2B,IAA3B,CAAiCG,CAAjC,CACKmM,qCAAAc,sBAAA,CAAgC,IAAhC,CAAL;AACEd,oCAAA0C,+BAAA,CAAyC,IAAzC,CAA+C7O,CAA/C,CAHkB,CAhBL,CAyBnBI,OAAAgQ,iBAAA,CAAwBsB,uCAAxB,CAAsC,CAEpCC,WAAY,CACV7K,IAAAA,QAAG,EAAG,CACJ,MAAO,KAAAkC,UADH,CADI,CAFwB,CAQpCQ,KAAM,CACJ1C,IAAAA,QAAG,EAAG,CACJ,MAAO,KAAAwC,aAAA,CAAkB,MAAlB,CADH,CADF,CAIJ0B,IAAAA,QAAG,CAACS,CAAD,CAAQ,CACT,IAAAuE,aAAA,CAAkB,MAAlB,CAA0BvE,CAA1B,CADS,CAJP,CAR8B,CAAtC,CAmBA,KAAImG,mDAA0B,CAC5B9K,IAAAA,QAAG,EAAG,CACJ,MAAOqF,qCAAAmD,qBAAA,CAA+B,IAA/B,CADH,CADsB,CAA9B,CAMIuC,8CAAqB,EACzBzR;MAAAgQ,iBAAA,CAAwByB,6CAAxB,CAA4C,CAC1CrC,cAAeoC,kDAD2B,CAA5C,CAIA,KAAIE,mDAA0B,EAC9B1R,OAAAgQ,iBAAA,CAAwB0B,kDAAxB,CAAiD,CAC/CC,eAAgBH,kDAD+B,CAAjD,CAIO;IAAII,kCAAS,CAElB/T,KAAM6D,iBAAAjB,UAAA,CAAgB,CAAC0E,UAAW,MAAZ,CAAhB,CAAqC4K,oCAArC,CAFY,CAIlB8B,SAAUnQ,iBAAAjB,UAAA,CAAgB,CAAC0E,UAAW,UAAZ,CAAhB,CACR4K,oCADQ,CACGK,wCADH,CACkBqB,6CADlB,CAJQ,CAOlB9T,QAAS+D,iBAAAjB,UAAA,CAAgB,CAAC0E,UAAW,SAAZ,CAAhB,CACP4K,oCADO,CACIK,wCADJ,CACmBkB,uCADnB,CACiCG,6CADjC,CAPS;AAWlBhC,SAAU/N,iBAAAjB,UAAA,CAAgB,CAAC0E,UAAW,UAAZ,CAAhB,CACR4K,oCADQ,CACGK,wCADH,CACkBkB,uCADlB,CACgCI,kDADhC,CAXQ,CAAb,CAgBIpE,uCAAcvB,oCAAAuB,YAhBdwE,0BAAAF,OAAA,CAAAA,iCAgBAE,0BAAAxE,YAAA,CAAAA,sC,CC3tBV,IAAA,kBAAA,EAAA,CAWYyE,6BAEX5K,QAAW,CAAChJ,CAAD,CAAO,CAChB,GAAKA,CAAAA,CAAL,CACE,KAAM,qBAAN,CAIF,IAAI6T,EAAOzE,QAAA0E,uBAAA,EACXD,EAAAE,UAAA,CAAiBC,qCACjBH,EAAAI,MAAA,CAAWjU,CAAX,CACA,OAAO6T,EATS,CAbnB,CA2BGK,8BAAa,CAEfD,MAAAA,QAAK,CAACjU,CAAD,CAAO,CAIV,IAAAW,YAAA,CAAmB,WAEnBX,EAAAyK,UAAA,CAAiB,IACjB,KAAAzK,KAAA,CAAYA,CAEZ8I,iBAAAhF,KAAAc,QAAAF,eAAA,CAA4B1E,CAA5B,CACA8I,iBAAAhF,KAAAc,QAAAF,eAAA,CAA4B,IAA5B,CAEA,KAAAyP,OAAA,CAAc,CAAA,CACd,KAAAC,aAAA,CAAoB,CAAA,CACpB,KAAAC,aAAA,CAAoB,IAAI3I,uBAAAC,QAAJ,CAAgB,IAAhB,CACpB;IAAAkD,OAAA,EAfU,CAFG,CAsBfA,OAAAA,QAAM,EAAG,CACP,IAAIyF,EAAmB,IAAAC,sBAAA,CAA2B,IAAAvU,KAA3B,CAEnBsU,EAAAH,OAAJ,GACEG,CAAAH,OACA,CAD0B,CAAA,CAC1B,CAAAK,0BAAA,CAAQ,QAAQ,EAAG,CACjBF,CAAAG,OAAA,EADiB,CAAnB,CAFF,CAHO,CAtBM,CAkCfF,sBAAAA,QAAqB,CAACnT,CAAD,CAAU,CAE7B,IADA,IAAI6H,EAAO7H,CAAAqJ,UACX,CAAOrJ,CAAP,EAAkB,IAAAsT,0BAAA,CAA+BtT,CAA/B,CAAlB,CAAA,CAEEA,CAAA,EADA6H,CACA,CADO7H,CAAA+N,YAAA,EACP,GAAkBlG,CAAAjJ,KAEpB,OAAOiJ,EANsB,CAlChB,CA6CfyL,0BAAAA,QAAyB,CAACtT,CAAD,CAAU,CAEjC,IADA,IAAIkF,EAAKwC,gBAAAhF,KAAAc,QAAAO,cAAA,CAA2B/D,CAA3B,CAAT,CACS9D,EAAE,CADX,CACcmK,CAAd,CAAiBnK,CAAjB,CAAqBgJ,CAAA1I,OAArB,CAAgCN,CAAA,EAAhC,CAEE,GADAmK,CACI,CADAnB,CAAA,CAAGhJ,CAAH,CACA,CAAA,IAAA+W,aAAA9K,iBAAA,CAAmC9B,CAAnC,CAAJ,CACE,MAAOrG,EAAA+N,YAAA,EALsB,CA7CpB,CAuDfsF,OAAAA,QAAM,EAAG,CACF,IAAAN,OAAL;CACO,IAAAlG,2BAAL,CAEY,IAAAmG,aAFZ,GAGE,IAAA9K,iBAHF,CAG0B,EAH1B,EACE,IAAAqL,sBAAA,EAwBF,CApBA,IAAA1G,2BAoBA,CApBkC,CAAA,CAoBlC,CANA,IAAA9D,WAAA,EAMA,CAJA,IAAAyK,QAAA,EAIA,CAFA,IAAAP,aAAAjJ,SAAA,EAEA,CAAA,IAAAgJ,aAAA,CADA,IAAAD,OACA,CADc,CAAA,CAzBhB,CADO,CAvDM,CAsFfU,YAAAA,QAAW,EAAG,CACZ,IAAAV,OAAA,CAAc,CAAA,CACd,KAAAM,OAAA,EAFY,CAtFC,CA2FftK,WAAAA,QAAU,EAAG,CAEX,IADA,IAAII,EAAa,IAAA8J,aAAAlK,WAAA,EAAjB,CACS7M,EAAE,CAAX,CAAcA,CAAd,CAAgBiN,CAAA3M,OAAhB,CAAmCN,CAAA,EAAnC,CACEiN,CAAA,CAAWjN,CAAX,CAAAuX,YAAA,EAHS,CA3FE,CAkGfF,sBAAAA,QAAqB,EAAG,CAOtB,IANA,IAAIG,EAAK,IAAAxL,iBAALwL,CAA6B,IAAAT,aAAAlL,mBAAA,EAAjC,CAMS7L;AAAE,CANX,CAMcmK,CAAd,CAAiBnK,CAAjB,CAAqBwX,CAAAlX,OAArB,CAAgCN,CAAA,EAAhC,CACEmK,CAEA,CAFIqN,CAAA,CAAGxX,CAAH,CAEJ,CADAwL,gBAAAhF,KAAAc,QAAAF,eAAA,CAA4B+C,CAA5B,CACA,CAAAqB,gBAAAhF,KAAAc,QAAAF,eAAA,CAA4BoE,gBAAAhF,KAAAc,QAAAW,cAAA,CAA2BkC,CAA3B,CAA5B,CAVoB,CAlGT,CAgHX6B,sBAAmB,CAChB,IAAAyL,kBAAL,EACE,IAAAJ,sBAAA,EAEF,OAAO,KAAAI,kBAAP,GAAkC,IAAAA,kBAAlC,CAA2D,EAA3D,CAJqB,CAhHR,CAuHXzL,qBAAiB0L,CAAjB1L,CAAkC,CACpC,IAAAyL,kBAAA,CAAyBC,CADW,CAvHvB,CA2Hf3L,kBAAAA,QAAiB,EAAG,CAClB,MAAO,KAAAgL,aAAAhL,kBAAA,EADW,CA3HL,CA+HfuL,QAAAA,QAAO,EAAG,CAKR,IAAAK,aAAA,EALQ,CA/HK,CAiJfA,aAAAA,QAAY,EAAG,CACb,IAAAC,kBAAA,CAAuB,IAAAlV,KAAvB;AAAkC,IAAAmV,aAAA,CAAkB,IAAAnV,KAAlB,CAAlC,CAEA,KADA,IAAI4J,EAAK,IAAAN,iBAALM,EAA8B,EAAlC,CACStM,EAAE,CADX,CACcmH,EAAEmF,CAAAhM,OADhB,CAC2BgD,CAD3B,CAC8BoD,CAA9B,CAAuC1G,CAAvC,CAAyCmH,CAAzC,GAAgD7D,CAAhD,CAAkDgJ,CAAA,CAAGtM,CAAH,CAAlD,EAA0DA,CAAA,EAA1D,CACE0G,CACA,CADS8E,gBAAAhF,KAAAc,QAAAW,cAAA,CAA2B3E,CAA3B,CACT,CAAKoD,CAAL,GAAgB,IAAAhE,KAAhB,EAA+BgE,CAA/B,GAA0C,IAA1C,EACE,IAAAkR,kBAAA,CAAuBlR,CAAvB,CAA+B,IAAAmR,aAAA,CAAkBnR,CAAlB,CAA/B,CANS,CAjJA,CA6JfmR,aAAAA,QAAY,CAACxQ,CAAD,CAAO,CACjB,IAAI+E,EAAW,EACXpD,EAAAA,CAAKwC,gBAAAhF,KAAAc,QAAAO,cAAA,CAA2BR,CAAA8F,UAA3B,EAA6C9F,CAA7C,CACT,KAAK,IAAIrH,EAAI,CAAb,CAAgBA,CAAhB,CAAoBgJ,CAAA1I,OAApB,CAA+BN,CAAA,EAA/B,CAAoC,CAClC,IAAIwM,EAAQxD,CAAA,CAAGhJ,CAAH,CACZ,IAAI,IAAA+W,aAAA9K,iBAAA,CAAmCO,CAAnC,CAAJ,CAGE,IAFA,IAAIsL,EAAmBtL,CAAAG,kBAAnBmL,GACDtL,CAAAG,kBADCmL,CACyB,EADzBA,CAAJ,CAES7X,EAAI,CAAb,CAAgBA,CAAhB,CAAoB6X,CAAAxX,OAApB,CAA6CL,CAAA,EAA7C,CAAkD,CAChD,IAAI8X,EAAkBD,CAAA,CAAiB7X,CAAjB,CAClB,KAAA4N,mBAAA,CAAwBrB,CAAxB;AAA+BuL,CAA/B,CAAJ,EACE3L,CAAA5L,KAAA,CAAcuX,CAAd,CAH8C,CAHpD,IAUE3L,EAAA5L,KAAA,CAAcgM,CAAd,CAZgC,CAepC,MAAOJ,EAlBU,CA7JJ,CAkLfyB,mBAAAA,QAAkB,CAACnB,CAAD,CAAiBrF,CAAjB,CAAuB,CACvC,MAAO,KAAA0P,aAAAlJ,mBAAA,CACLnB,CADK,CACWrF,CADX,CADgC,CAlL1B,CAwLfuQ,kBAAAA,QAAiB,CAACzO,CAAD,CAAYiD,CAAZ,CAAsB,CAIrC,IAHA,IAAI9J,EAAWkJ,gBAAAhF,KAAAe,SAAAM,cAAA,CAA4BsB,CAA5B,CAAf,CACI7H,EAAUW,wBAAAL,iBAAA,CAAiBwK,CAAjB,CAA2B9J,CAA3B,CADd,CAGStC,EAAE,CAHX,CAGc2V,EAAE,CAHhB,CAGmB/G,CAAnB,CAAuB5O,CAAvB,CAAyBsB,CAAAhB,OAAzB,GAA6CsO,CAA7C,CAA+CtN,CAAA,CAAQtB,CAAR,CAA/C,EAA4DA,CAAA,EAA5D,CAAiE,CAC/D,IAD+D,IACtDC,EAAE,CADoD,CACjD6E,CAAd,CAAkB7E,CAAlB,CAAsB2O,CAAA9P,QAAAwB,OAAtB,GAA4CwE,CAA5C,CAA8C8J,CAAA9P,QAAA,CAAUmB,CAAV,CAA9C,EAA6DA,CAAA,EAA7D,CAKMuL,gBAAAhF,KAAAe,SAAAU,cAAA,CAA4BnD,CAA5B,CAGJ,GAHuCqE,CAGvC,EAFEqC,gBAAAhF,KAAAe,SAAAhB,YAAA,CAA0B4C,CAA1B,CAAqCrE,CAArC,CAEF,CAAAxC,CAAAnB,OAAA,CAAgByN,CAAA/P,MAAhB,CAA0B8W,CAA1B,CAA6B,CAA7B,CAEFA,EAAA,EAAK/G,CAAA7P,WAX0D,CAcjE,IAASiB,CAAT,CAAW,CAAX,CAAwBA,CAAxB;AAA0BsB,CAAAhB,OAA1B,GAA8CsO,CAA9C,CAAgDtN,CAAA,CAAQtB,CAAR,CAAhD,EAA6DA,CAAA,EAA7D,CAEE,IADAgY,CACS/X,CADFqC,CAAA,CAASsM,CAAA/P,MAAT,CACEoB,CAAAA,CAAAA,CAAE2O,CAAA/P,MAAX,CAAuBoB,CAAvB,CAA2B2O,CAAA/P,MAA3B,CAAqC+P,CAAA7P,WAArC,CAAmDkB,CAAA,EAAnD,CACE6E,CAGA,CAHIsH,CAAA,CAASnM,CAAT,CAGJ,CAFAuL,gBAAAhF,KAAAe,SAAApB,aAAA,CAA2BgD,CAA3B,CAAsCrE,CAAtC,CAAyCkT,CAAzC,CAEA,CAAA1V,CAAAnB,OAAA,CAAgBlB,CAAhB,CAAmB,CAAnB,CAAsB6E,CAAtB,CAxBiC,CAxLxB,CAsNfwM,qBAAAA,QAAoB,EAAG,CACrB,MAAO,KAAAyF,aAAAnL,kBADc,CAtNR,CA3BhB,CAuPG8K,sCAAqBnS,MAAAmB,OAAA,CAAcuS,gBAAA9V,UAAd,CACzB8D,kBAAAtB,OAAA,CAAa+R,qCAAb,CAAiCE,6BAAjC,CA6BA,KAAIsB,kCAAiBtV,MAAAuV,eAArB,CACIC,6BAAY,EADhB,CAEIC,4BACGC;QAASpB,2BAAO,CAACqB,CAAD,CAAW,CAC3BF,4BAAL,GACEA,4BACA,CADY,CAAA,CACZ,CAAAG,OAAAC,QAAA,EAAAC,KAAA,CAAuBC,wBAAvB,CAFF,CAIAP,6BAAA5X,KAAA,CAAe+X,CAAf,CALgC,CAQ3BK,QAASD,yBAAK,EAAG,CACtB,IAAA,CAAOP,4BAAA9X,OAAP,CAAA,CACE8X,4BAAAS,MAAA,EAAA,EAEEX,kCAAJ,EACEA,iCAAAY,YAAA,EAGEV,6BAAA9X,OAAJ,EACEqY,wBAAA,EAToB,CArRXI,iBAAAzC,UAAA,CAAAA,4BA6QGyC;iBAAA7B,QAAA,CAAAA,0BAQA6B,kBAAAJ,MAAA,CAAAA,wB,CCtRf,IAAA,kBAAA,EAAA,CAKUK,gCAAe,CALzB,CAOGC,uBAAM,CAAA,CAPT,CASGC,6BAAY,CAEdC,aAAcA,QAAQ,CAAC9R,CAAD,CAAO,CAC3B,OAAQA,CAAR,EACE,KAAKyK,QAAAsH,KAAL,CACA,KAAKtH,QAAAuH,gBAAL,CACE,MAAO,CAAA,CACT,SACE,MAAO,CAAA,CALX,CAD2B,CAFf,CAYdC,wBAAyB,CAAQ,CAAA/U,MAAAC,yBAAA,CAC/B5B,MAAAR,KAAAD,UAD+B,CACR,aADQ,CAZnB,CAedoX,MAAOA,QAAQ,CAAClS,CAAD,CAAO,CACpB2R,+BAAA,EACAC,uBAAA,EAAOrW,MAAA0I,QAAAC,KAAA,CAAoB,YAApB,CAAkClE,CAAlC,CACH,KAAAiS,wBAAJ,CACErT,iBAAAZ,eAAA,CAAqBgC,CAArB,CAA2B,IAAAmS,eAAA,CAAoBnS,CAApB,CAA3B,CADF;CAGEzE,MAAA0I,QAAAC,KAAA,CAAoB,yCAApB,CAA+DlE,CAA/D,CACA,CAAApB,iBAAAtB,OAAA,CAAa0C,CAAb,CAAmB,IAAAoS,aAAA,CAAkBpS,CAAlB,CAAnB,CAJF,CAHoB,CAfR,CA0BdmS,eAAgBA,QAAQ,CAACpW,CAAD,CAAM,CAC5B,OAAQA,CAAAoF,SAAR,EACE,KAAKpG,IAAAqG,aAAL,CACE,MAAO4N,0BAAAF,OAAAjU,QACT,MAAKE,IAAAiH,uBAAL,CACE,MAAOgN,0BAAAF,OAAAC,SACT,MAAKhU,IAAAsX,cAAL,CACE,MAAOrD,0BAAAF,OAAAnC,SACT,MAAK5R,IAAA0N,UAAL,CACA,KAAK1N,IAAA4N,aAAL,CACE,MAAOqG,0BAAAF,OAAA/T,KATX,CAD4B,CA1BhB,CAwCduX,QAASA,QAAQ,CAACvW,CAAD,CAAM,CACjBA,CAAAuC,cAAJ;CACEvC,CAAAqT,UADF,CACkBrT,CAAAuC,cADlB,CADqB,CAxCT,CAkDTiU,SAAS3Q,6BAAS,CAAC5B,CAAD,CAAO,CACzBpB,iBAAAtD,SAAAK,MAAL,EAGK,CAAA6W,gCAAA,CAAcxS,CAAd,CAHL,EAG4B6R,4BAAAC,aAAA,CAAuB9R,CAAvB,CAH5B,GAIEmE,gBAAAhF,KAAAY,eAAA,CAAoBC,CAApB,CACA,CAAA6R,4BAAAK,MAAA,CAAgBlS,CAAhB,CALF,CAD8B,CAUzByS,QAASC,+BAAW,CAAC1S,CAAD,CAAO,CAChC6R,4BAAAS,QAAA,CAAkBtS,CAAlB,CADgC,CAI3B2S,QAASH,iCAAa,CAACxS,CAAD,CAAO,CAClC,MAAO,CAAQqC,CAAArC,CAAAqC,UADmB,CAKpCzD,iBAAAD,OAAAiD,UAAA,CAAyBA,4BAzEdgR;iBAAAjB,aAAA,CAAAA,+BAsDKiB,kBAAAhR,UAAA,CAAAA,4BAUAgR,kBAAAF,YAAA,CAAAA,8BAIAE,kBAAAJ,cAAA,CAAAA,gC,CCnFf,IAAA,wBAAA,EAAA,CAIGK,8CAAuBhY,OAAAC,UAAAgY,iBAJ1B,CAKGC,iDAA0BlY,OAAAC,UAAAkY,oBAL7B,CAQGC,wCAAiB,CACnBC,KAAM,CAAA,CADa,CAEnBC,MAAO,CAAA,CAFY,CAGnBC,QAAS,CAAA,CAHU,CAInBC,SAAU,CAAA,CAJS,CAKnBC,MAAO,CAAA,CALY,CAMnBC,SAAU,CAAA,CANS,CAOnBC,UAAW,CAAA,CAPQ,CAQnBC,WAAY,CAAA,CARO,CASnBC,WAAY,CAAA,CATO,CAUnBC,UAAW,CAAA,CAVQ,CAWnBC,SAAU,CAAA,CAXS,CAYnBC,UAAW,CAAA,CAZQ,CAanBC,QAAS,CAAA,CAbU,CAcnBC,MAAO,CAAA,CAdY,CAenBC,YAAa,CAAA,CAfM,CAgBnBC,MAAO,CAAA,CAhBY,CAiBnBC,QAAS,CAAA,CAjBU,CAkBnBC,MAAO,CAAA,CAlBY,CAmBnBC,iBAAkB,CAAA,CAnBC,CAoBnBC,kBAAmB,CAAA,CApBA,CAqBnBC,eAAgB,CAAA,CArBG;AAsBnBC,WAAY,CAAA,CAtBO,CAuBnBC,SAAU,CAAA,CAvBS,CAwBnBC,UAAW,CAAA,CAxBQ,CAyBnBC,YAAa,CAAA,CAzBM,CA0BnBC,YAAa,CAAA,CA1BM,CA2BnBC,aAAc,CAAA,CA3BK,CA4BnBC,YAAa,CAAA,CA5BM,CA6BnBC,YAAa,CAAA,CA7BM,CA8BnBC,UAAW,CAAA,CA9BQ,CA+BnBC,cAAe,CAAA,CA/BI,CAgCnBC,WAAY,CAAA,CAhCO,CAiCnBC,aAAc,CAAA,CAjCK,CAkCnBC,kBAAmB,CAAA,CAlCA,CAmCnBC,mBAAoB,CAAA,CAnCD,CAoCnBC,UAAW,CAAA,CApCQ,CAqCnBC,KAAM,CAAA,CArCa,CAsCnBC,UAAW,CAAA,CAtCQ,CAuCnBC,UAAW,CAAA,CAvCQ,CAwCnBC,SAAU,CAAA,CAxCS,CAyCnBC,KAAM,CAAA,CAzCa,CA0CnBC,QAAS,CAAA,CA1CU,CA2CnBC,YAAa,CAAA,CA3CM,CA4CnBC,WAAY,CAAA,CA5CO,CA6CnBC,YAAa,CAAA,CA7CM,CA8CnBC,SAAU,CAAA,CA9CS,CAiDrBC;QAASC,sCAAY,CAACC,CAAD,CAAYjb,CAAZ,CAAsB,CACzC,IAAIkb,EAAe,EAAnB,CACIle,EAAUie,CAEd,KADIE,CACJ,CADgBF,CAAA,GAAc3a,MAAd,CAAuBA,MAAvB,CAAgC2a,CAAA1L,YAAA,EAChD,CAAOvS,CAAP,CAAA,CACEke,CAAAhd,KAAA,CAAkBlB,CAAlB,CAEE,CAAAA,CAAA,CADEA,CAAAoV,aAAJ,CACYpV,CAAAoV,aADZ,CAEWpV,CAAAoD,KAAJ,GAAqBJ,CAArB,EAAiChD,CAAjC,GAA6Cme,CAA7C,EACKne,CAAAoD,KADL,CAGKpD,CAAAmD,WAIV+a,EAAA,CAAaA,CAAAld,OAAb,CAAmC,CAAnC,CAAJ,GAA8CwR,QAA9C,EACE0L,CAAAhd,KAAA,CAAkBoC,MAAlB,CAEF,OAAO4a,EAlBkC;AAqB3CE,QAASC,kCAAQ,CAACC,CAAD,CAAUC,CAAV,CAAgB,CAC/B,GAAK1a,CAAA8C,iBAAA9C,YAAL,CACE,MAAOya,EAILE,EAAAA,CAAcR,qCAAA,CAAaM,CAAb,CAAsB,CAAA,CAAtB,CAElB,KAR+B,IAQtB5d,EAAE,CARoB,CAQjB+d,CARiB,CAQPC,CARO,CAQGrS,CARH,CAQSsS,CAAxC,CAAiDje,CAAjD,CADS6d,CAC4Cvd,OAArD,CAAgEN,CAAA,EAAhE,CAOE,GANA+d,CAMI,CARGF,CAEI,CAAG7d,CAAH,CAMP,CALJ2L,CAKI,CALGoS,CAAA,GAAanb,MAAb,CAAsBA,MAAtB,CAA+Bmb,CAAAlM,YAAA,EAKlC,CAJAlG,CAIA,GAJSqS,CAIT,GAHFC,CACA,CADUH,CAAAI,QAAA,CAAoBvS,CAApB,CACV,CAAAqS,CAAA,CAAWrS,CAET,EAAC,CAAA1F,iBAAA9C,YAAA,CAAkBwI,CAAlB,CAAD,EAAuC,EAAvC,CAA4BsS,CAAhC,CACE,MAAOF,EAhBoB;AAqBjC,IAAII,oCAAa,CAEfzU,UAAW,OAFI,CAIXpH,cAAW,CACT,IAAA8b,UAAJ,EAA0C/c,IAAAA,EAA1C,GAAsB,IAAAgd,WAAtB,GACE,IAAAA,WADF,CACoB/D,uCAAA,CAAe,IAAAgE,KAAf,CADpB,CAGA,OAAO,KAAAD,WAAP,EAA0B,CAAA,CAJb,CAJA,CAWfb,aAAAA,QAAY,EAAG,CACR,IAAAe,eAAL,GACE,IAAAA,eADF,CACwBjB,qCAAA,CAAa,IAAAkB,SAAb,CAA4B,IAAAlc,SAA5B,CADxB,CAGA,OAAO,KAAAic,eAJM,CAXA,CAkBXla,YAAS,CACX,MAAOsZ,kCAAA,CAAS,IAAAc,cAAT,CAA6B,IAAAjB,aAAA,EAA7B,CADI,CAlBE,CAuBXkB,mBAAgB,CAClB,GAAKC,CAAA,IAAAA,gBAAL,CACE,MAAO,KAEJ;IAAAC,4BAAL,GACE,IAAAA,4BADF,CACqCtB,qCAAA,CAAa,IAAAqB,gBAAb,CAAmC,CAAA,CAAnC,CADrC,CAIA,OAAOhB,kCAAA,CAAS,IAAAc,cAAT,CAA6B,IAAAG,4BAA7B,CARW,CAvBL,CAiCfC,gBAAAA,QAAe,EAAG,CAChB3Q,KAAA/L,UAAA0c,gBAAA7a,KAAA,CAAqC,IAArC,CACA,KAAA8a,qBAAA,CAA4B,CAAA,CAFZ,CAjCH,CAqCfC,yBAAAA,QAAwB,EAAG,CACzB7Q,KAAA/L,UAAA4c,yBAAA/a,KAAA,CAA8C,IAA9C,CAEA,KAAA8a,qBAAA,CADA,IAAAE,8BACA,CADqC,CAAA,CAFZ,CArCZ,CA6CjBC;QAASC,2CAAiB,CAACC,CAAD,CAAO,CAG/B,IAAIC,EAAQA,QAAQ,CAACd,CAAD,CAAOjc,CAAP,CAAgB,CAC9Bgd,CAAAA,CAAQ,IAAIF,CAAJ,CAASb,CAAT,CAAejc,CAAf,CACZgd,EAAAhB,WAAA,CAAmBhc,CAAnB,EAA8B,CAAQC,CAAAD,CAAAC,SACtC,OAAO+c,EAH2B,CAMpCpZ,kBAAAd,MAAA,CAAYia,CAAZ,CAAmBD,CAAnB,CACAC,EAAAjd,UAAA,CAAkBgd,CAAAhd,UAClB,OAAOid,EAXwB,CAcjC,IAAIE,qDAA8B,CAChC9E,MAAO,CAAA,CADyB,CAEhCD,KAAM,CAAA,CAF0B,CAKlCgF,SAASC,sCAAY,CAACH,CAAD,CAAQhY,CAAR,CAAcoY,CAAd,CAAqB,CAGxC,GAFIC,CAEJ,CAFSrY,CAAAsY,WAET,EAF4BtY,CAAAsY,WAAA,CAAgBN,CAAAf,KAAhB,CAE5B,EADEjX,CAAAsY,WAAA,CAAgBN,CAAAf,KAAhB,CAAA,CAA4BmB,CAA5B,CACF,CACE,IADM,IACGzf,EAAI,CADP,CACU4f,CAAhB,EAAqBA,CAArB,CAA0BF,CAAA,CAAG1f,CAAH,CAA1B,IACE4f,CAAA5b,KAAA,CAAQqD,CAAR,CAAcgY,CAAd,CACIL,CAAAA,CAAAK,CAAAL,8BAFN,EAAkChf,CAAA,EAAlC,EAJsC;AAa1C6f,QAASC,kDAAwB,CAACC,CAAD,CAAI,CACnC,IAAIlC,EAAOkC,CAAAvC,aAAA,EAAX,CACInW,CAEJ9C,OAAAE,eAAA,CAAsB4a,KAAtB,CAA6B,eAA7B,CAA8C,CAC5CpU,IAAKA,QAAQ,EAAG,CACd,MAAO5D,EADO,CAD4B,CAI5CoN,aAAc,CAAA,CAJ8B,CAA9C,CAMA,KAAK,IAAIzU,EAAI6d,CAAAvd,OAAJN,CAAkB,CAA3B,CAAmC,CAAnC,EAA8BA,CAA9B,CAAsCA,CAAA,EAAtC,CAGE,GAFAqH,CAEIyX,CAFGjB,CAAA,CAAK7d,CAAL,CAEH8e,CADJU,qCAAA,CAAaO,CAAb,CAAgB1Y,CAAhB,CAAsB,SAAtB,CACIyX,CAAAiB,CAAAjB,qBAAJ,CACE,MAGJva,OAAAE,eAAA,CAAsBsb,CAAtB,CAAyB,YAAzB,CAAuC,CAACnQ,MAAO1B,KAAA8R,eAAR,CAAvC,CACA,KAAShgB,CAAT,CAAa,CAAb,CAAgBA,CAAhB,CAAoB6d,CAAAvd,OAApB,GACE+G,CAEIyX,CAFGjB,CAAA,CAAK7d,CAAL,CAEH8e,CADJU,qCAAA,CAAaO,CAAb,CAAgB1Y,CAAhB,CAAsB,QAAtB,CACIyX,CAAAA,CAAAiB,CAAAjB,qBAHN,EAAiC9e,CAAA,EAAjC,EAlBmC;AA2BrCigB,QAASC,uCAAa,CAACC,CAAD,CAAmB,CACvC,MAAO,EAAoC,QAA5B,GAAA,MAAOA,EAAP,CACbC,CAAAD,CAAAC,QADa,CACcD,CAAAA,CADtB,CADgC;AAKlCE,QAASlG,0CAAgB,CAACmE,CAAD,CAAOsB,CAAP,CAAWO,CAAX,CAA6B,CAC3D,GAAKP,CAAL,CAAA,CAKK,IAAA5R,qBAAL,GACE,IAAAA,qBADF,CAC8B,CAD9B,CAGA,KAAAA,qBAAA,EACA,KAAIsS,EAAYA,QAAQ,CAACP,CAAD,CAAI,CACrBA,CAAAvB,SAAL,GACEuB,CAAAvB,SAEA,CAFauB,CAAA1b,OAEb,CADA0b,CAAApB,gBACA,CADoBoB,CAAArB,cACpB,CAAAzY,iBAAAZ,eAAA,CAAqB0a,CAArB,CAAwB5B,mCAAxB,CAHF,CAQA,IAAI4B,CAAAzd,SAAJ,EAAoD,EAApD,CAAkByd,CAAAvC,aAAA,EAAAU,QAAA,CAAyB,IAAzB,CAAlB,CACE,GAAI6B,CAAAQ,WAAJ,GAAqBrS,KAAA8R,eAArB,EACMD,CAAA1b,OADN,GACmB0b,CAAArB,cADnB,CAEIqB,CAAAhB,yBAAA,EAFJ,KAMA,OAAOa,EAAA,CAAGG,CAAH,CAhBiB,CAmB5BH,EAAAY,eAAA,CAAoBF,CAChBhB,qDAAA,CAA4BhB,CAA5B,CAAJ;CACE,IAAAqB,WAEA,CAFkB,IAAAA,WAElB,EAFqC,EAErC,CADA,IAAAA,WAAA,CAAgBrB,CAAhB,CACA,CADwB,IAAAqB,WAAA,CAAgBrB,CAAhB,CACxB,EADiD,CAAC8B,QAAS,EAAV,CAAcK,OAAQ,EAAtB,CACjD,CAAIP,sCAAA,CAAcC,CAAd,CAAJ,CACE,IAAAR,WAAA,CAAgBrB,CAAhB,CAAA8B,QAAA5f,KAAA,CAAmC8f,CAAnC,CADF,CAGE,IAAAX,WAAA,CAAgBrB,CAAhB,CAAAmC,OAAAjgB,KAAA,CAAkC8f,CAAlC,CANJ,EASEpG,6CAAAlW,KAAA,CAA0B,IAA1B,CAAgCsa,CAAhC,CAAsCgC,CAAtC,CAAiDH,CAAjD,CAtCF,CAD2D;AA2CtDO,QAASrG,6CAAmB,CAACiE,CAAD,CAAOsB,CAAP,CAAWO,CAAX,CAA6B,CAC9D,GAAKP,CAAL,CAAA,CAGA,IAAIe,EAAUf,CAAAY,eACdpG,iDAAApW,KAAA,CAA6B,IAA7B,CAAmCsa,CAAnC,CAAyCqC,CAAzC,EAAoDf,CAApD,CAAwDO,CAAxD,CACIQ,EAAJ,GACEf,CAAAY,eAEA,CAFoB,IAEpB,CADA,IAAAxS,qBAAA,EACA,CAAIsR,oDAAA,CAA4BhB,CAA5B,CAAJ,EACM,IAAAqB,WADN,EAEQ,IAAAA,WAAA,CAAgBrB,CAAhB,CAFR,GAIU4B,sCAAA,CAAcC,CAAd,CAAJ,EACES,CACA,CADM,IAAAjB,WAAA,CAAgBrB,CAAhB,CAAA8B,QAAAlC,QAAA,CAAsCyC,CAAtC,CACN,CAAW,EAAX,CAAIC,CAAJ,EACE,IAAAjB,WAAA,CAAgBrB,CAAhB,CAAA8B,QAAAjf,OAAA,CAAqCyf,CAArC,CAA0C,CAA1C,CAHJ,GAMEA,CACA,CADM,IAAAjB,WAAA,CAAgBrB,CAAhB,CAAAmC,OAAAvC,QAAA,CAAqCyC,CAArC,CACN,CAAW,EAAX,CAAIC,CAAJ,EACE,IAAAjB,WAAA,CAAgBrB,CAAhB,CAAAmC,OAAAtf,OAAA,CAAoCyf,CAApC;AAAyC,CAAzC,CARJ,CAJN,CAHF,CALA,CAD8D,CA8BhE,IAAKC,IAAIA,EAAT,GAAevB,qDAAf,CACE1c,MAAAuX,iBAAA,CAAwB0G,EAAxB,CAA4B,QAAQ,CAACd,CAAD,CAAI,CACjCA,CAAAvB,SAAL,GACEuB,CAAAvB,SAIA,CAJauB,CAAA1b,OAIb,CAHA0b,CAAApB,gBAGA,CAHoBoB,CAAArB,cAGpB,CAFAzY,iBAAAZ,eAAA,CAAqB0a,CAArB,CAAwB5B,mCAAxB,CAEA,CADA2B,iDAAA,CAAyBC,CAAzB,CACA,CAAAA,CAAAhB,yBAAA,EALF,CADsC,CAAxC,CAQG,CAAA,CARH,CAWK;IAAI+B,uCAAgB5S,KAApB,CACI6S,sCAAe7B,0CAAA,CAAkBhR,KAAlB,CADnB,CAEI8S,4CAAqB9B,0CAAA,CAAkB+B,WAAlB,CAFzB,CAGIC,2CAAoBhC,0CAAA,CAAkBiC,UAAlB,CAxFfC,wBAAAjH,iBAAA,CAAAA,yCA2CAiH,wBAAA/G,oBAAA,CAAAA,4CA0CL+G;uBAAAN,cAAA,CAAAA,sCACAM,wBAAAL,aAAA,CAAAA,qCACAK,wBAAAJ,mBAAA,CAAAA,2CACAI,wBAAAF,kBAAA,CAAAA,0C,CCvRX,GAAIjb,iBAAAtD,SAAAK,MAAJ,CAA0B,CAExBJ,MAAAC,SAAA,CAAkB,CAChB0W,MAAOU,iBAAAhR,UADS,CAEhBoY,UAAWpH,iBAAAJ,cAFK,CAGhBF,QAASM,iBAAAF,YAHO,CAIhB5W,YAAa8C,iBAAA9C,YAJG,CAKhB+T,QAAS6B,iBAAA7B,QALO,CAMhByB,MAAOI,iBAAAJ,MANS,CAOhB3V,MAAOiD,iBAAAtD,SAAAK,MAPS,CAUlB,KAAIse,2BAA6BA,QAAQ,CAACja,CAAD,CAAO,CAY9C4S,iBAAAhR,UAAA,CAAgB5B,CAAhB,CACIsE,EAAAA,CAAO,IAAI2K,4BAAJ,CAAcjP,CAAd,CACX4S,kBAAAhR,UAAA,CAAgB0C,CAAhB,CACA,OAAOA,EAfuC,CAkBhDzJ,QAAAC,UAAAY,aAAA,CAAiCwe,QAAQ,EAAG,CAC1C,MAAOD,2BAAA,CAA2B,IAA3B,CADmC,CAI5Clf;IAAAD,UAAAgY,iBAAA,CAAkCiH,uBAAAjH,iBAClC/X,KAAAD,UAAAkY,oBAAA,CAAqC+G,uBAAA/G,oBACrCnM,MAAA,CAAQkT,uBAAAL,aACRE,YAAA,CAAcG,uBAAAJ,mBACdG,WAAA,CAAaC,uBAAAF,kBAEb3c,OAAAE,eAAA,CAAsBrC,IAAAD,UAAtB,CAAsC,aAAtC,CAAqD,CACnD8I,IAAAA,QAAG,EAAG,CACJ,MAAO6G,SAAAC,SAAA,CAAkB,IAAlB,CADH,CAD6C,CAInD0C,aAAc,CAAA,CAJqC,CAArD,CAOArS,KAAAD,UAAA0P,YAAA,CAA6B2P,QAAQ,CAACnf,CAAD,CAAU,CAC7C,MAAOgU,0BAAAxE,YAAA,CAAY,IAAZ;AAAkBxP,CAAlB,CADsC,CA/CvB","file":"shadydom.min.js","sourcesContent":[null,null,null,null,null,"/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\nlet ArraySplice = {\n\n  // Note: This function is *based* on the computation of the Levenshtein\n  // \"edit\" distance. The one change is that \"updates\" are treated as two\n  // edits - not one. With Array splices, an update is really a delete\n  // followed by an add. By retaining this, we optimize for \"keeping\" the\n  // maximum array items in the original array. For example:\n  //\n  //   'xxxx123' -> '123yyyy'\n  //\n  // With 1-edit updates, the shortest path would be just to update all seven\n  // characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n  // leaves the substring '123' intact.\n  calcEditDistances(current, currentStart, currentEnd,\n                              old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    let rowCount = oldEnd - oldStart + 1;\n    let columnCount = currentEnd - currentStart + 1;\n    let distances = new Array(rowCount);\n\n    // \"Addition\" rows. Initialize null column.\n    for (let i = 0; i < rowCount; i++) {\n      distances[i] = new Array(columnCount);\n      distances[i][0] = i;\n    }\n\n    // Initialize null row\n    for (let j = 0; j < columnCount; j++)\n      distances[0][j] = j;\n\n    for (let i = 1; i < rowCount; i++) {\n      for (let j = 1; j < columnCount; j++) {\n        if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n          distances[i][j] = distances[i - 1][j - 1];\n        else {\n          let north = distances[i - 1][j] + 1;\n          let west = distances[i][j - 1] + 1;\n          distances[i][j] = north < west ? north : west;\n        }\n      }\n    }\n\n    return distances;\n  },\n\n  // This starts at the final weight, and walks \"backward\" by finding\n  // the minimum previous weight recursively until the origin of the weight\n  // matrix.\n  spliceOperationsFromEditDistances(distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    let edits = [];\n    while (i > 0 || j > 0) {\n      if (i == 0) {\n        edits.push(EDIT_ADD);\n        j--;\n        continue;\n      }\n      if (j == 0) {\n        edits.push(EDIT_DELETE);\n        i--;\n        continue;\n      }\n      let northWest = distances[i - 1][j - 1];\n      let west = distances[i - 1][j];\n      let north = distances[i][j - 1];\n\n      let min;\n      if (west < north)\n        min = west < northWest ? west : northWest;\n      else\n        min = north < northWest ? north : northWest;\n\n      if (min == northWest) {\n        if (northWest == current) {\n          edits.push(EDIT_LEAVE);\n        } else {\n          edits.push(EDIT_UPDATE);\n          current = northWest;\n        }\n        i--;\n        j--;\n      } else if (min == west) {\n        edits.push(EDIT_DELETE);\n        i--;\n        current = west;\n      } else {\n        edits.push(EDIT_ADD);\n        j--;\n        current = north;\n      }\n    }\n\n    edits.reverse();\n    return edits;\n  },\n\n  /**\n   * Splice Projection functions:\n   *\n   * A splice map is a representation of how a previous array of items\n   * was transformed into a new array of items. Conceptually it is a list of\n   * tuples of\n   *\n   *   <index, removed, addedCount>\n   *\n   * which are kept in ascending index order of. The tuple represents that at\n   * the |index|, |removed| sequence of items were removed, and counting forward\n   * from |index|, |addedCount| items were added.\n   */\n\n  /**\n   * Lacking individual splice mutation information, the minimal set of\n   * splices can be synthesized given the previous state and final state of an\n   * array. The basic approach is to calculate the edit distance matrix and\n   * choose the shortest path through it.\n   *\n   * Complexity: O(l * p)\n   *   l: The length of the current array\n   *   p: The length of the old array\n   */\n  calcSplices(current, currentStart, currentEnd,\n                        old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n    let splice;\n\n    let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart == 0 && oldStart == 0)\n      prefixCount = this.sharedPrefix(current, old, minLength);\n\n    if (currentEnd == current.length && oldEnd == old.length)\n      suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);\n\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n\n    if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n      return [];\n\n    if (currentStart == currentEnd) {\n      splice = newSplice(currentStart, [], 0);\n      while (oldStart < oldEnd)\n        splice.removed.push(old[oldStart++]);\n\n      return [ splice ];\n    } else if (oldStart == oldEnd)\n      return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n    let ops = this.spliceOperationsFromEditDistances(\n        this.calcEditDistances(current, currentStart, currentEnd,\n                               old, oldStart, oldEnd));\n\n    splice = undefined;\n    let splices = [];\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for (let i = 0; i < ops.length; i++) {\n      switch(ops[i]) {\n        case EDIT_LEAVE:\n          if (splice) {\n            splices.push(splice);\n            splice = undefined;\n          }\n\n          index++;\n          oldIndex++;\n          break;\n        case EDIT_UPDATE:\n          if (!splice)\n            splice = newSplice(index, [], 0);\n\n          splice.addedCount++;\n          index++;\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n        case EDIT_ADD:\n          if (!splice)\n            splice = newSplice(index, [], 0);\n\n          splice.addedCount++;\n          index++;\n          break;\n        case EDIT_DELETE:\n          if (!splice)\n            splice = newSplice(index, [], 0);\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n      }\n    }\n\n    if (splice) {\n      splices.push(splice);\n    }\n    return splices;\n  },\n\n  sharedPrefix(current, old, searchLength) {\n    for (let i = 0; i < searchLength; i++)\n      if (!this.equals(current[i], old[i]))\n        return i;\n    return searchLength;\n  },\n\n  sharedSuffix(current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while (count < searchLength && this.equals(current[--index1], old[--index2]))\n      count++;\n\n    return count;\n  },\n\n  calculateSplices(current, previous) {\n    return this.calcSplices(current, 0, current.length, previous, 0,\n                            previous.length);\n  },\n\n  equals(currentValue, previousValue) {\n    return currentValue === previousValue;\n  }\n\n};\n\nexport let calculateSplices = (current, previous) =>\n  ArraySplice.calculateSplices(current, previous);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n/*\nPolyfill for Node.prototype.getRootNode() for browsers that implement ShadowDOM v1.\nRequired for Chrome 53 and Safari 10\n*/\n\nif (Element.prototype['attachShadow'] && !Node.prototype['getRootNode']) {\n  Node.prototype['getRootNode'] = function(options) {\n    let composed = options && options['composed'];\n    let curNode = this;\n    let rootNode = this;\n    while (curNode) {\n      rootNode = curNode;\n      curNode = curNode.parentNode || (composed && curNode.host);\n    }\n    return rootNode;\n  };\n}\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\nimport './getrootnode'\n\nexport let settings = window.ShadyDOM || {};\n\nsettings.hasNativeShadowDOM = Boolean(Element.prototype.attachShadow);\n\nsettings.inUse = settings.force || !settings.hasNativeShadowDOM;\n\nexport function isShadyRoot(obj) {\n  return Boolean(obj.__localName === 'ShadyRoot');\n}\n\nlet p = Element.prototype;\nlet matches = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nexport function matchesSelector(element, selector) {\n  return matches.call(element, selector);\n}\n\nfunction copyOwnProperty(name, source, target) {\n  let pd = Object.getOwnPropertyDescriptor(source, name);\n  if (pd) {\n    Object.defineProperty(target, name, pd);\n  }\n}\n\nexport function extend(target, source) {\n  if (target && source) {\n    let n$ = Object.getOwnPropertyNames(source);\n    for (let i=0, n; (i<n$.length) && (n=n$[i]); i++) {\n      copyOwnProperty(n, source, target);\n    }\n  }\n  return target || source;\n}\n\nexport function extendAll(target, ...sources) {\n  for (let i=0; i < sources.length; i++) {\n    extend(target, sources[i]);\n  }\n  return target;\n}\n\nexport function mixin(target, source) {\n  for (var i in source) {\n    target[i] = source[i];\n  }\n  return target;\n}\n\nexport function patchPrototype(obj, mixin) {\n  let proto = Object.getPrototypeOf(obj);\n  if (!proto.hasOwnProperty('__patchProto')) {\n    let patchProto = Object.create(proto);\n    patchProto.__sourceProto = proto;\n    extend(patchProto, mixin);\n    proto.__patchProto = patchProto;\n  }\n  Object.setPrototypeOf(obj, proto.__patchProto);\n}\n\nexport function unpatchPrototype(obj) {\n  if (obj.__sourceProto) {\n    Object.setPrototypeOf(obj, obj.__sourceProto);\n  }\n}\n\nexport let common = {};\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n// TODO(sorvell): circular (patch loads tree and tree loads patch)\n// for now this is stuck on `utils`\n//import {patchNode} from './patch'\nimport * as utils from './utils'\n\n// native add/remove\nlet nativeInsertBefore = Element.prototype.insertBefore;\nlet nativeAppendChild = Element.prototype.appendChild;\nlet nativeRemoveChild = Element.prototype.removeChild;\n\n/**\n * `tree` is a dom manipulation library used by ShadyDom to\n * manipulate composed and logical trees.\n */\nexport let tree = {\n\n  // sad but faster than slice...\n  arrayCopyChildNodes(parent) {\n    let copy=[], i=0;\n    for (let n=parent.firstChild; n; n=n.nextSibling) {\n      copy[i++] = n;\n    }\n    return copy;\n  },\n\n  arrayCopyChildren(parent) {\n    let copy=[], i=0;\n    for (let n=parent.firstElementChild; n; n=n.nextElementSibling) {\n      copy[i++] = n;\n    }\n    return copy;\n  },\n\n  arrayCopy(a$) {\n    let l = a$.length;\n    let copy = new Array(l);\n    for (let i=0; i < l; i++) {\n      copy[i] = a$[i];\n    }\n    return copy;\n  },\n\n  saveChildNodes(node) {\n    tree.Logical.saveChildNodes(node);\n    if (!tree.Composed.hasParentNode(node)) {\n      tree.Composed.saveComposedData(node);\n      //tree.Composed.saveParentNode(node);\n    }\n    tree.Composed.saveChildNodes(node);\n  }\n\n};\n\ntree.Logical = {\n\n  hasParentNode(node) {\n    return Boolean(node.__dom && node.__dom.parentNode);\n  },\n\n  hasChildNodes(node) {\n    return Boolean(node.__dom && node.__dom.childNodes !== undefined);\n  },\n\n  getChildNodes(node) {\n    // note: we're distinguishing here between undefined and false-y:\n    // hasChildNodes uses undefined check to see if this element has logical\n    // children; the false-y check indicates whether or not we should rebuild\n    // the cached childNodes array.\n    return this.hasChildNodes(node) ? this._getChildNodes(node) :\n      tree.Composed.getChildNodes(node);\n  },\n\n  _getChildNodes(node) {\n    if (!node.__dom.childNodes) {\n      node.__dom.childNodes = [];\n      for (let n=this.getFirstChild(node); n; n=this.getNextSibling(n)) {\n        node.__dom.childNodes.push(n);\n      }\n    }\n    return node.__dom.childNodes;\n  },\n\n  // NOTE: __dom can be created under 2 conditions: (1) an element has a\n  // logical tree, or (2) an element is in a logical tree. In case (1), the\n  // element will store firstChild/lastChild, and in case (2), the element\n  // will store parentNode, nextSibling, previousSibling. This means that\n  // the mere existence of __dom is not enough to know if the requested\n  // logical data is available and instead we do an explicit undefined check.\n  getParentNode(node) {\n    return node.__dom && node.__dom.parentNode !== undefined ?\n      node.__dom.parentNode : tree.Composed.getParentNode(node);\n  },\n\n  getFirstChild(node) {\n    return node.__dom && node.__dom.firstChild !== undefined ?\n      node.__dom.firstChild : tree.Composed.getFirstChild(node);\n  },\n\n  getLastChild(node) {\n    return node.__dom && node.__dom.lastChild  !== undefined ?\n      node.__dom.lastChild : tree.Composed.getLastChild(node);\n  },\n\n  getNextSibling(node) {\n    return node.__dom && node.__dom.nextSibling  !== undefined ?\n      node.__dom.nextSibling : tree.Composed.getNextSibling(node);\n  },\n\n  getPreviousSibling(node) {\n    return node.__dom && node.__dom.previousSibling  !== undefined ?\n      node.__dom.previousSibling : tree.Composed.getPreviousSibling(node);\n  },\n\n  getFirstElementChild(node) {\n    return node.__dom && node.__dom.firstChild !== undefined ?\n      this._getFirstElementChild(node) :\n      tree.Composed.getFirstElementChild(node);\n  },\n\n  _getFirstElementChild(node) {\n    let n = node.__dom.firstChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.nextSibling;\n    }\n    return n;\n  },\n\n  getLastElementChild(node) {\n    return node.__dom && node.__dom.lastChild !== undefined ?\n      this._getLastElementChild(node) :\n      tree.Composed.getLastElementChild(node);\n  },\n\n  _getLastElementChild(node) {\n    let n = node.__dom.lastChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.previousSibling;\n    }\n    return n;\n  },\n\n  getNextElementSibling(node) {\n    return node.__dom && node.__dom.nextSibling !== undefined ?\n      this._getNextElementSibling(node) :\n      tree.Composed.getNextElementSibling(node);\n  },\n\n  _getNextElementSibling(node) {\n    let n = node.__dom.nextSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getNextSibling(n);\n    }\n    return n;\n  },\n\n  getPreviousElementSibling(node) {\n    return node.__dom && node.__dom.previousSibling !== undefined ?\n      this._getPreviousElementSibling(node) :\n      tree.Composed.getPreviousElementSibling(node);\n  },\n\n  _getPreviousElementSibling(node) {\n    let n = node.__dom.previousSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getPreviousSibling(n);\n    }\n    return n;\n  },\n\n  // Capture the list of light children. It's important to do this before we\n  // start transforming the DOM into \"rendered\" state.\n  // Children may be added to this list dynamically. It will be treated as the\n  // source of truth for the light children of the element. This element's\n  // actual children will be treated as the rendered state once this function\n  // has been called.\n  saveChildNodes(node) {\n    if (!this.hasChildNodes(node)) {\n      node.__dom = node.__dom || {};\n      node.__dom.firstChild = node.firstChild;\n      node.__dom.lastChild = node.lastChild;\n      let c$ = node.__dom.childNodes = tree.arrayCopyChildNodes(node);\n      for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n        n.__dom = n.__dom || {};\n        n.__dom.parentNode = node;\n        n.__dom.nextSibling = c$[i+1] || null;\n        n.__dom.previousSibling = c$[i-1] || null;\n        utils.common.patchNode(n);\n      }\n    }\n  },\n\n  // TODO(sorvell): may need to patch saveChildNodes iff the tree has\n  // already been distributed.\n  // NOTE: ensure `node` is patched...\n  recordInsertBefore(node, container, ref_node) {\n    container.__dom.childNodes = null;\n    // handle document fragments\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      let c$ = tree.arrayCopyChildNodes(node);\n      for (let i=0; i < c$.length; i++) {\n        this._linkNode(c$[i], container, ref_node);\n      }\n      // cleanup logical dom in doc fragment.\n      node.__dom = node.__dom || {};\n      node.__dom.firstChild = node.__dom.lastChild = undefined;\n      node.__dom.childNodes = null;\n    } else {\n      this._linkNode(node, container, ref_node);\n    }\n  },\n\n  _linkNode(node, container, ref_node) {\n    utils.common.patchNode(node);\n    ref_node = ref_node || null;\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (ref_node) {\n      ref_node.__dom = ref_node.__dom || {};\n    }\n    // update ref_node.previousSibling <-> node\n    node.__dom.previousSibling = ref_node ? ref_node.__dom.previousSibling :\n      container.__dom.lastChild;\n    if (node.__dom.previousSibling) {\n      node.__dom.previousSibling.__dom.nextSibling = node;\n    }\n    // update node <-> ref_node\n    node.__dom.nextSibling = ref_node;\n    if (node.__dom.nextSibling) {\n      node.__dom.nextSibling.__dom.previousSibling = node;\n    }\n    // update node <-> container\n    node.__dom.parentNode = container;\n    if (ref_node) {\n      if (ref_node === container.__dom.firstChild) {\n        container.__dom.firstChild = node;\n      }\n    } else {\n      container.__dom.lastChild = node;\n      if (!container.__dom.firstChild) {\n        container.__dom.firstChild = node;\n      }\n    }\n    // remove caching of childNodes\n    container.__dom.childNodes = null;\n  },\n\n  recordRemoveChild(node, container) {\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (node === container.__dom.firstChild) {\n      container.__dom.firstChild = node.__dom.nextSibling;\n    }\n    if (node === container.__dom.lastChild) {\n      container.__dom.lastChild = node.__dom.previousSibling;\n    }\n    let p = node.__dom.previousSibling;\n    let n = node.__dom.nextSibling;\n    if (p) {\n      p.__dom = p.__dom || {};\n      p.__dom.nextSibling = n;\n    }\n    if (n) {\n      n.__dom = n.__dom || {};\n      n.__dom.previousSibling = p;\n    }\n    // When an element is removed, logical data is no longer tracked.\n    // Explicitly set `undefined` here to indicate this. This is disginguished\n    // from `null` which is set if info is null.\n    node.__dom.parentNode = node.__dom.previousSibling =\n      node.__dom.nextSibling = undefined;\n    // remove caching of childNodes\n    container.__dom.childNodes = null;\n  }\n\n}\n\n\n// TODO(sorvell): composed tree manipulation is made available\n// (1) to maninpulate the composed tree, and (2) to track changes\n// to the tree for optional patching pluggability.\ntree.Composed = {\n\n  hasParentNode(node) {\n    return Boolean(node.__dom && node.__dom.$parentNode !== undefined);\n  },\n\n  hasChildNodes(node) {\n    return Boolean(node.__dom && node.__dom.$childNodes !== undefined);\n  },\n\n  getChildNodes(node) {\n    return this.hasChildNodes(node) ? this._getChildNodes(node) :\n      (!node.__patched && tree.arrayCopy(node.childNodes));\n  },\n\n  _getChildNodes(node) {\n    if (!node.__dom.$childNodes) {\n      node.__dom.$childNodes = [];\n      for (let n=node.__dom.$firstChild; n; n=n.__dom.$nextSibling) {\n        node.__dom.$childNodes.push(n);\n      }\n    }\n    return node.__dom.$childNodes;\n  },\n\n  getComposedChildNodes(node) {\n    return node.__dom.$childNodes;\n  },\n\n  getParentNode(node) {\n    return this.hasParentNode(node) ? node.__dom.$parentNode :\n      (!node.__patched && node.parentNode);\n  },\n\n  getFirstChild(node) {\n    return node.__patched ? node.__dom.$firstChild : node.firstChild;\n  },\n\n  getLastChild(node) {\n    return node.__patched ? node.__dom.$lastChild : node.lastChild;\n  },\n\n  getNextSibling(node) {\n    return node.__patched ? node.__dom.$nextSibling : node.nextSibling;\n  },\n\n  getPreviousSibling(node) {\n    return node.__patched ? node.__dom.$previousSibling : node.previousSibling;\n  },\n\n  getFirstElementChild(node) {\n    return node.__patched ? this._getFirstElementChild(node) :\n      node.firstElementChild;\n  },\n\n  _getFirstElementChild(node) {\n    let n = node.__dom.$firstChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.$nextSibling;\n    }\n    return n;\n  },\n\n  getLastElementChild(node) {\n    return node.__patched ? this._getLastElementChild(node) :\n      node.lastElementChild;\n  },\n\n  _getLastElementChild(node) {\n    let n = node.__dom.$lastChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.$previousSibling;\n    }\n    return n;\n  },\n\n  getNextElementSibling(node) {\n    return node.__patched ? this._getNextElementSibling(node) :\n      node.nextElementSibling;\n  },\n\n  _getNextElementSibling(node) {\n    let n = node.__dom.$nextSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getNextSibling(n);\n    }\n    return n;\n  },\n\n  getPreviousElementSibling(node) {\n    return node.__patched ? this._getPreviousElementSibling(node) :\n      node.previousElementSibling;\n  },\n\n  _getPreviousElementSibling(node) {\n    let n = node.__dom.$previousSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getPreviousSibling(n);\n    }\n    return n;\n  },\n\n  saveChildNodes(node) {\n    if (!this.hasChildNodes(node)) {\n      node.__dom = node.__dom || {};\n      node.__dom.$firstChild = node.firstChild;\n      node.__dom.$lastChild = node.lastChild;\n      let c$ = node.__dom.$childNodes = tree.arrayCopyChildNodes(node);\n      for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n        this.saveComposedData(n);\n      }\n    }\n  },\n\n  saveComposedData(node) {\n    node.__dom = node.__dom || {};\n    if (node.__dom.$parentNode === undefined) {\n      node.__dom.$parentNode = node.parentNode;\n    }\n    if (node.__dom.$nextSibling === undefined) {\n      node.__dom.$nextSibling = node.nextSibling;\n    }\n    if (node.__dom.$previousSibling === undefined) {\n      node.__dom.$previousSibling = node.previousSibling;\n    }\n  },\n\n  recordInsertBefore(node, container, ref_node) {\n    container.__dom.$childNodes = null;\n    // handle document fragments\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      // TODO(sorvell): remember this for patching:\n      // the act of setting this info can affect patched nodes\n      // getters; therefore capture childNodes before patching.\n      for (let n=this.getFirstChild(node); n; n=this.getNextSibling(n)) {\n        this._linkNode(n, container, ref_node);\n      }\n    } else {\n      this._linkNode(node, container, ref_node);\n    }\n  },\n\n  _linkNode(node, container, ref_node) {\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (ref_node) {\n      ref_node.__dom = ref_node.__dom || {};\n    }\n    // update ref_node.previousSibling <-> node\n    node.__dom.$previousSibling = ref_node ? ref_node.__dom.$previousSibling :\n      container.__dom.$lastChild;\n    if (node.__dom.$previousSibling) {\n      node.__dom.$previousSibling.__dom.$nextSibling = node;\n    }\n    // update node <-> ref_node\n    node.__dom.$nextSibling = ref_node;\n    if (node.__dom.$nextSibling) {\n      node.__dom.$nextSibling.__dom.$previousSibling = node;\n    }\n    // update node <-> container\n    node.__dom.$parentNode = container;\n    if (ref_node) {\n      if (ref_node === container.__dom.$firstChild) {\n        container.__dom.$firstChild = node;\n      }\n    } else {\n      container.__dom.$lastChild = node;\n      if (!container.__dom.$firstChild) {\n        container.__dom.$firstChild = node;\n      }\n    }\n    // remove caching of childNodes\n    container.__dom.$childNodes = null;\n  },\n\n  recordRemoveChild(node, container) {\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (node === container.__dom.$firstChild) {\n      container.__dom.$firstChild = node.__dom.$nextSibling;\n    }\n    if (node === container.__dom.$lastChild) {\n      container.__dom.$lastChild = node.__dom.$previousSibling;\n    }\n    let p = node.__dom.$previousSibling;\n    let n = node.__dom.$nextSibling;\n    if (p) {\n      p.__dom = p.__dom || {};\n      p.__dom.$nextSibling = n;\n    }\n    if (n) {\n      n.__dom = n.__dom || {};\n      n.__dom.$previousSibling = p;\n    }\n    node.__dom.$parentNode = node.__dom.$previousSibling =\n      node.__dom.$nextSibling = null;\n    // remove caching of childNodes\n    container.__dom.$childNodes = null;\n  },\n\n  clearChildNodes(node) {\n    let c$ = this.getChildNodes(node);\n    for (let i=0, c; i < c$.length; i++) {\n      c = c$[i];\n      this.recordRemoveChild(c, node);\n      nativeRemoveChild.call(node, c)\n    }\n  },\n\n  saveParentNode(node) {\n    node.__dom = node.__dom || {};\n    node.__dom.$parentNode = node.parentNode;\n  },\n\n  insertBefore(parentNode, newChild, refChild) {\n    this.saveChildNodes(parentNode);\n    // remove from current location.\n    this._addChild(parentNode, newChild, refChild);\n    return nativeInsertBefore.call(parentNode, newChild, refChild || null);\n  },\n\n  appendChild(parentNode, newChild) {\n    this.saveChildNodes(parentNode);\n    this._addChild(parentNode, newChild);\n    return nativeAppendChild.call(parentNode, newChild);\n  },\n\n  removeChild(parentNode, node) {\n    let currentParent = this.getParentNode(node);\n    this.saveChildNodes(parentNode);\n    this._removeChild(parentNode, node);\n    if (currentParent === parentNode) {\n      return nativeRemoveChild.call(parentNode, node);\n    }\n  },\n\n  _addChild(parentNode, newChild, refChild) {\n    let isFrag = (newChild.nodeType === Node.DOCUMENT_FRAGMENT_NODE);\n    let oldParent = this.getParentNode(newChild);\n    if (oldParent) {\n      this._removeChild(oldParent, newChild);\n    }\n    if (isFrag) {\n      let c$ = this.getChildNodes(newChild);\n      for (let i=0; i < c$.length; i++) {\n        let c = c$[i];\n        // unlink document fragment children\n        this._removeChild(newChild, c);\n        this.recordInsertBefore(c, parentNode, refChild);\n      }\n    } else {\n      this.recordInsertBefore(newChild, parentNode, refChild);\n    }\n  },\n\n  _removeChild(parentNode, node) {\n    this.recordRemoveChild(node, parentNode);\n  }\n\n};\n\n// for testing...\nlet descriptors = {};\nexport function getNativeProperty(element, property) {\n  if (!descriptors[property]) {\n    descriptors[property] = Object.getOwnPropertyDescriptor(\n      HTMLElement.prototype, property) ||\n    Object.getOwnPropertyDescriptor(\n      Element.prototype, property) ||\n    Object.getOwnPropertyDescriptor(\n      Node.prototype, property);\n  }\n  return descriptors[property].get.call(element);\n}\n\n// for testing...\nfunction assertNative(element, property, tracked) {\n  let native = getNativeProperty(element, property);\n  if (native != tracked && element.__patched) {\n    window.console.warn('tracked', tracked, 'native', native);\n  }\n  return tracked;\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {tree} from './tree'\n\nexport default class {\n\n  constructor(root) {\n    this.root = root;\n    this.insertionPointTag = 'slot';\n  }\n\n  getInsertionPoints() {\n    return this.root.querySelectorAll(this.insertionPointTag);\n  }\n\n  hasInsertionPoint() {\n    return Boolean(this.root._insertionPoints &&\n      this.root._insertionPoints.length);\n  }\n\n  isInsertionPoint(node) {\n    return node.localName && node.localName == this.insertionPointTag;\n  }\n\n  reset() {\n    // light children\n    let children = tree.Logical.getChildNodes(this.root.host);\n    for (let i = 0; i < children.length; i++) {\n      this.resetChild(children[i]);\n    }\n    // insertion points\n    let p$ = this.root._insertionPoints;\n    for (let j = 0; j < p$.length; j++) {\n      this.resetInsertionPoint(p$[j]);\n    }\n  }\n\n  resetChild(child) {\n    child._assignedSlot = undefined;\n  }\n\n  resetInsertionPoint(insertionPoint) {\n    insertionPoint._distributedNodes = [];\n    insertionPoint._assignedNodes = [];\n  }\n\n  distribute() {\n    if (this.hasInsertionPoint()) {\n      this.reset();\n      return this.distributePool(this.root, this.collectPool());\n    }\n    return [];\n  }\n\n  // Gather the pool of nodes that should be distributed. We will combine\n  // these with the \"content root\" to arrive at the composed tree.\n  collectPool() {\n    return tree.arrayCopy(\n      tree.Logical.getChildNodes(this.root.host));\n  }\n\n  // perform \"logical\" distribution; note, no actual dom is moved here,\n  // instead elements are distributed into a `content._distributedNodes`\n  // array where applicable.\n  distributePool(node, pool) {\n    let dirtyRoots = [];\n    let p$ = this.root._insertionPoints;\n    for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n      this.distributeInsertionPoint(p, pool);\n      // provoke redistribution on insertion point parents\n      // must do this on all candidate hosts since distribution in this\n      // scope invalidates their distribution.\n      // only get logical parent.\n      let parent = tree.Logical.getParentNode(p);\n      if (parent && parent.shadyRoot &&\n          this.hasInsertionPoint(parent.shadyRoot)) {\n        dirtyRoots.push(parent.shadyRoot);\n      }\n    }\n    return dirtyRoots;\n  }\n\n  distributeInsertionPoint(insertionPoint, pool) {\n    // distribute nodes from the pool that this selector matches\n    let anyDistributed = false;\n    for (let i=0, l=pool.length, node; i < l; i++) {\n      node=pool[i];\n      // skip nodes that were already used\n      if (!node) {\n        continue;\n      }\n      // distribute this node if it matches\n      if (this.matchesInsertionPoint(node, insertionPoint)) {\n        this.distributeNodeInto(node, insertionPoint);\n        // remove this node from the pool\n        pool[i] = undefined;\n        // since at least one node matched, we won't need fallback content\n        anyDistributed = true;\n      }\n    }\n    // Fallback content if nothing was distributed here\n    if (!anyDistributed) {\n      let children = tree.Logical.getChildNodes(insertionPoint);\n      for (let j = 0; j < children.length; j++) {\n        this.distributeNodeInto(children[j], insertionPoint);\n      }\n    }\n    this.setDistributedNodesOnInsertionPoint(insertionPoint);\n  }\n\n  matchesInsertionPoint(node, insertionPoint) {\n    let slotName = insertionPoint.getAttribute('name');\n    slotName = slotName ? slotName.trim() : '';\n    let slot = node.getAttribute && node.getAttribute('slot');\n    slot = slot ? slot.trim() : '';\n    return (slot == slotName);\n  }\n\n  distributeNodeInto(child, insertionPoint) {\n    insertionPoint._assignedNodes.push(child);\n    child._assignedSlot = insertionPoint;\n  }\n\n  setDistributedNodesOnInsertionPoint(insertionPoint) {\n    let n$ = insertionPoint._assignedNodes;\n    insertionPoint._distributedNodes = [];\n    for (let i=0, n; (i<n$.length) && (n=n$[i]) ; i++) {\n      if (this.isInsertionPoint(n)) {\n        let d$ = n._distributedNodes;\n        if (d$) {\n          for (let j=0; j < d$.length; j++) {\n            insertionPoint._distributedNodes.push(d$[j]);\n          }\n        }\n      } else {\n        insertionPoint._distributedNodes.push(n$[i]);\n      }\n    }\n  }\n\n  isFinalDestination(insertionPoint) {\n    return !(insertionPoint._assignedSlot);\n  }\n\n  rendered() {\n    let ip$ = this.root._insertionPoints;\n    for (let i=0, slot; i < ip$.length; i++) {\n      slot = ip$[i];\n      if (slot.__eventListenerCount) {\n        // NOTE: cannot bubble correctly here so not setting bubbles: true\n        slot.dispatchEvent(new Event('slotchange', { cancelable: true }));\n      }\n    }\n  }\n\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n// Cribbed from ShadowDOM polyfill\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/ShadowDOM/wrappers/HTMLElement.js#L28\n/////////////////////////////////////////////////////////////////////////////\n// innerHTML and outerHTML\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString\nlet escapeAttrRegExp = /[&\\u00A0\"]/g;\nlet escapeDataRegExp = /[&\\u00A0<>]/g;\n\nfunction escapeReplace(c) {\n  switch (c) {\n    case '&':\n      return '&amp;';\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '\"':\n      return '&quot;';\n    case '\\u00A0':\n      return '&nbsp;';\n  }\n}\n\nfunction escapeAttr(s) {\n  return s.replace(escapeAttrRegExp, escapeReplace);\n}\n\nfunction escapeData(s) {\n  return s.replace(escapeDataRegExp, escapeReplace);\n}\n\nfunction makeSet(arr) {\n  let set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n// http://www.whatwg.org/specs/web-apps/current-work/#void-elements\nlet voidElements = makeSet([\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]);\n\nlet plaintextParents = makeSet([\n  'style',\n  'script',\n  'xmp',\n  'iframe',\n  'noembed',\n  'noframes',\n  'plaintext',\n  'noscript'\n]);\n\nexport function getOuterHTML(node, parentNode, composed) {\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE: {\n      let tagName = node.localName;\n      let s = '<' + tagName;\n      let attrs = node.attributes;\n      for (let i = 0, attr; (attr = attrs[i]); i++) {\n        s += ' ' + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n      }\n      s += '>';\n      if (voidElements[tagName]) {\n        return s;\n      }\n      return s + getInnerHTML(node, composed) + '</' + tagName + '>';\n    }\n    case Node.TEXT_NODE: {\n      let data = node.data;\n      if (parentNode && plaintextParents[parentNode.localName]) {\n        return data;\n      }\n      return escapeData(data);\n    }\n    case Node.COMMENT_NODE: {\n      return '<!--' + node.data + '-->';\n    }\n    default: {\n      window.console.error(node);\n      throw new Error('not implemented');\n    }\n  }\n}\n\nexport function getInnerHTML(node, composed) {\n  if (node.localName === 'template') {\n    node = node.content;\n  }\n  let s = '';\n  let c$ = composed ? composed(node) : node.childNodes;\n  for (let i=0, l=c$.length, child; (i<l) && (child=c$[i]); i++) {\n    s += getOuterHTML(child, node, composed);\n  }\n  return s;\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\nimport {getInnerHTML} from './innerHTML'\nimport {tree} from './tree'\n\nlet mixinImpl = {\n\n  // Try to add node. Record logical info, track insertion points, perform\n  // distribution iff needed. Return true if the add is handled.\n  addNode(container, node, ref_node) {\n    let ownerRoot = this.ownerShadyRootForNode(container);\n    if (ownerRoot) {\n      // optimization: special insertion point tracking\n      if (node.__noInsertionPoint) {\n        ownerRoot._skipUpdateInsertionPoints = true;\n      }\n      // note: we always need to see if an insertion point is added\n      // since this saves logical tree info; however, invalidation state\n      // needs\n      let ipAdded = this._maybeAddInsertionPoint(node, container, ownerRoot);\n      // invalidate insertion points IFF not already invalid!\n      if (ipAdded) {\n        ownerRoot._skipUpdateInsertionPoints = false;\n      }\n      this._addedNode(node, ownerRoot);\n    }\n    if (tree.Logical.hasChildNodes(container)) {\n      tree.Logical.recordInsertBefore(node, container, ref_node);\n    }\n    // if not distributing and not adding to host, do a fast path addition\n    let handled = this._maybeDistribute(node, container, ownerRoot) ||\n      container.shadyRoot;\n    // TODO(sorvell): Can we do this cleanup code before distribution?\n    // if shady is handling this node,\n    // the actual dom may not be removed if the node or fragment contents\n    // remain undistributed so we ensure removal here.\n    // NOTE: we only remove from existing location iff shady dom is involved.\n    // This is because a node fragment is passed to the native add method\n    // which expects to see fragment children. Regular elements must also\n    // use this check because not doing so causes separation of\n    // attached/detached and breaks, for example,\n    // dom-if's attached/detached checks.\n    if (handled) {\n      if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        // TODO(sorvell): copy nodes ahead of time to avoid iloop\n        // that can occur when parent is not patched and child is...\n        let c$ = tree.arrayCopyChildNodes(node);\n        for (let i=0; i < c$.length; i++) {\n          tree.Composed.removeChild(node, c$[i]);\n        }\n      } else {\n        let parent = tree.Composed.getParentNode(node);\n        if (parent) {\n          tree.Composed.removeChild(parent, node);\n        }\n      }\n    }\n    return handled;\n  },\n\n  // Try to remove node: update logical info and perform distribution iff\n  // needed. Return true if the removal has been handled.\n  // note that it's possible for both the node's host and its parent\n  // to require distribution... both cases are handled here.\n  removeNode(node) {\n    // important that we want to do this only if the node has a logical parent\n    let logicalParent = tree.Logical.hasParentNode(node) &&\n      tree.Logical.getParentNode(node);\n    let distributed;\n    let ownerRoot = this.ownerShadyRootForNode(node);\n    if (logicalParent) {\n      // distribute node's parent iff needed\n      distributed = this.maybeDistributeParent(node);\n      tree.Logical.recordRemoveChild(node, logicalParent);\n      // remove node from root and distribute it iff needed\n      if (ownerRoot && (this._removeDistributedChildren(ownerRoot, node) ||\n        logicalParent.localName === ownerRoot.getInsertionPointTag())) {\n        ownerRoot._skipUpdateInsertionPoints = false;\n        ownerRoot.update();\n      }\n    }\n    this._removeOwnerShadyRoot(node);\n    if (ownerRoot) {\n      this._removedNode(node, ownerRoot);\n    }\n    return distributed;\n  },\n\n  removeNodeFromParent(node, parent) {\n    if (parent) {\n      // TODO(sorvell): notify\n      // if (DomApi.hasApi(parent)) {\n      //   dom(parent).notifyObserver();\n      // }\n      this.removeNode(node);\n    } else {\n      this._removeOwnerShadyRoot(node);\n    }\n  },\n\n  _hasCachedOwnerRoot(node) {\n    return Boolean(node.__ownerShadyRoot !== undefined);\n  },\n\n  getRootNode(node) {\n    if (!node || !node.nodeType) {\n      return;\n    }\n    let root = node.__ownerShadyRoot;\n    if (root === undefined) {\n      if (utils.isShadyRoot(node)) {\n        root = node;\n      } else {\n        let parent = tree.Logical.getParentNode(node);\n        root = parent ? this.getRootNode(parent) : node;\n      }\n      // memo-ize result for performance but only memo-ize\n      // result if node is in the document. This avoids a problem where a root\n      // can be cached while an element is inside a fragment.\n      // If this happens and we cache the result, the value can become stale\n      // because for perf we avoid processing the subtree of added fragments.\n      if (document.contains(node)) {\n        node.__ownerShadyRoot = root;\n      }\n    }\n    return root;\n  },\n\n  ownerShadyRootForNode(node) {\n    let root = this.getRootNode(node);\n    if (utils.isShadyRoot(root)) {\n      return root;\n    }\n  },\n\n  _maybeDistribute(node, container, ownerRoot) {\n    // TODO(sorvell): technically we should check non-fragment nodes for\n    // <content> children but since this case is assumed to be exceedingly\n    // rare, we avoid the cost and will address with some specific api\n    // when the need arises.  For now, the user must call\n    // distributeContent(true), which updates insertion points manually\n    // and forces distribution.\n    let insertionPointTag = ownerRoot && ownerRoot.getInsertionPointTag() || '';\n    let fragContent = (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) &&\n      !node.__noInsertionPoint &&\n      insertionPointTag && node.querySelector(insertionPointTag);\n    let wrappedContent = fragContent &&\n      (tree.Logical.getParentNode(fragContent).nodeType !==\n      Node.DOCUMENT_FRAGMENT_NODE);\n    let hasContent = fragContent || (node.localName === insertionPointTag);\n    // There are 3 possible cases where a distribution may need to occur:\n    // 1. <content> being inserted (the host of the shady root where\n    //    content is inserted needs distribution)\n    // 2. children being inserted into parent with a shady root (parent\n    //    needs distribution)\n    // 3. container is an insertionPoint\n    if (hasContent || (container.localName === insertionPointTag)) {\n      if (ownerRoot) {\n        // note, insertion point list update is handled after node\n        // mutations are complete\n        ownerRoot.update();\n      }\n    }\n    let needsDist = this._nodeNeedsDistribution(container);\n    if (needsDist) {\n      container.shadyRoot.update();\n    }\n    // Return true when distribution will fully handle the composition\n    // Note that if a content was being inserted that was wrapped by a node,\n    // and the parent does not need distribution, return false to allow\n    // the nodes to be added directly, after which children may be\n    // distributed and composed into the wrapping node(s)\n    return needsDist || (hasContent && !wrappedContent);\n  },\n\n  /* note: parent argument is required since node may have an out\n  of date parent at this point; returns true if a <content> is being added */\n  _maybeAddInsertionPoint(node, parent, root) {\n    let added;\n    let insertionPointTag = root.getInsertionPointTag();\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\n      !node.__noInsertionPoint) {\n      let c$ = node.querySelectorAll(insertionPointTag);\n      for (let i=0, n, np, na; (i<c$.length) && (n=c$[i]); i++) {\n        np = tree.Logical.getParentNode(n);\n        // don't allow node's parent to be fragment itself\n        if (np === node) {\n          np = parent;\n        }\n        na = this._maybeAddInsertionPoint(n, np, root);\n        added = added || na;\n      }\n    } else if (node.localName === insertionPointTag) {\n      tree.Logical.saveChildNodes(parent);\n      tree.Logical.saveChildNodes(node);\n      added = true;\n    }\n    return added;\n  },\n\n  _nodeNeedsDistribution(node) {\n    return node && node.shadyRoot &&\n      node.shadyRoot.hasInsertionPoint();\n  },\n\n  // TODO(sorvell): needed for style scoping, use MO?\n  _addedNode() {},\n  _removedNode() {},\n  /*\n  _addedNode(node, root) {\n    // if (ShadyDOM.addedNode) {\n    //   ShadyDOM.addedNode(node, root);\n    // }\n  },\n\n  _removedNode(node, root) {\n    if (ShadyDOM.removedNode) {\n      ShadyDOM.removedNode(node, root);\n    }\n  },\n  */\n\n  _removeDistributedChildren(root, container) {\n    let hostNeedsDist;\n    let ip$ = root._insertionPoints;\n    for (let i=0; i<ip$.length; i++) {\n      let insertionPoint = ip$[i];\n      if (this._contains(container, insertionPoint)) {\n        let dc$ = insertionPoint.assignedNodes({flatten: true});\n        for (let j=0; j<dc$.length; j++) {\n          hostNeedsDist = true;\n          let node = dc$[j];\n          let parent = tree.Composed.getParentNode(node);\n          if (parent) {\n            tree.Composed.removeChild(parent, node);\n          }\n        }\n      }\n    }\n    return hostNeedsDist;\n  },\n\n  _contains(container, node) {\n    while (node) {\n      if (node == container) {\n        return true;\n      }\n      node = tree.Logical.getParentNode(node);\n    }\n  },\n\n  _removeOwnerShadyRoot(node) {\n    // optimization: only reset the tree if node is actually in a root\n    if (this._hasCachedOwnerRoot(node)) {\n      let c$ = tree.Logical.getChildNodes(node);\n      for (let i=0, l=c$.length, n; (i<l) && (n=c$[i]); i++) {\n        this._removeOwnerShadyRoot(n);\n      }\n    }\n    node.__ownerShadyRoot = undefined;\n  },\n\n  // TODO(sorvell): This will fail if distribution that affects this\n  // question is pending; this is expected to be exceedingly rare, but if\n  // the issue comes up, we can force a flush in this case.\n  firstComposedNode(insertionPoint) {\n    let n$ = insertionPoint.assignedNodes({flatten: true});\n    let root = this.getRootNode(insertionPoint);\n    for (let i=0, l=n$.length, n; (i<l) && (n=n$[i]); i++) {\n      // means that we're composed to this spot.\n      if (root.isFinalDestination(insertionPoint, n)) {\n        return n;\n      }\n    }\n  },\n\n  clearNode(node) {\n    while (node.firstChild) {\n      node.removeChild(node.firstChild);\n    }\n  },\n\n  maybeDistributeParent(node) {\n    let parent = tree.Logical.getParentNode(node);\n    if (this._nodeNeedsDistribution(parent)) {\n      parent.shadyRoot.update();\n      return true;\n    }\n  },\n\n  maybeDistributeAttributeChange(node, name) {\n    let distribute = (node.localName === 'slot' && name === 'name');\n    if (distribute) {\n      let root = this.getRootNode(node);\n      if (root.update) {\n        root.update();\n      }\n    }\n  },\n\n  // NOTE: `query` is used primarily for ShadyDOM's querySelector impl,\n  // but it's also generally useful to recurse through the element tree\n  // and is used by Polymer's styling system.\n  query(node, matcher, halter) {\n    let list = [];\n    this._queryElements(tree.Logical.getChildNodes(node), matcher,\n      halter, list);\n    return list;\n  },\n\n  _queryElements(elements, matcher, halter, list) {\n    for (let i=0, l=elements.length, c; (i<l) && (c=elements[i]); i++) {\n      if (c.nodeType === Node.ELEMENT_NODE &&\n          this._queryElement(c, matcher, halter, list)) {\n        return true;\n      }\n    }\n  },\n\n  _queryElement(node, matcher, halter, list) {\n    let result = matcher(node);\n    if (result) {\n      list.push(node);\n    }\n    if (halter && halter(result)) {\n      return result;\n    }\n    this._queryElements(tree.Logical.getChildNodes(node), matcher,\n      halter, list);\n  },\n\n  activeElementForNode(node) {\n    let active = document.activeElement;\n    if (!active) {\n      return null;\n    }\n    let isShadyRoot = !!(utils.isShadyRoot(node));\n    if (node !== document) {\n      // If this node isn't a document or shady root, then it doesn't have\n      // an active element.\n      if (!isShadyRoot) {\n        return null;\n      }\n      // If this shady root's host is the active element or the active\n      // element is not a descendant of the host (in the composed tree),\n      // then it doesn't have an active element.\n      if (node.host === active ||\n          !node.host.contains(active)) {\n        return null;\n      }\n    }\n    // This node is either the document or a shady root of which the active\n    // element is a (composed) descendant of its host; iterate upwards to\n    // find the active element's most shallow host within it.\n    let activeRoot = this.ownerShadyRootForNode(active);\n    while (activeRoot && activeRoot !== node) {\n      active = activeRoot.host;\n      activeRoot = this.ownerShadyRootForNode(active);\n    }\n    if (node === document) {\n      // This node is the document, so activeRoot should be null.\n      return activeRoot ? null : active;\n    } else {\n      // This node is a non-document shady root, and it should be\n      // activeRoot.\n      return activeRoot === node ? active : null;\n    }\n  }\n\n};\n\nlet nativeCloneNode = Element.prototype.cloneNode;\nlet nativeImportNode = Document.prototype.importNode;\nlet nativeSetAttribute = Element.prototype.setAttribute;\nlet nativeRemoveAttribute = Element.prototype.removeAttribute;\n\nlet NodeMixin = {};\n\nObject.defineProperties(NodeMixin, {\n\n  parentElement: {\n    get() {\n      return tree.Logical.getParentNode(this);\n    },\n    configurable: true\n  },\n\n  parentNode: {\n    get() {\n      return tree.Logical.getParentNode(this);\n    },\n    configurable: true\n  },\n\n  nextSibling: {\n    get() {\n      return tree.Logical.getNextSibling(this);\n    },\n    configurable: true\n  },\n\n  previousSibling: {\n    get() {\n      return tree.Logical.getPreviousSibling(this);\n    },\n    configurable: true\n  },\n\n  nextElementSibling: {\n    get() {\n      return tree.Logical.getNextElementSibling(this);\n    },\n    configurable: true\n  },\n\n  previousElementSibling: {\n    get() {\n      return tree.Logical.getPreviousElementSibling(this);\n    },\n    configurable: true\n  },\n\n  assignedSlot: {\n    get() {\n      return this._assignedSlot;\n    },\n    configurable: true\n  }\n});\n\nlet FragmentMixin = {\n\n  appendChild(node) {\n    return this.insertBefore(node);\n  },\n\n  // cases in which we may not be able to just do standard native call\n  // 1. container has a shadyRoot (needsDistribution IFF the shadyRoot\n  // has an insertion point)\n  // 2. container is a shadyRoot (don't distribute, instead set\n  // container to container.host.\n  // 3. node is <content> (host of container needs distribution)\n  insertBefore(node, ref_node) {\n    if (ref_node && tree.Logical.getParentNode(ref_node) !== this) {\n      throw Error('The ref_node to be inserted before is not a child ' +\n        'of this node');\n    }\n    // remove node from its current position iff it's in a tree.\n    if (node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n      let parent = tree.Logical.getParentNode(node);\n      mixinImpl.removeNodeFromParent(node, parent);\n    }\n    if (!mixinImpl.addNode(this, node, ref_node)) {\n      if (ref_node) {\n        // if ref_node is an insertion point replace with first distributed node\n        // TODO(sorvell): v0/v1!!\n        let root = mixinImpl.ownerShadyRootForNode(ref_node);\n        if (root) {\n          ref_node = ref_node.localName === root.getInsertionPointTag() ?\n            mixinImpl.firstComposedNode(ref_node) : ref_node;\n        }\n      }\n      // if adding to a shadyRoot, add to host instead\n      let container = utils.isShadyRoot(this) ?\n        this.host : this;\n      if (ref_node) {\n        tree.Composed.insertBefore(container, node, ref_node);\n      } else {\n        tree.Composed.appendChild(container, node);\n      }\n    }\n    // TODO(sorvell): notify\n    //this.notifyObserver();\n    return node;\n  },\n\n  /**\n    Removes the given `node` from the element's `lightChildren`.\n    This method also performs dom composition.\n  */\n  removeChild(node) {\n    if (tree.Logical.getParentNode(node) !== this) {\n      throw Error('The node to be removed is not a child of this node: ' +\n        node);\n    }\n    if (!mixinImpl.removeNode(node)) {\n      // if removing from a shadyRoot, remove form host instead\n      let container = utils.isShadyRoot(this) ?\n        this.host :\n        this;\n      // not guaranteed to physically be in container; e.g.\n      // undistributed nodes.\n      let parent = tree.Composed.getParentNode(node);\n      if (container === parent) {\n        tree.Composed.removeChild(container, node);\n      }\n    }\n    // TODO(sorvell): notify\n    //this.notifyObserver();\n    return node;\n  },\n\n  replaceChild(node, ref_node) {\n    this.insertBefore(node, ref_node);\n    this.removeChild(ref_node);\n    return node;\n  },\n\n  // TODO(sorvell): consider doing native QSA and filtering results.\n  querySelector(selector) {\n    // match selector and halt on first result.\n    let result = mixinImpl.query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  },\n\n  querySelectorAll(selector) {\n    return mixinImpl.query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    });\n  },\n\n  cloneNode(deep) {\n    if (this.localName == 'template') {\n      return nativeCloneNode.call(this, deep);\n    } else {\n      let n = nativeCloneNode.call(this, false);\n      if (deep) {\n        let c$ = this.childNodes;\n        for (let i=0, nc; i < c$.length; i++) {\n          nc = c$[i].cloneNode(true);\n          n.appendChild(nc);\n        }\n      }\n      return n;\n    }\n  },\n\n  importNode(externalNode, deep) {\n    // for convenience use this node's ownerDoc if the node isn't a document\n    let doc = this instanceof Document ? this :\n      this.ownerDocument;\n    let n = nativeImportNode.call(doc, externalNode, false);\n    if (deep) {\n      let c$ = tree.Logical.getChildNodes(externalNode);\n      utils.common.patchNode(n);\n      for (let i=0, nc; i < c$.length; i++) {\n        nc = doc.importNode(c$[i], true);\n        n.appendChild(nc);\n      }\n    }\n    return n;\n  }\n};\n\nObject.defineProperties(FragmentMixin, {\n\n  childNodes: {\n    get() {\n      let c$ = tree.Logical.getChildNodes(this);\n      return Array.isArray(c$) ? c$ : tree.arrayCopyChildNodes(this);\n    },\n    configurable: true\n  },\n\n  children: {\n    get() {\n      if (tree.Logical.hasChildNodes(this)) {\n        return Array.prototype.filter.call(this.childNodes, function(n) {\n          return (n.nodeType === Node.ELEMENT_NODE);\n        });\n      } else {\n        return tree.arrayCopyChildren(this);\n      }\n    },\n    configurable: true\n  },\n\n  firstChild: {\n    get() {\n      return tree.Logical.getFirstChild(this);\n    },\n    configurable: true\n  },\n\n  lastChild: {\n    get() {\n      return tree.Logical.getLastChild(this);\n    },\n    configurable: true\n  },\n\n  firstElementChild: {\n    get() {\n      return tree.Logical.getFirstElementChild(this);\n    },\n    configurable: true\n  },\n\n  lastElementChild: {\n    get() {\n      return tree.Logical.getLastElementChild(this);\n    },\n    configurable: true\n  },\n\n  // TODO(srovell): strictly speaking fragments do not have textContent\n  // or innerHTML but ShadowRoots do and are not easily distinguishable.\n  // textContent / innerHTML\n  textContent: {\n    get() {\n      if (this.childNodes) {\n        let tc = [];\n        for (let i = 0, cn = this.childNodes, c; (c = cn[i]); i++) {\n          if (c.nodeType !== Node.COMMENT_NODE) {\n            tc.push(c.textContent);\n          }\n        }\n        return tc.join('');\n      }\n      return '';\n    },\n    set(text) {\n      mixinImpl.clearNode(this);\n      if (text) {\n        this.appendChild(document.createTextNode(text));\n      }\n    },\n    configurable: true\n  },\n\n  innerHTML: {\n    get() {\n      return getInnerHTML(this);\n    },\n    set(text) {\n      mixinImpl.clearNode(this);\n      let d = document.createElement('div');\n      d.innerHTML = text;\n      // here, appendChild may move nodes async so we cannot rely\n      // on node position when copying\n      let c$ = tree.arrayCopyChildNodes(d);\n      for (let i=0; i < c$.length; i++) {\n        this.appendChild(c$[i]);\n      }\n    },\n    configurable: true\n  }\n\n});\n\nlet ElementMixin = {\n\n  // TODO(sorvell): should only exist on <slot>\n  assignedNodes(options) {\n    return (options && options.flatten ? this._distributedNodes :\n      this._assignedNodes) || [];\n  },\n\n\n  setAttribute(name, value) {\n    nativeSetAttribute.call(this, name, value);\n    if (!mixinImpl.maybeDistributeParent(this)) {\n      mixinImpl.maybeDistributeAttributeChange(this, name);\n    }\n  },\n\n  removeAttribute(name) {\n    nativeRemoveAttribute.call(this, name);\n    if (!mixinImpl.maybeDistributeParent(this)) {\n      mixinImpl.maybeDistributeAttributeChange(this, name);\n    }\n  }\n\n};\n\nObject.defineProperties(ElementMixin, {\n\n  shadowRoot: {\n    get() {\n      return this.shadyRoot;\n    }\n  },\n\n  slot: {\n    get() {\n      return this.getAttribute('slot');\n    },\n    set(value) {\n      this.setAttribute('slot', value);\n    }\n  }\n\n});\n\nlet activeElementDescriptor = {\n  get() {\n    return mixinImpl.activeElementForNode(this);\n  }\n}\n\nlet ActiveElementMixin = {};\nObject.defineProperties(ActiveElementMixin, {\n  activeElement: activeElementDescriptor\n});\n\nlet UnderActiveElementMixin = {};\nObject.defineProperties(UnderActiveElementMixin, {\n  _activeElement: activeElementDescriptor\n});\n\nexport let Mixins = {\n\n  Node: utils.extendAll({__patched: 'Node'}, NodeMixin),\n\n  Fragment: utils.extendAll({__patched: 'Fragment'},\n    NodeMixin, FragmentMixin, ActiveElementMixin),\n\n  Element: utils.extendAll({__patched: 'Element'},\n    NodeMixin, FragmentMixin, ElementMixin, ActiveElementMixin),\n\n  // Note: activeElement cannot be patched on document!\n  Document: utils.extendAll({__patched: 'Document'},\n    NodeMixin, FragmentMixin, ElementMixin, UnderActiveElementMixin)\n\n};\n\nexport let getRootNode = mixinImpl.getRootNode;","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {calculateSplices} from './array-splice'\nimport * as utils from './utils'\nimport {tree} from './tree'\nimport Distributor from './distributor'\n\n/**\n  Implements a pared down version of ShadowDOM's scoping, which is easy to\n  polyfill across browsers.\n*/\nexport class ShadyRoot {\n\n  constructor(host) {\n    if (!host) {\n      throw 'Must provide a host';\n    }\n    // NOTE: this strange construction is necessary because\n    // DocumentFragment cannot be subclassed on older browsers.\n    let frag = document.createDocumentFragment();\n    frag.__proto__ = ShadyFragmentMixin;\n    frag._init(host);\n    return frag;\n  }\n\n}\n\nlet ShadyMixin = {\n\n  _init(host) {\n    // TODO(sorvell): set a fake local name so this element can be\n    // distinguished from a DocumentFragment when patching.\n    // FF doesn't allow this to be `localName`\n    this.__localName = 'ShadyRoot';\n    // root <=> host\n    host.shadyRoot = this;\n    this.host = host;\n    // logical dom setup\n    tree.Logical.saveChildNodes(host);\n    tree.Logical.saveChildNodes(this);\n    // state flags\n    this._clean = true;\n    this._hasRendered = false;\n    this._distributor = new Distributor(this);\n    this.update();\n  },\n\n  // async render the \"top\" distributor (this is all that is needed to\n  // distribute this host).\n  update() {\n    let distributionRoot = this._findDistributionRoot(this.host);\n    //console.log('update from', this.host, 'root', distributionRoot.host, distributionRoot._clean);\n    if (distributionRoot._clean) {\n      distributionRoot._clean = false;\n      enqueue(function() {\n        distributionRoot.render();\n      });\n    }\n  },\n\n  // returns the host that's the top of this host's distribution tree\n  _findDistributionRoot(element) {\n    let root = element.shadyRoot;\n    while (element && this._elementNeedsDistribution(element)) {\n      root = element.getRootNode();\n      element = root && root.host;\n    }\n    return root;\n  },\n\n  // Return true if a host's children includes\n  // an insertion point that selects selectively\n  _elementNeedsDistribution(element) {\n    let c$ = tree.Logical.getChildNodes(element);\n    for (let i=0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (this._distributor.isInsertionPoint(c)) {\n        return element.getRootNode();\n      }\n    }\n  },\n\n  render() {\n    if (!this._clean) {\n      if (!this._skipUpdateInsertionPoints) {\n        this.updateInsertionPoints();\n      } else if (!this._hasRendered) {\n        this._insertionPoints = [];\n      }\n      this._skipUpdateInsertionPoints = false;\n      // TODO(sorvell): previous ShadyDom had a fast path here\n      // that would avoid distribution for initial render if\n      // no insertion points exist. We cannot currently do this because\n      // it relies on elements being in the physical shadowRoot element\n      // so that native methods will be used. The current append code\n      // simply provokes distribution in this case and does not put the\n      // nodes in the shadowRoot. This could be done but we'll need to\n      // consider if the special processing is worth the perf gain.\n      // if (!this._hasRendered && !this._insertionPoints.length) {\n      //   tree.Composed.clearChildNodes(this.host);\n      //   tree.Composed.appendChild(this.host, this);\n      // } else {\n      // logical\n      this.distribute();\n      // physical\n      this.compose();\n      // allow distributor to do post render tasks (e.g. fire events!)\n      this._distributor.rendered();\n      this._clean = true;\n      this._hasRendered = true;\n    }\n  },\n\n  forceRender() {\n    this._clean = false;\n    this.render();\n  },\n\n  distribute() {\n    let dirtyRoots = this._distributor.distribute();\n    for (let i=0; i<dirtyRoots.length; i++) {\n      dirtyRoots[i].forceRender();\n    }\n  },\n\n  updateInsertionPoints() {\n    let i$ = this._insertionPoints = this._distributor.getInsertionPoints();\n    // ensure insertionPoints's and their parents have logical dom info.\n    // save logical tree info\n    // a. for shadyRoot\n    // b. for insertion points (fallback)\n    // c. for parents of insertion points\n    for (let i=0, c; i < i$.length; i++) {\n      c = i$[i];\n      tree.Logical.saveChildNodes(c);\n      tree.Logical.saveChildNodes(tree.Logical.getParentNode(c));\n    }\n  },\n\n  get _insertionPoints() {\n    if (!this.__insertionPoints) {\n      this.updateInsertionPoints();\n    }\n    return this.__insertionPoints || (this.__insertionPoints = []);\n  },\n\n  set _insertionPoints(insertionPoints) {\n    this.__insertionPoints = insertionPoints;\n  },\n\n  hasInsertionPoint() {\n    return this._distributor.hasInsertionPoint();\n  },\n\n  compose() {\n    // compose self\n    // note: it's important to mark this clean before distribution\n    // so that attachment that provokes additional distribution (e.g.\n    // adding something to your parentNode) works\n    this._composeTree();\n    // TODO(sorvell): notification.\n    // NOTE: send a signal to insertion points that we have distributed\n    // which informs effective children observers\n    //notifyContentObservers(this);\n    // TODO(sorvell): See fast paths here in Polymer v1\n    // (these seem unnecessary)\n    // NOTE: send a signal to any observers\n    // to report the initial set of childNodes\n  },\n\n  // Reify dom such that it is at its correct rendering position\n  // based on logical distribution.\n  _composeTree() {\n    this._updateChildNodes(this.host, this._composeNode(this.host));\n    let p$ = this._insertionPoints || [];\n    for (let i=0, l=p$.length, p, parent; (i<l) && (p=p$[i]); i++) {\n      parent = tree.Logical.getParentNode(p);\n      if ((parent !== this.host) && (parent !== this)) {\n        this._updateChildNodes(parent, this._composeNode(parent));\n      }\n    }\n  },\n\n  // Returns the list of nodes which should be rendered inside `node`.\n  _composeNode(node) {\n    let children = [];\n    let c$ = tree.Logical.getChildNodes(node.shadyRoot || node);\n    for (let i = 0; i < c$.length; i++) {\n      let child = c$[i];\n      if (this._distributor.isInsertionPoint(child)) {\n        let distributedNodes = child._distributedNodes ||\n          (child._distributedNodes = []);\n        for (let j = 0; j < distributedNodes.length; j++) {\n          let distributedNode = distributedNodes[j];\n          if (this.isFinalDestination(child, distributedNode)) {\n            children.push(distributedNode);\n          }\n        }\n      } else {\n        children.push(child);\n      }\n    }\n    return children;\n  },\n\n  isFinalDestination(insertionPoint, node) {\n    return this._distributor.isFinalDestination(\n      insertionPoint, node);\n  },\n\n  // Ensures that the rendered node list inside `container` is `children`.\n  _updateChildNodes(container, children) {\n    let composed = tree.Composed.getChildNodes(container);\n    let splices = calculateSplices(children, composed);\n    // process removals\n    for (let i=0, d=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n        // check if the node is still where we expect it is before trying\n        // to remove it; this can happen if we move a node and\n        // then schedule its previous host for distribution resulting in\n        // the node being removed here.\n        if (tree.Composed.getParentNode(n) === container) {\n          tree.Composed.removeChild(container, n);\n        }\n        composed.splice(s.index + d, 1);\n      }\n      d -= s.addedCount;\n    }\n    // process adds\n    for (let i=0, s, next; (i<splices.length) && (s=splices[i]); i++) { //eslint-disable-line no-redeclare\n      next = composed[s.index];\n      for (let j=s.index, n; j < s.index + s.addedCount; j++) {\n        n = children[j];\n        tree.Composed.insertBefore(container, n, next);\n        // TODO(sorvell): is this splice strictly needed?\n        composed.splice(j, 0, n);\n      }\n    }\n  },\n\n  // TODO(sorvell): util\n  getInsertionPointTag() {\n    return this._distributor.insertionPointTag;\n  }\n\n}\n\nlet ShadyFragmentMixin = Object.create(DocumentFragment.prototype);\nutils.extend(ShadyFragmentMixin, ShadyMixin);\n\n// TODO(sorvell): observation...\n// function notifyContentObservers(root) {\n//   for (let i=0, c; i < root._insertionPoints.length; i++) {\n//     c = root._insertionPoints[i];\n//     if (DomApi.hasApi(c)) {\n//       Polymer.dom(c).notifyObserver();\n//     }\n//   }\n// }\n\n// function notifyInitialDistribution(host) {\n//   if (DomApi.hasApi(host)) {\n//     Polymer.dom(host).notifyObserver();\n//   }\n// }\n\n// let needsUpgrade = window.CustomElements && !CustomElements.useNative;\n\n// function upgradeLogicalChildren(children) {\n//   if (needsUpgrade && children) {\n//     for (let i=0; i < children.length; i++) {\n//       CustomElements.upgrade(children[i]);\n//     }\n//   }\n// }\n\n// render enqueuer/flusher\nlet customElements = window.CustomElements;\nlet flushList = [];\nlet scheduled;\nexport function enqueue(callback) {\n  if (!scheduled) {\n    scheduled = true;\n    Promise.resolve().then(flush);\n  }\n  flushList.push(callback);\n}\n\nexport function flush() {\n  while (flushList.length) {\n    flushList.shift()();\n  }\n  if (customElements) {\n    customElements.takeRecords();\n  }\n  // continue flushing after elements are upgraded...\n  if (flushList.length) {\n    flush();\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\n'use strict';\nimport {tree} from './tree'\nimport * as utils from './utils'\nimport {Mixins} from './element-mixin'\n\nexport let patchedCount = 0;\n\nlet log = false;\n\nlet patchImpl = {\n\n  canPatchNode: function(node) {\n    switch (node) {\n      case document.head:\n      case document.documentElement:\n        return false;\n      default:\n        return true;\n    }\n  },\n\n  hasPrototypeDescriptors: Boolean(Object.getOwnPropertyDescriptor(\n    window.Node.prototype, 'textContent')),\n\n  patch: function(node) {\n    patchedCount++;\n    log && window.console.warn('patch node', node);\n    if (this.hasPrototypeDescriptors) {\n      utils.patchPrototype(node, this.mixinForObject(node));\n    } else {\n      window.console.warn('Patching instance rather than prototype', node);\n      utils.extend(node, this.mixinForNode(node));\n    }\n  },\n\n  mixinForObject: function(obj) {\n    switch (obj.nodeType) {\n      case Node.ELEMENT_NODE:\n        return Mixins.Element;\n      case Node.DOCUMENT_FRAGMENT_NODE:\n        return Mixins.Fragment;\n      case Node.DOCUMENT_NODE:\n        return Mixins.Document;\n      case Node.TEXT_NODE:\n      case Node.COMMENT_NODE:\n        return Mixins.Node;\n    }\n  },\n\n  unpatch: function(obj) {\n    if (obj.__sourceProto) {\n      obj.__proto__ = obj.__sourceProto;\n\n    }\n    // TODO(sorvell): implement unpatching for non-proto patchable browsers\n  }\n\n};\n\nexport function patchNode(node) {\n  if (!utils.settings.inUse) {\n    return;\n  }\n  if (!isNodePatched(node) && patchImpl.canPatchNode(node)) {\n    tree.saveChildNodes(node);\n    patchImpl.patch(node);\n  }\n}\n\nexport function unpatchNode(node) {\n  patchImpl.unpatch(node);\n}\n\nexport function isNodePatched(node) {\n  return Boolean(node.__patched);\n}\n\n// TODO(sorvell): fake export\nutils.common.patchNode = patchNode;","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\n\nlet origAddEventListener = Element.prototype.addEventListener;\nlet origRemoveEventListener = Element.prototype.removeEventListener;\n\n// https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937\nlet alwaysComposed = {\n  blur: true,\n  focus: true,\n  focusin: true,\n  focusout: true,\n  click: true,\n  dblclick: true,\n  mousedown: true,\n  mouseenter: true,\n  mouseleave: true,\n  mousemove: true,\n  mouseout: true,\n  mouseover: true,\n  mouseup: true,\n  wheel: true,\n  beforeinput: true,\n  input: true,\n  keydown: true,\n  keyup: true,\n  compositionstart: true,\n  compositionupdate: true,\n  compositionend: true,\n  touchstart: true,\n  touchend: true,\n  touchmove: true,\n  touchcancel: true,\n  pointerover: true,\n  pointerenter: true,\n  pointerdown: true,\n  pointermove: true,\n  pointerup: true,\n  pointercancel: true,\n  pointerout: true,\n  pointerleave: true,\n  gotpointercapture: true,\n  lostpointercapture: true,\n  dragstart: true,\n  drag: true,\n  dragenter: true,\n  dragleave: true,\n  dragover: true,\n  drop: true,\n  dragend: true,\n  DOMActivate: true,\n  DOMFocusIn: true,\n  DOMFocusOut: true,\n  keypress: true\n};\n\nfunction pathComposer(startNode, composed) {\n  let composedPath = [];\n  let current = startNode;\n  let startRoot = startNode === window ? window : startNode.getRootNode();\n  while (current) {\n    composedPath.push(current);\n    if (current.assignedSlot) {\n      current = current.assignedSlot;\n    } else if (current.host && (composed || current !== startRoot)) {\n      current = current.host;\n    } else {\n      current = current.parentNode;\n    }\n  }\n  // event composedPath includes window when startNode's ownerRoot is document\n  if (composedPath[composedPath.length - 1] === document) {\n    composedPath.push(window);\n  }\n  return composedPath;\n}\n\nfunction retarget(refNode, path) {\n  if (!utils.isShadyRoot) {\n    return refNode;\n  }\n  // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's\n  // shadow-including inclusive ancestor, return ANCESTOR.\n  let refNodePath = pathComposer(refNode, true);\n  let p$ = path;\n  for (let i=0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {\n    ancestor = p$[i];\n    root = ancestor === window ? window : ancestor.getRootNode();\n    if (root !== lastRoot) {\n      rootIdx = refNodePath.indexOf(root);\n      lastRoot = root;\n    }\n    if (!utils.isShadyRoot(root) || rootIdx > -1) {\n      return ancestor;\n    }\n  }\n}\n\nlet EventMixin = {\n\n  __patched: 'Event',\n\n  get composed() {\n    if (this.isTrusted && this.__composed === undefined) {\n      this.__composed = alwaysComposed[this.type];\n    }\n    return this.__composed || false;\n  },\n\n  composedPath() {\n    if (!this.__composedPath) {\n      this.__composedPath = pathComposer(this.__target, this.composed);\n    }\n    return this.__composedPath;\n  },\n\n  get target() {\n    return retarget(this.currentTarget, this.composedPath());\n  },\n\n  // http://w3c.github.io/webcomponents/spec/shadow/#event-relatedtarget-retargeting\n  get relatedTarget() {\n    if (!this.__relatedTarget) {\n      return null;\n    }\n    if (!this.__relatedTargetComposedPath) {\n      this.__relatedTargetComposedPath = pathComposer(this.__relatedTarget, true);\n    }\n    // find the deepest node in relatedTarget composed path that is in the same root with the currentTarget\n    return retarget(this.currentTarget, this.__relatedTargetComposedPath);\n  },\n  stopPropagation() {\n    Event.prototype.stopPropagation.call(this);\n    this.__propagationStopped = true;\n  },\n  stopImmediatePropagation() {\n    Event.prototype.stopImmediatePropagation.call(this);\n    this.__immediatePropagationStopped = true;\n    this.__propagationStopped = true;\n  }\n\n};\n\nfunction mixinComposedFlag(Base) {\n  // NOTE: avoiding use of `class` here so that transpiled output does not\n  // try to do `Base.call` with a dom construtor.\n  let klazz = function(type, options) {\n    let event = new Base(type, options);\n    event.__composed = options && Boolean(options.composed);\n    return event;\n  }\n  // put constructor properties on subclass\n  utils.mixin(klazz, Base);\n  klazz.prototype = Base.prototype;\n  return klazz;\n}\n\nlet nonBubblingEventsToRetarget = {\n  focus: true,\n  blur: true\n};\n\nfunction fireHandlers(event, node, phase) {\n  let hs = node.__handlers && node.__handlers[event.type] &&\n    node.__handlers[event.type][phase];\n  if (hs) {\n    for (let i = 0, fn; (fn = hs[i]); i++) {\n      fn.call(node, event);\n      if (event.__immediatePropagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction retargetNonBubblingEvent(e) {\n  let path = e.composedPath();\n  let node;\n  // override `currentTarget` to let patched `target` calculate correctly\n  Object.defineProperty(event, 'currentTarget', {\n    get: function() {\n      return node;\n    },\n    configurable: true\n  });\n  for (let i = path.length - 1; i >= 0; i--) {\n    node = path[i];\n    fireHandlers(e, node, 'capture');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n  Object.defineProperty(e, 'eventPhase', {value: Event.BUBBLING_PHASE});\n  for (let i = 0; i < path.length; i++) {\n    node = path[i];\n    fireHandlers(e, node, 'bubble');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n}\n\nfunction shouldCapture(optionsOrCapture) {\n  return Boolean(typeof optionsOrCapture === 'object' ?\n    optionsOrCapture.capture : optionsOrCapture);\n}\n\nexport function addEventListener(type, fn, optionsOrCapture) {\n  if (!fn) {\n    return;\n  }\n  // TODO: investigate if this is worth tracking, as it is only used for\n  // deciding if the `slotchanged` event should be fired\n  if (!this.__eventListenerCount) {\n    this.__eventListenerCount = 0;\n  }\n  this.__eventListenerCount++;\n  let wrappedFn = function(e) {\n    if (!e.__target) {\n      e.__target = e.target;\n      e.__relatedTarget = e.relatedTarget;\n      utils.patchPrototype(e, EventMixin);\n    }\n    // There are two critera that should stop events from firing on this node\n    // 1. the event is not composed and the current node is not in the same root as the target\n    // 2. when bubbling, if after retargeting, relatedTarget and target point to the same node\n    if (e.composed || e.composedPath().indexOf(this) > -1) {\n      if (e.eventPhase === Event.BUBBLING_PHASE) {\n        if (e.target === e.relatedTarget) {\n          e.stopImmediatePropagation();\n          return;\n        }\n      }\n      return fn(e);\n    }\n  };\n  fn.__eventWrapper = wrappedFn;\n  if (nonBubblingEventsToRetarget[type]) {\n    this.__handlers = this.__handlers || {};\n    this.__handlers[type] = this.__handlers[type] || {capture: [], bubble: []};\n    if (shouldCapture(optionsOrCapture)) {\n      this.__handlers[type].capture.push(wrappedFn);\n    } else {\n      this.__handlers[type].bubble.push(wrappedFn);\n    }\n  } else {\n    origAddEventListener.call(this, type, wrappedFn, optionsOrCapture);\n  }\n}\n\nexport function removeEventListener(type, fn, optionsOrCapture) {\n  if (!fn) {\n    return;\n  }\n  let wrapper = fn.__eventWrapper;\n  origRemoveEventListener.call(this, type, wrapper || fn, optionsOrCapture);\n  if (wrapper) {\n    fn.__eventWrapper = null;\n    this.__eventListenerCount--;\n    if (nonBubblingEventsToRetarget[type]) {\n      if (this.__handlers) {\n        if (this.__handlers[type]) {\n          let idx;\n          if (shouldCapture(optionsOrCapture)) {\n            idx = this.__handlers[type].capture.indexOf(wrapper);\n            if (idx > -1) {\n              this.__handlers[type].capture.splice(idx, 1);\n            }\n          } else {\n            idx = this.__handlers[type].bubble.indexOf(wrapper);\n            if (idx > -1) {\n              this.__handlers[type].bubble.splice(idx, 1);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfor (let ev in nonBubblingEventsToRetarget) {\n  window.addEventListener(ev, function(e) {\n    if (!e.__target) {\n      e.__target = e.target;\n      e.__relatedTarget = e.relatedTarget;\n      utils.patchPrototype(e, EventMixin);\n      retargetNonBubblingEvent(e);\n      e.stopImmediatePropagation();\n    }\n  }, true);\n}\n\nexport let OriginalEvent = Event;\nexport let PatchedEvent = mixinComposedFlag(Event);\nexport let PatchedCustomEvent = mixinComposedFlag(CustomEvent);\nexport let PatchedMouseEvent = mixinComposedFlag(MouseEvent);","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\n'use strict';\nimport * as utils from './utils'\nimport {ShadyRoot, flush, enqueue} from './shady'\nimport * as patch from './patch'\nimport {getRootNode} from './element-mixin'\nimport * as events from './event-mixin'\n\nif (utils.settings.inUse) {\n\n  window.ShadyDOM = {\n    patch: patch.patchNode,\n    isPatched: patch.isNodePatched,\n    unpatch: patch.unpatchNode,\n    isShadyRoot: utils.isShadyRoot,\n    enqueue: enqueue,\n    flush: flush,\n    inUse: utils.settings.inUse\n  };\n\n  let createRootAndEnsurePatched = function(node) {\n    // TODO(sorvell): need to ensure ancestors are patched but this introduces\n    // a timing problem with gathering composed children.\n    // (1) currently the child list is crawled and patched when patching occurs\n    // (this needs to change)\n    // (2) we can only patch when an element has received its parsed children\n    // because we cannot detect them when inserted by parser.\n    // let ancestor = node;\n    // while (ancestor) {\n    //   patchNode(ancestor);\n    //   ancestor = ancestor.parentNode || ancestor.host;\n    // }\n    patch.patchNode(node);\n    let root = new ShadyRoot(node);\n    patch.patchNode(root);\n    return root;\n  }\n\n  Element.prototype.attachShadow = function() {\n    return createRootAndEnsurePatched(this);\n  }\n\n  Node.prototype.addEventListener = events.addEventListener;\n  Node.prototype.removeEventListener = events.removeEventListener;\n  Event = events.PatchedEvent;\n  CustomEvent = events.PatchedCustomEvent;\n  MouseEvent = events.PatchedMouseEvent;\n\n  Object.defineProperty(Node.prototype, 'isConnected', {\n    get() {\n      return document.contains(this);\n    },\n    configurable: true\n  });\n\n  Node.prototype.getRootNode = function(options) {\n    return getRootNode(this, options);\n  }\n\n  // TODO(sorvell): super experimental auto patching of document fragment\n  // via appendChild. This either needs to be expanded or contracted.\n  // DocumentFragment.prototype.appendChild = function(node) {\n  //   patchNode(this);\n  //   return this.appendChild(node);\n  // }\n\n}\n"],"sourceRoot":"/source/"}