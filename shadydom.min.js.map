{"version":3,"sources":[" [synthetic:base] "," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:util/polyfill] "," [synthetic:es6/object/setprototypeof] ","src/array-splice.js","src/utils.js","src/tree.js","src/distributor.js","src/innerHTML.js","src/element-mixin.js","src/shady.js","src/patch.js","src/event-mixin.js","src/env.js"],"names":["newSplice$$module$$src$array_splice","newSplice","index","removed","addedCount","EDIT_LEAVE","EDIT_UPDATE","EDIT_ADD","EDIT_DELETE","ArraySplice","calcEditDistances","current","currentStart","currentEnd","old","oldStart","oldEnd","rowCount","columnCount","distances","Array","i","j","equals","north","west","spliceOperationsFromEditDistances","length","edits","push","northWest","min","reverse","calcSplices","prefixCount","suffixCount","minLength","Math","sharedPrefix","sharedSuffix","splice","ops","undefined","splices","oldIndex","searchLength","index1","index2","count","calculateSplices","previous","currentValue","previousValue","calculateSplices$$module$$src$array_splice","module$$src$array_splice","settings","window","ShadyDOM","hasNativeShadowDOM","attachShadow","Element","prototype","inUse","force","isShadyRoot$$module$$src$utils","isShadyRoot","obj","__localName","p","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","matchesSelector$$module$$src$utils","element","selector","call","copyOwnProperty$$module$$src$utils","copyOwnProperty","name","source","target","pd","Object","getOwnPropertyDescriptor","defineProperty","extend$$module$$src$utils","extend","n$","getOwnPropertyNames","n","extendAll$$module$$src$utils","extendAll","sources","mixin$$module$$src$utils","mixin","patchPrototype$$module$$src$utils","patchPrototype","proto","getPrototypeOf","hasOwnProperty","patchProto","create","__sourceProto","__patchProto","setPrototypeOf","unpatchPrototype$$module$$src$utils","unpatchPrototype","common","module$$src$utils","nativeInsertBefore","insertBefore","nativeAppendChild","appendChild","nativeRemoveChild","removeChild","tree","arrayCopyChildNodes","parent","copy","firstChild","nextSibling","arrayCopyChildren","firstElementChild","nextElementSibling","arrayCopy","a$","l","saveChildNodes","node","Logical","Composed","hasParentNode","saveComposedData","__dom","parentNode","hasChildNodes","childNodes","getChildNodes","_getChildNodes","getFirstChild","getNextSibling","getParentNode","getLastChild","lastChild","getPreviousSibling","previousSibling","getFirstElementChild","_getFirstElementChild","nodeType","Node","ELEMENT_NODE","getLastElementChild","_getLastElementChild","getNextElementSibling","_getNextElementSibling","getPreviousElementSibling","_getPreviousElementSibling","c$","patchNode","recordInsertBefore","container","ref_node","DOCUMENT_FRAGMENT_NODE","_linkNode","recordRemoveChild","$parentNode","$childNodes","__patched","$firstChild","$nextSibling","getComposedChildNodes","$lastChild","$previousSibling","lastElementChild","previousElementSibling","clearChildNodes","c","saveParentNode","newChild","refChild","_addChild","currentParent","_removeChild","isFrag","oldParent","descriptors","getNativeProperty$$module$$src$tree","getNativeProperty","property","HTMLElement","get","assertNative$$module$$src$tree","assertNative","tracked","native","console","warn","module$$src$tree","$jscompDefaultExport","constructor","root","insertionPointTag","getInsertionPoints","querySelectorAll","hasInsertionPoint","_insertionPoints","isInsertionPoint","localName","distribute","distributePool","collectPool","host","pool","dirtyRoots","p$","distributeInsertionPoint","shadyRoot","_assignedSlot","insertionPoint","previousCount","_assignedNodes","needsSlotChange","anyDistributed","matchesInsertionPoint","distributeNodeInto","children","setDistributedNodesOnInsertionPoint","_fireSlotChange","slotName","getAttribute","trim","slot","child","_distributedNodes","d$","dispatchEvent","Event","cancelable","isFinalDestination","module$$src$distributor","default","escapeAttrRegExp","escapeDataRegExp","escapeReplace$$module$$src$innerHTML","escapeReplace","escapeAttr$$module$$src$innerHTML","escapeAttr","s","replace","escapeData$$module$$src$innerHTML","escapeData","makeSet$$module$$src$innerHTML","makeSet","arr","set","voidElements","plaintextParents","getOuterHTML$$module$$src$innerHTML","getOuterHTML","composed","tagName","attrs","attributes","attr","value","getInnerHTML","TEXT_NODE","data","COMMENT_NODE","error","Error","getInnerHTML$$module$$src$innerHTML","content","module$$src$innerHTML","mixinImpl","addNode","ownerRoot","ownerShadyRootForNode","__noInsertionPoint","_skipUpdateInsertionPoints","_maybeAddInsertionPoint","ipAdded","_addedNode","handled","_maybeDistribute","removeNode","logicalParent","distributed","maybeDistributeParent","_removeDistributedChildren","getInsertionPointTag","update","_removeOwnerShadyRoot","_removedNode","removeNodeFromParent","_hasCachedOwnerRoot","__ownerShadyRoot","getRootNode","document","contains","fragContent","querySelector","wrappedContent","hasContent","needsDist","_nodeNeedsDistribution","added","np","na","hostNeedsDist","ip$","_contains","dc$","assignedNodes","flatten","firstComposedNode","clearNode","maybeDistributeAttributeChange","query","matcher","halter","list","_queryElements","elements","_queryElement","result","activeElementForNode","active","activeElement","activeRoot","nativeCloneNode","cloneNode","nativeImportNode","Document","importNode","nativeSetAttribute","setAttribute","nativeRemoveAttribute","removeAttribute","NodeMixin","defineProperties","parentElement","configurable","assignedSlot","FragmentMixin","replaceChild","deep","nc","externalNode","doc","ownerDocument","isArray","filter","textContent","tc","cn","join","text","createTextNode","innerHTML","d","createElement","ElementMixin","options","shadowRoot","activeElementDescriptor","ActiveElementMixin","UnderActiveElementMixin","_activeElement","Mixins","Fragment","module$$src$element_mixin","ShadyRoot","frag","createDocumentFragment","__proto__","ShadyFragmentMixin","_init","ShadyMixin","_clean","_hasRendered","_distributor","distributionRoot","_findDistributionRoot","enqueue","render","_elementNeedsDistribution","updateInsertionPoints","compose","forceRender","i$","__insertionPoints","insertionPoints","_composeTree","_updateChildNodes","_composeNode","distributedNodes","distributedNode","next","DocumentFragment","customElements","CustomElements","flushList","scheduled","enqueue$$module$$src$shady","callback","Promise","resolve","then","flush","flush$$module$$src$shady","shift","takeRecords","module$$src$shady","patchedCount","log","patchImpl","canPatchNode","head","documentElement","hasPrototypeDescriptors","patch","mixinForObject","mixinForNode","DOCUMENT_NODE","unpatch","patchNode$$module$$src$patch","isNodePatched","unpatchNode$$module$$src$patch","unpatchNode","isNodePatched$$module$$src$patch","module$$src$patch","origAddEventListener","addEventListener","origRemoveEventListener","removeEventListener","alwaysComposed","blur","focus","focusin","focusout","click","dblclick","mousedown","mouseenter","mouseleave","mousemove","mouseout","mouseover","mouseup","wheel","beforeinput","input","keydown","keyup","compositionstart","compositionupdate","compositionend","touchstart","touchend","touchmove","touchcancel","pointerover","pointerenter","pointerdown","pointermove","pointerup","pointercancel","pointerout","pointerleave","gotpointercapture","lostpointercapture","dragstart","drag","dragenter","dragleave","dragover","drop","dragend","DOMActivate","DOMFocusIn","DOMFocusOut","keypress","pathComposer$$module$$src$event_mixin","pathComposer","startNode","composedPath","startRoot","retarget$$module$$src$event_mixin","retarget","refNode","path","refNodePath","ancestor","lastRoot","rootIdx","indexOf","EventMixin","isTrusted","__composed","type","__composedPath","__target","currentTarget","relatedTarget","__relatedTarget","__relatedTargetComposedPath","stopPropagation","__propagationStopped","stopImmediatePropagation","__immediatePropagationStopped","mixinComposedFlag$$module$$src$event_mixin","mixinComposedFlag","Base","klazz","event","nonBubblingEventsToRetarget","fireHandlers$$module$$src$event_mixin","fireHandlers","phase","hs","__handlers","fn","retargetNonBubblingEvent$$module$$src$event_mixin","retargetNonBubblingEvent","e","BUBBLING_PHASE","shouldCapture$$module$$src$event_mixin","shouldCapture","optionsOrCapture","capture","addEventListener$$module$$src$event_mixin","__eventListenerCount","wrappedFn","eventPhase","__eventWrapper","bubble","removeEventListener$$module$$src$event_mixin","wrapper","idx","ev","OriginalEvent","PatchedEvent","PatchedCustomEvent","CustomEvent","PatchedMouseEvent","MouseEvent","module$$src$event_mixin","isPatched","createRootAndEnsurePatched","Element.prototype.attachShadow","Node.prototype.getRootNode"],"mappings":"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","file":"shadydom.min.js","sourcesContent":[null,null,null,null,null,"/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nfunction newSplice(index, removed, addedCount) {\n  return {\n    index: index,\n    removed: removed,\n    addedCount: addedCount\n  };\n}\n\nconst EDIT_LEAVE = 0;\nconst EDIT_UPDATE = 1;\nconst EDIT_ADD = 2;\nconst EDIT_DELETE = 3;\n\nlet ArraySplice = {\n\n  // Note: This function is *based* on the computation of the Levenshtein\n  // \"edit\" distance. The one change is that \"updates\" are treated as two\n  // edits - not one. With Array splices, an update is really a delete\n  // followed by an add. By retaining this, we optimize for \"keeping\" the\n  // maximum array items in the original array. For example:\n  //\n  //   'xxxx123' -> '123yyyy'\n  //\n  // With 1-edit updates, the shortest path would be just to update all seven\n  // characters. With 2-edit updates, we delete 4, leave 3, and add 4. This\n  // leaves the substring '123' intact.\n  calcEditDistances(current, currentStart, currentEnd,\n                              old, oldStart, oldEnd) {\n    // \"Deletion\" columns\n    let rowCount = oldEnd - oldStart + 1;\n    let columnCount = currentEnd - currentStart + 1;\n    let distances = new Array(rowCount);\n\n    // \"Addition\" rows. Initialize null column.\n    for (let i = 0; i < rowCount; i++) {\n      distances[i] = new Array(columnCount);\n      distances[i][0] = i;\n    }\n\n    // Initialize null row\n    for (let j = 0; j < columnCount; j++)\n      distances[0][j] = j;\n\n    for (let i = 1; i < rowCount; i++) {\n      for (let j = 1; j < columnCount; j++) {\n        if (this.equals(current[currentStart + j - 1], old[oldStart + i - 1]))\n          distances[i][j] = distances[i - 1][j - 1];\n        else {\n          let north = distances[i - 1][j] + 1;\n          let west = distances[i][j - 1] + 1;\n          distances[i][j] = north < west ? north : west;\n        }\n      }\n    }\n\n    return distances;\n  },\n\n  // This starts at the final weight, and walks \"backward\" by finding\n  // the minimum previous weight recursively until the origin of the weight\n  // matrix.\n  spliceOperationsFromEditDistances(distances) {\n    let i = distances.length - 1;\n    let j = distances[0].length - 1;\n    let current = distances[i][j];\n    let edits = [];\n    while (i > 0 || j > 0) {\n      if (i == 0) {\n        edits.push(EDIT_ADD);\n        j--;\n        continue;\n      }\n      if (j == 0) {\n        edits.push(EDIT_DELETE);\n        i--;\n        continue;\n      }\n      let northWest = distances[i - 1][j - 1];\n      let west = distances[i - 1][j];\n      let north = distances[i][j - 1];\n\n      let min;\n      if (west < north)\n        min = west < northWest ? west : northWest;\n      else\n        min = north < northWest ? north : northWest;\n\n      if (min == northWest) {\n        if (northWest == current) {\n          edits.push(EDIT_LEAVE);\n        } else {\n          edits.push(EDIT_UPDATE);\n          current = northWest;\n        }\n        i--;\n        j--;\n      } else if (min == west) {\n        edits.push(EDIT_DELETE);\n        i--;\n        current = west;\n      } else {\n        edits.push(EDIT_ADD);\n        j--;\n        current = north;\n      }\n    }\n\n    edits.reverse();\n    return edits;\n  },\n\n  /**\n   * Splice Projection functions:\n   *\n   * A splice map is a representation of how a previous array of items\n   * was transformed into a new array of items. Conceptually it is a list of\n   * tuples of\n   *\n   *   <index, removed, addedCount>\n   *\n   * which are kept in ascending index order of. The tuple represents that at\n   * the |index|, |removed| sequence of items were removed, and counting forward\n   * from |index|, |addedCount| items were added.\n   */\n\n  /**\n   * Lacking individual splice mutation information, the minimal set of\n   * splices can be synthesized given the previous state and final state of an\n   * array. The basic approach is to calculate the edit distance matrix and\n   * choose the shortest path through it.\n   *\n   * Complexity: O(l * p)\n   *   l: The length of the current array\n   *   p: The length of the old array\n   */\n  calcSplices(current, currentStart, currentEnd,\n                        old, oldStart, oldEnd) {\n    let prefixCount = 0;\n    let suffixCount = 0;\n    let splice;\n\n    let minLength = Math.min(currentEnd - currentStart, oldEnd - oldStart);\n    if (currentStart == 0 && oldStart == 0)\n      prefixCount = this.sharedPrefix(current, old, minLength);\n\n    if (currentEnd == current.length && oldEnd == old.length)\n      suffixCount = this.sharedSuffix(current, old, minLength - prefixCount);\n\n    currentStart += prefixCount;\n    oldStart += prefixCount;\n    currentEnd -= suffixCount;\n    oldEnd -= suffixCount;\n\n    if (currentEnd - currentStart == 0 && oldEnd - oldStart == 0)\n      return [];\n\n    if (currentStart == currentEnd) {\n      splice = newSplice(currentStart, [], 0);\n      while (oldStart < oldEnd)\n        splice.removed.push(old[oldStart++]);\n\n      return [ splice ];\n    } else if (oldStart == oldEnd)\n      return [ newSplice(currentStart, [], currentEnd - currentStart) ];\n\n    let ops = this.spliceOperationsFromEditDistances(\n        this.calcEditDistances(current, currentStart, currentEnd,\n                               old, oldStart, oldEnd));\n\n    splice = undefined;\n    let splices = [];\n    let index = currentStart;\n    let oldIndex = oldStart;\n    for (let i = 0; i < ops.length; i++) {\n      switch(ops[i]) {\n        case EDIT_LEAVE:\n          if (splice) {\n            splices.push(splice);\n            splice = undefined;\n          }\n\n          index++;\n          oldIndex++;\n          break;\n        case EDIT_UPDATE:\n          if (!splice)\n            splice = newSplice(index, [], 0);\n\n          splice.addedCount++;\n          index++;\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n        case EDIT_ADD:\n          if (!splice)\n            splice = newSplice(index, [], 0);\n\n          splice.addedCount++;\n          index++;\n          break;\n        case EDIT_DELETE:\n          if (!splice)\n            splice = newSplice(index, [], 0);\n\n          splice.removed.push(old[oldIndex]);\n          oldIndex++;\n          break;\n      }\n    }\n\n    if (splice) {\n      splices.push(splice);\n    }\n    return splices;\n  },\n\n  sharedPrefix(current, old, searchLength) {\n    for (let i = 0; i < searchLength; i++)\n      if (!this.equals(current[i], old[i]))\n        return i;\n    return searchLength;\n  },\n\n  sharedSuffix(current, old, searchLength) {\n    let index1 = current.length;\n    let index2 = old.length;\n    let count = 0;\n    while (count < searchLength && this.equals(current[--index1], old[--index2]))\n      count++;\n\n    return count;\n  },\n\n  calculateSplices(current, previous) {\n    return this.calcSplices(current, 0, current.length, previous, 0,\n                            previous.length);\n  },\n\n  equals(currentValue, previousValue) {\n    return currentValue === previousValue;\n  }\n\n};\n\nexport let calculateSplices = (current, previous) =>\n  ArraySplice.calculateSplices(current, previous);\n","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nexport let settings = window.ShadyDOM || {};\n\nsettings.hasNativeShadowDOM = Boolean(Element.prototype.attachShadow);\n\nsettings.inUse = settings.force || !settings.hasNativeShadowDOM;\n\nexport function isShadyRoot(obj) {\n  return Boolean(obj.__localName === 'ShadyRoot');\n}\n\nlet p = Element.prototype;\nlet matches = p.matches || p.matchesSelector ||\n  p.mozMatchesSelector || p.msMatchesSelector ||\n  p.oMatchesSelector || p.webkitMatchesSelector;\n\nexport function matchesSelector(element, selector) {\n  return matches.call(element, selector);\n}\n\nfunction copyOwnProperty(name, source, target) {\n  let pd = Object.getOwnPropertyDescriptor(source, name);\n  if (pd) {\n    Object.defineProperty(target, name, pd);\n  }\n}\n\nexport function extend(target, source) {\n  if (target && source) {\n    let n$ = Object.getOwnPropertyNames(source);\n    for (let i=0, n; (i<n$.length) && (n=n$[i]); i++) {\n      copyOwnProperty(n, source, target);\n    }\n  }\n  return target || source;\n}\n\nexport function extendAll(target, ...sources) {\n  for (let i=0; i < sources.length; i++) {\n    extend(target, sources[i]);\n  }\n  return target;\n}\n\nexport function mixin(target, source) {\n  for (var i in source) {\n    target[i] = source[i];\n  }\n  return target;\n}\n\nexport function patchPrototype(obj, mixin) {\n  let proto = Object.getPrototypeOf(obj);\n  if (!proto.hasOwnProperty('__patchProto')) {\n    let patchProto = Object.create(proto);\n    patchProto.__sourceProto = proto;\n    extend(patchProto, mixin);\n    proto.__patchProto = patchProto;\n  }\n  Object.setPrototypeOf(obj, proto.__patchProto);\n}\n\nexport function unpatchPrototype(obj) {\n  if (obj.__sourceProto) {\n    Object.setPrototypeOf(obj, obj.__sourceProto);\n  }\n}\n\nexport let common = {};","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n// TODO(sorvell): circular (patch loads tree and tree loads patch)\n// for now this is stuck on `utils`\n//import {patchNode} from './patch'\nimport * as utils from './utils'\n\n// native add/remove\nlet nativeInsertBefore = Element.prototype.insertBefore;\nlet nativeAppendChild = Element.prototype.appendChild;\nlet nativeRemoveChild = Element.prototype.removeChild;\n\n/**\n * `tree` is a dom manipulation library used by ShadyDom to\n * manipulate composed and logical trees.\n */\nexport let tree = {\n\n  // sad but faster than slice...\n  arrayCopyChildNodes(parent) {\n    let copy=[], i=0;\n    for (let n=parent.firstChild; n; n=n.nextSibling) {\n      copy[i++] = n;\n    }\n    return copy;\n  },\n\n  arrayCopyChildren(parent) {\n    let copy=[], i=0;\n    for (let n=parent.firstElementChild; n; n=n.nextElementSibling) {\n      copy[i++] = n;\n    }\n    return copy;\n  },\n\n  arrayCopy(a$) {\n    let l = a$.length;\n    let copy = new Array(l);\n    for (let i=0; i < l; i++) {\n      copy[i] = a$[i];\n    }\n    return copy;\n  },\n\n  saveChildNodes(node) {\n    tree.Logical.saveChildNodes(node);\n    if (!tree.Composed.hasParentNode(node)) {\n      tree.Composed.saveComposedData(node);\n      //tree.Composed.saveParentNode(node);\n    }\n    tree.Composed.saveChildNodes(node);\n  }\n\n};\n\ntree.Logical = {\n\n  hasParentNode(node) {\n    return Boolean(node.__dom && node.__dom.parentNode);\n  },\n\n  hasChildNodes(node) {\n    return Boolean(node.__dom && node.__dom.childNodes !== undefined);\n  },\n\n  getChildNodes(node) {\n    // note: we're distinguishing here between undefined and false-y:\n    // hasChildNodes uses undefined check to see if this element has logical\n    // children; the false-y check indicates whether or not we should rebuild\n    // the cached childNodes array.\n    return this.hasChildNodes(node) ? this._getChildNodes(node) :\n      tree.Composed.getChildNodes(node);\n  },\n\n  _getChildNodes(node) {\n    if (!node.__dom.childNodes) {\n      node.__dom.childNodes = [];\n      for (let n=this.getFirstChild(node); n; n=this.getNextSibling(n)) {\n        node.__dom.childNodes.push(n);\n      }\n    }\n    return node.__dom.childNodes;\n  },\n\n  // NOTE: __dom can be created under 2 conditions: (1) an element has a\n  // logical tree, or (2) an element is in a logical tree. In case (1), the\n  // element will store firstChild/lastChild, and in case (2), the element\n  // will store parentNode, nextSibling, previousSibling. This means that\n  // the mere existence of __dom is not enough to know if the requested\n  // logical data is available and instead we do an explicit undefined check.\n  getParentNode(node) {\n    return node.__dom && node.__dom.parentNode !== undefined ?\n      node.__dom.parentNode : tree.Composed.getParentNode(node);\n  },\n\n  getFirstChild(node) {\n    return node.__dom && node.__dom.firstChild !== undefined ?\n      node.__dom.firstChild : tree.Composed.getFirstChild(node);\n  },\n\n  getLastChild(node) {\n    return node.__dom && node.__dom.lastChild  !== undefined ?\n      node.__dom.lastChild : tree.Composed.getLastChild(node);\n  },\n\n  getNextSibling(node) {\n    return node.__dom && node.__dom.nextSibling  !== undefined ?\n      node.__dom.nextSibling : tree.Composed.getNextSibling(node);\n  },\n\n  getPreviousSibling(node) {\n    return node.__dom && node.__dom.previousSibling  !== undefined ?\n      node.__dom.previousSibling : tree.Composed.getPreviousSibling(node);\n  },\n\n  getFirstElementChild(node) {\n    return node.__dom && node.__dom.firstChild !== undefined ?\n      this._getFirstElementChild(node) :\n      tree.Composed.getFirstElementChild(node);\n  },\n\n  _getFirstElementChild(node) {\n    let n = node.__dom.firstChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.nextSibling;\n    }\n    return n;\n  },\n\n  getLastElementChild(node) {\n    return node.__dom && node.__dom.lastChild !== undefined ?\n      this._getLastElementChild(node) :\n      tree.Composed.getLastElementChild(node);\n  },\n\n  _getLastElementChild(node) {\n    let n = node.__dom.lastChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.previousSibling;\n    }\n    return n;\n  },\n\n  getNextElementSibling(node) {\n    return node.__dom && node.__dom.nextSibling !== undefined ?\n      this._getNextElementSibling(node) :\n      tree.Composed.getNextElementSibling(node);\n  },\n\n  _getNextElementSibling(node) {\n    let n = node.__dom.nextSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getNextSibling(n);\n    }\n    return n;\n  },\n\n  getPreviousElementSibling(node) {\n    return node.__dom && node.__dom.previousSibling !== undefined ?\n      this._getPreviousElementSibling(node) :\n      tree.Composed.getPreviousElementSibling(node);\n  },\n\n  _getPreviousElementSibling(node) {\n    let n = node.__dom.previousSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getPreviousSibling(n);\n    }\n    return n;\n  },\n\n  // Capture the list of light children. It's important to do this before we\n  // start transforming the DOM into \"rendered\" state.\n  // Children may be added to this list dynamically. It will be treated as the\n  // source of truth for the light children of the element. This element's\n  // actual children will be treated as the rendered state once this function\n  // has been called.\n  saveChildNodes(node) {\n    if (!this.hasChildNodes(node)) {\n      node.__dom = node.__dom || {};\n      node.__dom.firstChild = node.firstChild;\n      node.__dom.lastChild = node.lastChild;\n      let c$ = node.__dom.childNodes = tree.arrayCopyChildNodes(node);\n      for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n        n.__dom = n.__dom || {};\n        n.__dom.parentNode = node;\n        n.__dom.nextSibling = c$[i+1] || null;\n        n.__dom.previousSibling = c$[i-1] || null;\n        utils.common.patchNode(n);\n      }\n    }\n  },\n\n  // TODO(sorvell): may need to patch saveChildNodes iff the tree has\n  // already been distributed.\n  // NOTE: ensure `node` is patched...\n  recordInsertBefore(node, container, ref_node) {\n    container.__dom.childNodes = null;\n    // handle document fragments\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      let c$ = tree.arrayCopyChildNodes(node);\n      for (let i=0; i < c$.length; i++) {\n        this._linkNode(c$[i], container, ref_node);\n      }\n      // cleanup logical dom in doc fragment.\n      node.__dom = node.__dom || {};\n      node.__dom.firstChild = node.__dom.lastChild = undefined;\n      node.__dom.childNodes = null;\n    } else {\n      this._linkNode(node, container, ref_node);\n    }\n  },\n\n  _linkNode(node, container, ref_node) {\n    utils.common.patchNode(node);\n    ref_node = ref_node || null;\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (ref_node) {\n      ref_node.__dom = ref_node.__dom || {};\n    }\n    // update ref_node.previousSibling <-> node\n    node.__dom.previousSibling = ref_node ? ref_node.__dom.previousSibling :\n      container.__dom.lastChild;\n    if (node.__dom.previousSibling) {\n      node.__dom.previousSibling.__dom.nextSibling = node;\n    }\n    // update node <-> ref_node\n    node.__dom.nextSibling = ref_node;\n    if (node.__dom.nextSibling) {\n      node.__dom.nextSibling.__dom.previousSibling = node;\n    }\n    // update node <-> container\n    node.__dom.parentNode = container;\n    if (ref_node) {\n      if (ref_node === container.__dom.firstChild) {\n        container.__dom.firstChild = node;\n      }\n    } else {\n      container.__dom.lastChild = node;\n      if (!container.__dom.firstChild) {\n        container.__dom.firstChild = node;\n      }\n    }\n    // remove caching of childNodes\n    container.__dom.childNodes = null;\n  },\n\n  recordRemoveChild(node, container) {\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (node === container.__dom.firstChild) {\n      container.__dom.firstChild = node.__dom.nextSibling;\n    }\n    if (node === container.__dom.lastChild) {\n      container.__dom.lastChild = node.__dom.previousSibling;\n    }\n    let p = node.__dom.previousSibling;\n    let n = node.__dom.nextSibling;\n    if (p) {\n      p.__dom = p.__dom || {};\n      p.__dom.nextSibling = n;\n    }\n    if (n) {\n      n.__dom = n.__dom || {};\n      n.__dom.previousSibling = p;\n    }\n    // When an element is removed, logical data is no longer tracked.\n    // Explicitly set `undefined` here to indicate this. This is disginguished\n    // from `null` which is set if info is null.\n    node.__dom.parentNode = node.__dom.previousSibling =\n      node.__dom.nextSibling = undefined;\n    // remove caching of childNodes\n    container.__dom.childNodes = null;\n  }\n\n}\n\n\n// TODO(sorvell): composed tree manipulation is made available\n// (1) to maninpulate the composed tree, and (2) to track changes\n// to the tree for optional patching pluggability.\ntree.Composed = {\n\n  hasParentNode(node) {\n    return Boolean(node.__dom && node.__dom.$parentNode !== undefined);\n  },\n\n  hasChildNodes(node) {\n    return Boolean(node.__dom && node.__dom.$childNodes !== undefined);\n  },\n\n  getChildNodes(node) {\n    return this.hasChildNodes(node) ? this._getChildNodes(node) :\n      (!node.__patched && tree.arrayCopy(node.childNodes));\n  },\n\n  _getChildNodes(node) {\n    if (!node.__dom.$childNodes) {\n      node.__dom.$childNodes = [];\n      for (let n=node.__dom.$firstChild; n; n=n.__dom.$nextSibling) {\n        node.__dom.$childNodes.push(n);\n      }\n    }\n    return node.__dom.$childNodes;\n  },\n\n  getComposedChildNodes(node) {\n    return node.__dom.$childNodes;\n  },\n\n  getParentNode(node) {\n    return this.hasParentNode(node) ? node.__dom.$parentNode :\n      (!node.__patched && node.parentNode);\n  },\n\n  getFirstChild(node) {\n    return node.__patched ? node.__dom.$firstChild : node.firstChild;\n  },\n\n  getLastChild(node) {\n    return node.__patched ? node.__dom.$lastChild : node.lastChild;\n  },\n\n  getNextSibling(node) {\n    return node.__patched ? node.__dom.$nextSibling : node.nextSibling;\n  },\n\n  getPreviousSibling(node) {\n    return node.__patched ? node.__dom.$previousSibling : node.previousSibling;\n  },\n\n  getFirstElementChild(node) {\n    return node.__patched ? this._getFirstElementChild(node) :\n      node.firstElementChild;\n  },\n\n  _getFirstElementChild(node) {\n    let n = node.__dom.$firstChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.$nextSibling;\n    }\n    return n;\n  },\n\n  getLastElementChild(node) {\n    return node.__patched ? this._getLastElementChild(node) :\n      node.lastElementChild;\n  },\n\n  _getLastElementChild(node) {\n    let n = node.__dom.$lastChild;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = n.__dom.$previousSibling;\n    }\n    return n;\n  },\n\n  getNextElementSibling(node) {\n    return node.__patched ? this._getNextElementSibling(node) :\n      node.nextElementSibling;\n  },\n\n  _getNextElementSibling(node) {\n    let n = node.__dom.$nextSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getNextSibling(n);\n    }\n    return n;\n  },\n\n  getPreviousElementSibling(node) {\n    return node.__patched ? this._getPreviousElementSibling(node) :\n      node.previousElementSibling;\n  },\n\n  _getPreviousElementSibling(node) {\n    let n = node.__dom.$previousSibling;\n    while (n && n.nodeType !== Node.ELEMENT_NODE) {\n      n = this.getPreviousSibling(n);\n    }\n    return n;\n  },\n\n  saveChildNodes(node) {\n    if (!this.hasChildNodes(node)) {\n      node.__dom = node.__dom || {};\n      node.__dom.$firstChild = node.firstChild;\n      node.__dom.$lastChild = node.lastChild;\n      let c$ = node.__dom.$childNodes = tree.arrayCopyChildNodes(node);\n      for (let i=0, n; (i<c$.length) && (n=c$[i]); i++) {\n        this.saveComposedData(n);\n      }\n    }\n  },\n\n  saveComposedData(node) {\n    node.__dom = node.__dom || {};\n    if (node.__dom.$parentNode === undefined) {\n      node.__dom.$parentNode = node.parentNode;\n    }\n    if (node.__dom.$nextSibling === undefined) {\n      node.__dom.$nextSibling = node.nextSibling;\n    }\n    if (node.__dom.$previousSibling === undefined) {\n      node.__dom.$previousSibling = node.previousSibling;\n    }\n  },\n\n  recordInsertBefore(node, container, ref_node) {\n    container.__dom.$childNodes = null;\n    // handle document fragments\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      // TODO(sorvell): remember this for patching:\n      // the act of setting this info can affect patched nodes\n      // getters; therefore capture childNodes before patching.\n      for (let n=this.getFirstChild(node); n; n=this.getNextSibling(n)) {\n        this._linkNode(n, container, ref_node);\n      }\n    } else {\n      this._linkNode(node, container, ref_node);\n    }\n  },\n\n  _linkNode(node, container, ref_node) {\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (ref_node) {\n      ref_node.__dom = ref_node.__dom || {};\n    }\n    // update ref_node.previousSibling <-> node\n    node.__dom.$previousSibling = ref_node ? ref_node.__dom.$previousSibling :\n      container.__dom.$lastChild;\n    if (node.__dom.$previousSibling) {\n      node.__dom.$previousSibling.__dom.$nextSibling = node;\n    }\n    // update node <-> ref_node\n    node.__dom.$nextSibling = ref_node;\n    if (node.__dom.$nextSibling) {\n      node.__dom.$nextSibling.__dom.$previousSibling = node;\n    }\n    // update node <-> container\n    node.__dom.$parentNode = container;\n    if (ref_node) {\n      if (ref_node === container.__dom.$firstChild) {\n        container.__dom.$firstChild = node;\n      }\n    } else {\n      container.__dom.$lastChild = node;\n      if (!container.__dom.$firstChild) {\n        container.__dom.$firstChild = node;\n      }\n    }\n    // remove caching of childNodes\n    container.__dom.$childNodes = null;\n  },\n\n  recordRemoveChild(node, container) {\n    node.__dom = node.__dom || {};\n    container.__dom = container.__dom || {};\n    if (node === container.__dom.$firstChild) {\n      container.__dom.$firstChild = node.__dom.$nextSibling;\n    }\n    if (node === container.__dom.$lastChild) {\n      container.__dom.$lastChild = node.__dom.$previousSibling;\n    }\n    let p = node.__dom.$previousSibling;\n    let n = node.__dom.$nextSibling;\n    if (p) {\n      p.__dom = p.__dom || {};\n      p.__dom.$nextSibling = n;\n    }\n    if (n) {\n      n.__dom = n.__dom || {};\n      n.__dom.$previousSibling = p;\n    }\n    node.__dom.$parentNode = node.__dom.$previousSibling =\n      node.__dom.$nextSibling = null;\n    // remove caching of childNodes\n    container.__dom.$childNodes = null;\n  },\n\n  clearChildNodes(node) {\n    let c$ = this.getChildNodes(node);\n    for (let i=0, c; i < c$.length; i++) {\n      c = c$[i];\n      this.recordRemoveChild(c, node);\n      nativeRemoveChild.call(node, c)\n    }\n  },\n\n  saveParentNode(node) {\n    node.__dom = node.__dom || {};\n    node.__dom.$parentNode = node.parentNode;\n  },\n\n  insertBefore(parentNode, newChild, refChild) {\n    this.saveChildNodes(parentNode);\n    // remove from current location.\n    this._addChild(parentNode, newChild, refChild);\n    return nativeInsertBefore.call(parentNode, newChild, refChild || null);\n  },\n\n  appendChild(parentNode, newChild) {\n    this.saveChildNodes(parentNode);\n    this._addChild(parentNode, newChild);\n    return nativeAppendChild.call(parentNode, newChild);\n  },\n\n  removeChild(parentNode, node) {\n    let currentParent = this.getParentNode(node);\n    this.saveChildNodes(parentNode);\n    this._removeChild(parentNode, node);\n    if (currentParent === parentNode) {\n      return nativeRemoveChild.call(parentNode, node);\n    }\n  },\n\n  _addChild(parentNode, newChild, refChild) {\n    let isFrag = (newChild.nodeType === Node.DOCUMENT_FRAGMENT_NODE);\n    let oldParent = this.getParentNode(newChild);\n    if (oldParent) {\n      this._removeChild(oldParent, newChild);\n    }\n    if (isFrag) {\n      let c$ = this.getChildNodes(newChild);\n      for (let i=0; i < c$.length; i++) {\n        let c = c$[i];\n        // unlink document fragment children\n        this._removeChild(newChild, c);\n        this.recordInsertBefore(c, parentNode, refChild);\n      }\n    } else {\n      this.recordInsertBefore(newChild, parentNode, refChild);\n    }\n  },\n\n  _removeChild(parentNode, node) {\n    this.recordRemoveChild(node, parentNode);\n  }\n\n};\n\n// for testing...\nlet descriptors = {};\nexport function getNativeProperty(element, property) {\n  if (!descriptors[property]) {\n    descriptors[property] = Object.getOwnPropertyDescriptor(\n      HTMLElement.prototype, property) ||\n    Object.getOwnPropertyDescriptor(\n      Element.prototype, property) ||\n    Object.getOwnPropertyDescriptor(\n      Node.prototype, property);\n  }\n  return descriptors[property].get.call(element);\n}\n\n// for testing...\nfunction assertNative(element, property, tracked) {\n  let native = getNativeProperty(element, property);\n  if (native != tracked && element.__patched) {\n    window.console.warn('tracked', tracked, 'native', native);\n  }\n  return tracked;\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {tree} from './tree'\n\nexport default class {\n\n  constructor(root) {\n    this.root = root;\n    this.insertionPointTag = 'slot';\n  }\n\n  getInsertionPoints() {\n    return this.root.querySelectorAll(this.insertionPointTag);\n  }\n\n  hasInsertionPoint() {\n    return Boolean(this.root._insertionPoints &&\n      this.root._insertionPoints.length);\n  }\n\n  isInsertionPoint(node) {\n    return node.localName && node.localName == this.insertionPointTag;\n  }\n\n  distribute() {\n    if (this.hasInsertionPoint()) {\n      return this.distributePool(this.root, this.collectPool());\n    }\n    return [];\n  }\n\n  // Gather the pool of nodes that should be distributed. We will combine\n  // these with the \"content root\" to arrive at the composed tree.\n  collectPool() {\n    return tree.arrayCopy(\n      tree.Logical.getChildNodes(this.root.host));\n  }\n\n  // perform \"logical\" distribution; note, no actual dom is moved here,\n  // instead elements are distributed into storage\n  // array where applicable.\n  distributePool(node, pool) {\n    let dirtyRoots = [];\n    let p$ = this.root._insertionPoints;\n    for (let i=0, l=p$.length, p; (i<l) && (p=p$[i]); i++) {\n      this.distributeInsertionPoint(p, pool);\n      // provoke redistribution on insertion point parents\n      // must do this on all candidate hosts since distribution in this\n      // scope invalidates their distribution.\n      // only get logical parent.\n      let parent = tree.Logical.getParentNode(p);\n      if (parent && parent.shadyRoot &&\n          this.hasInsertionPoint(parent.shadyRoot)) {\n        dirtyRoots.push(parent.shadyRoot);\n      }\n    }\n    for (let i=0; i < pool.length; i++) {\n      if (pool[i]) {\n        pool[i]._assignedSlot = undefined;\n      }\n    }\n    return dirtyRoots;\n  }\n\n  distributeInsertionPoint(insertionPoint, pool) {\n    let previousCount = insertionPoint._assignedNodes ?\n      insertionPoint._assignedNodes.length : 0;\n    insertionPoint._assignedNodes = [];\n    let needsSlotChange = false;\n    // distribute nodes from the pool that this selector matches\n    let anyDistributed = false;\n    for (let i=0, l=pool.length, node; i < l; i++) {\n      node=pool[i];\n      // skip nodes that were already used\n      if (!node) {\n        continue;\n      }\n      // distribute this node if it matches\n      if (this.matchesInsertionPoint(node, insertionPoint)) {\n        if (node._assignedSlot != insertionPoint) {\n          needsSlotChange = true;\n        }\n        this.distributeNodeInto(node, insertionPoint)\n        // remove this node from the pool\n        pool[i] = undefined;\n        // since at least one node matched, we won't need fallback content\n        anyDistributed = true;\n      }\n    }\n    // Fallback content if nothing was distributed here\n    if (!anyDistributed) {\n      let children = tree.Logical.getChildNodes(insertionPoint);\n      for (let j = 0, node; j < children.length; j++) {\n        node = children[j];\n        if (node._assignedSlot != insertionPoint) {\n          needsSlotChange = true;\n        }\n        this.distributeNodeInto(node, insertionPoint);\n      }\n    }\n    // we're already dirty if a node was newly added to the slot\n    // and we're also dirty if the assigned count decreased.\n    if (insertionPoint._assignedNodes.length < previousCount) {\n      needsSlotChange = true;\n    }\n    this.setDistributedNodesOnInsertionPoint(insertionPoint);\n    if (needsSlotChange) {\n      this._fireSlotChange(insertionPoint);\n    }\n  }\n\n  matchesInsertionPoint(node, insertionPoint) {\n    let slotName = insertionPoint.getAttribute('name');\n    slotName = slotName ? slotName.trim() : '';\n    let slot = node.getAttribute && node.getAttribute('slot');\n    slot = slot ? slot.trim() : '';\n    return (slot == slotName);\n  }\n\n  // returns true if child is newly assigned to this slot.\n  distributeNodeInto(child, insertionPoint) {\n    insertionPoint._assignedNodes.push(child);\n    child._assignedSlot = insertionPoint;\n  }\n\n  setDistributedNodesOnInsertionPoint(insertionPoint) {\n    let n$ = insertionPoint._assignedNodes;\n    insertionPoint._distributedNodes = [];\n    for (let i=0, n; (i<n$.length) && (n=n$[i]) ; i++) {\n      if (this.isInsertionPoint(n)) {\n        let d$ = n._distributedNodes;\n        if (d$) {\n          for (let j=0; j < d$.length; j++) {\n            insertionPoint._distributedNodes.push(d$[j]);\n          }\n        }\n      } else {\n        insertionPoint._distributedNodes.push(n$[i]);\n      }\n    }\n  }\n\n  _fireSlotChange(insertionPoint) {\n    // NOTE: cannot bubble correctly here so not setting bubbles: true\n    // Safari tech preview does not bubble but chrome does\n    // Spec says it bubbles (https://dom.spec.whatwg.org/#mutation-observers)\n    insertionPoint.dispatchEvent(new Event('slotchange', { cancelable: true }));\n    if (insertionPoint._assignedSlot) {\n      this._fireSlotChange(insertionPoint._assignedSlot);\n    }\n  }\n\n  isFinalDestination(insertionPoint) {\n    return !(insertionPoint._assignedSlot);\n  }\n\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\n// Cribbed from ShadowDOM polyfill\n// https://github.com/webcomponents/webcomponentsjs/blob/master/src/ShadowDOM/wrappers/HTMLElement.js#L28\n/////////////////////////////////////////////////////////////////////////////\n// innerHTML and outerHTML\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/the-end.html#escapingString\nlet escapeAttrRegExp = /[&\\u00A0\"]/g;\nlet escapeDataRegExp = /[&\\u00A0<>]/g;\n\nfunction escapeReplace(c) {\n  switch (c) {\n    case '&':\n      return '&amp;';\n    case '<':\n      return '&lt;';\n    case '>':\n      return '&gt;';\n    case '\"':\n      return '&quot;';\n    case '\\u00A0':\n      return '&nbsp;';\n  }\n}\n\nfunction escapeAttr(s) {\n  return s.replace(escapeAttrRegExp, escapeReplace);\n}\n\nfunction escapeData(s) {\n  return s.replace(escapeDataRegExp, escapeReplace);\n}\n\nfunction makeSet(arr) {\n  let set = {};\n  for (let i = 0; i < arr.length; i++) {\n    set[arr[i]] = true;\n  }\n  return set;\n}\n\n// http://www.whatwg.org/specs/web-apps/current-work/#void-elements\nlet voidElements = makeSet([\n  'area',\n  'base',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'hr',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]);\n\nlet plaintextParents = makeSet([\n  'style',\n  'script',\n  'xmp',\n  'iframe',\n  'noembed',\n  'noframes',\n  'plaintext',\n  'noscript'\n]);\n\nexport function getOuterHTML(node, parentNode, composed) {\n  switch (node.nodeType) {\n    case Node.ELEMENT_NODE: {\n      let tagName = node.localName;\n      let s = '<' + tagName;\n      let attrs = node.attributes;\n      for (let i = 0, attr; (attr = attrs[i]); i++) {\n        s += ' ' + attr.name + '=\"' + escapeAttr(attr.value) + '\"';\n      }\n      s += '>';\n      if (voidElements[tagName]) {\n        return s;\n      }\n      return s + getInnerHTML(node, composed) + '</' + tagName + '>';\n    }\n    case Node.TEXT_NODE: {\n      let data = node.data;\n      if (parentNode && plaintextParents[parentNode.localName]) {\n        return data;\n      }\n      return escapeData(data);\n    }\n    case Node.COMMENT_NODE: {\n      return '<!--' + node.data + '-->';\n    }\n    default: {\n      window.console.error(node);\n      throw new Error('not implemented');\n    }\n  }\n}\n\nexport function getInnerHTML(node, composed) {\n  if (node.localName === 'template') {\n    node = node.content;\n  }\n  let s = '';\n  let c$ = composed ? composed(node) : node.childNodes;\n  for (let i=0, l=c$.length, child; (i<l) && (child=c$[i]); i++) {\n    s += getOuterHTML(child, node, composed);\n  }\n  return s;\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\nimport {getInnerHTML} from './innerHTML'\nimport {tree} from './tree'\n\nlet mixinImpl = {\n\n  // Try to add node. Record logical info, track insertion points, perform\n  // distribution iff needed. Return true if the add is handled.\n  addNode(container, node, ref_node) {\n    let ownerRoot = this.ownerShadyRootForNode(container);\n    if (ownerRoot) {\n      // optimization: special insertion point tracking\n      if (node.__noInsertionPoint) {\n        ownerRoot._skipUpdateInsertionPoints = true;\n      }\n      // note: we always need to see if an insertion point is added\n      // since this saves logical tree info; however, invalidation state\n      // needs\n      let ipAdded = this._maybeAddInsertionPoint(node, container, ownerRoot);\n      // invalidate insertion points IFF not already invalid!\n      if (ipAdded) {\n        ownerRoot._skipUpdateInsertionPoints = false;\n      }\n      this._addedNode(node, ownerRoot);\n    }\n    if (tree.Logical.hasChildNodes(container)) {\n      tree.Logical.recordInsertBefore(node, container, ref_node);\n    }\n    // if not distributing and not adding to host, do a fast path addition\n    let handled = this._maybeDistribute(node, container, ownerRoot) ||\n      container.shadyRoot;\n    // TODO(sorvell): Can we do this cleanup code before distribution?\n    // if shady is handling this node,\n    // the actual dom may not be removed if the node or fragment contents\n    // remain undistributed so we ensure removal here.\n    // NOTE: we only remove from existing location iff shady dom is involved.\n    // This is because a node fragment is passed to the native add method\n    // which expects to see fragment children. Regular elements must also\n    // use this check because not doing so causes separation of\n    // attached/detached and breaks, for example,\n    // dom-if's attached/detached checks.\n    if (handled) {\n      if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n        // TODO(sorvell): copy nodes ahead of time to avoid iloop\n        // that can occur when parent is not patched and child is...\n        let c$ = tree.arrayCopyChildNodes(node);\n        for (let i=0; i < c$.length; i++) {\n          tree.Composed.removeChild(node, c$[i]);\n        }\n      } else {\n        let parent = tree.Composed.getParentNode(node);\n        if (parent) {\n          tree.Composed.removeChild(parent, node);\n        }\n      }\n    }\n    return handled;\n  },\n\n  // Try to remove node: update logical info and perform distribution iff\n  // needed. Return true if the removal has been handled.\n  // note that it's possible for both the node's host and its parent\n  // to require distribution... both cases are handled here.\n  removeNode(node) {\n    // important that we want to do this only if the node has a logical parent\n    let logicalParent = tree.Logical.hasParentNode(node) &&\n      tree.Logical.getParentNode(node);\n    let distributed;\n    let ownerRoot = this.ownerShadyRootForNode(node);\n    if (logicalParent) {\n      // distribute node's parent iff needed\n      distributed = this.maybeDistributeParent(node);\n      tree.Logical.recordRemoveChild(node, logicalParent);\n      // remove node from root and distribute it iff needed\n      if (ownerRoot && (this._removeDistributedChildren(ownerRoot, node) ||\n        logicalParent.localName === ownerRoot.getInsertionPointTag())) {\n        ownerRoot._skipUpdateInsertionPoints = false;\n        ownerRoot.update();\n      }\n    }\n    this._removeOwnerShadyRoot(node);\n    if (ownerRoot) {\n      this._removedNode(node, ownerRoot);\n    }\n    return distributed;\n  },\n\n  removeNodeFromParent(node, parent) {\n    if (parent) {\n      // TODO(sorvell): notify\n      // if (DomApi.hasApi(parent)) {\n      //   dom(parent).notifyObserver();\n      // }\n      this.removeNode(node);\n    } else {\n      this._removeOwnerShadyRoot(node);\n    }\n  },\n\n  _hasCachedOwnerRoot(node) {\n    return Boolean(node.__ownerShadyRoot !== undefined);\n  },\n\n  getRootNode(node) {\n    if (!node || !node.nodeType) {\n      return;\n    }\n    let root = node.__ownerShadyRoot;\n    if (root === undefined) {\n      if (utils.isShadyRoot(node)) {\n        root = node;\n      } else {\n        let parent = tree.Logical.getParentNode(node);\n        root = parent ? this.getRootNode(parent) : node;\n      }\n      // memo-ize result for performance but only memo-ize\n      // result if node is in the document. This avoids a problem where a root\n      // can be cached while an element is inside a fragment.\n      // If this happens and we cache the result, the value can become stale\n      // because for perf we avoid processing the subtree of added fragments.\n      if (document.contains(node)) {\n        node.__ownerShadyRoot = root;\n      }\n    }\n    return root;\n  },\n\n  ownerShadyRootForNode(node) {\n    let root = this.getRootNode(node);\n    if (utils.isShadyRoot(root)) {\n      return root;\n    }\n  },\n\n  _maybeDistribute(node, container, ownerRoot) {\n    // TODO(sorvell): technically we should check non-fragment nodes for\n    // <content> children but since this case is assumed to be exceedingly\n    // rare, we avoid the cost and will address with some specific api\n    // when the need arises.  For now, the user must call\n    // distributeContent(true), which updates insertion points manually\n    // and forces distribution.\n    let insertionPointTag = ownerRoot && ownerRoot.getInsertionPointTag() || '';\n    let fragContent = (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) &&\n      !node.__noInsertionPoint &&\n      insertionPointTag && node.querySelector(insertionPointTag);\n    let wrappedContent = fragContent &&\n      (tree.Logical.getParentNode(fragContent).nodeType !==\n      Node.DOCUMENT_FRAGMENT_NODE);\n    let hasContent = fragContent || (node.localName === insertionPointTag);\n    // There are 3 possible cases where a distribution may need to occur:\n    // 1. <content> being inserted (the host of the shady root where\n    //    content is inserted needs distribution)\n    // 2. children being inserted into parent with a shady root (parent\n    //    needs distribution)\n    // 3. container is an insertionPoint\n    if (hasContent || (container.localName === insertionPointTag)) {\n      if (ownerRoot) {\n        // note, insertion point list update is handled after node\n        // mutations are complete\n        ownerRoot.update();\n      }\n    }\n    let needsDist = this._nodeNeedsDistribution(container);\n    if (needsDist) {\n      container.shadyRoot.update();\n    }\n    // Return true when distribution will fully handle the composition\n    // Note that if a content was being inserted that was wrapped by a node,\n    // and the parent does not need distribution, return false to allow\n    // the nodes to be added directly, after which children may be\n    // distributed and composed into the wrapping node(s)\n    return needsDist || (hasContent && !wrappedContent);\n  },\n\n  /* note: parent argument is required since node may have an out\n  of date parent at this point; returns true if a <content> is being added */\n  _maybeAddInsertionPoint(node, parent, root) {\n    let added;\n    let insertionPointTag = root.getInsertionPointTag();\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\n      !node.__noInsertionPoint) {\n      let c$ = node.querySelectorAll(insertionPointTag);\n      for (let i=0, n, np, na; (i<c$.length) && (n=c$[i]); i++) {\n        np = tree.Logical.getParentNode(n);\n        // don't allow node's parent to be fragment itself\n        if (np === node) {\n          np = parent;\n        }\n        na = this._maybeAddInsertionPoint(n, np, root);\n        added = added || na;\n      }\n    } else if (node.localName === insertionPointTag) {\n      tree.Logical.saveChildNodes(parent);\n      tree.Logical.saveChildNodes(node);\n      added = true;\n    }\n    return added;\n  },\n\n  _nodeNeedsDistribution(node) {\n    return node && node.shadyRoot &&\n      node.shadyRoot.hasInsertionPoint();\n  },\n\n  // TODO(sorvell): needed for style scoping, use MO?\n  _addedNode() {},\n  _removedNode() {},\n  /*\n  _addedNode(node, root) {\n    // if (ShadyDOM.addedNode) {\n    //   ShadyDOM.addedNode(node, root);\n    // }\n  },\n\n  _removedNode(node, root) {\n    if (ShadyDOM.removedNode) {\n      ShadyDOM.removedNode(node, root);\n    }\n  },\n  */\n\n  _removeDistributedChildren(root, container) {\n    let hostNeedsDist;\n    let ip$ = root._insertionPoints;\n    for (let i=0; i<ip$.length; i++) {\n      let insertionPoint = ip$[i];\n      if (this._contains(container, insertionPoint)) {\n        let dc$ = insertionPoint.assignedNodes({flatten: true});\n        for (let j=0; j<dc$.length; j++) {\n          hostNeedsDist = true;\n          let node = dc$[j];\n          let parent = tree.Composed.getParentNode(node);\n          if (parent) {\n            tree.Composed.removeChild(parent, node);\n          }\n        }\n      }\n    }\n    return hostNeedsDist;\n  },\n\n  _contains(container, node) {\n    while (node) {\n      if (node == container) {\n        return true;\n      }\n      node = tree.Logical.getParentNode(node);\n    }\n  },\n\n  _removeOwnerShadyRoot(node) {\n    // optimization: only reset the tree if node is actually in a root\n    if (this._hasCachedOwnerRoot(node)) {\n      let c$ = tree.Logical.getChildNodes(node);\n      for (let i=0, l=c$.length, n; (i<l) && (n=c$[i]); i++) {\n        this._removeOwnerShadyRoot(n);\n      }\n    }\n    node.__ownerShadyRoot = undefined;\n  },\n\n  // TODO(sorvell): This will fail if distribution that affects this\n  // question is pending; this is expected to be exceedingly rare, but if\n  // the issue comes up, we can force a flush in this case.\n  firstComposedNode(insertionPoint) {\n    let n$ = insertionPoint.assignedNodes({flatten: true});\n    let root = this.getRootNode(insertionPoint);\n    for (let i=0, l=n$.length, n; (i<l) && (n=n$[i]); i++) {\n      // means that we're composed to this spot.\n      if (root.isFinalDestination(insertionPoint, n)) {\n        return n;\n      }\n    }\n  },\n\n  clearNode(node) {\n    while (node.firstChild) {\n      node.removeChild(node.firstChild);\n    }\n  },\n\n  maybeDistributeParent(node) {\n    let parent = tree.Logical.getParentNode(node);\n    if (this._nodeNeedsDistribution(parent)) {\n      parent.shadyRoot.update();\n      return true;\n    }\n  },\n\n  maybeDistributeAttributeChange(node, name) {\n    let distribute = (node.localName === 'slot' && name === 'name');\n    if (distribute) {\n      let root = this.getRootNode(node);\n      if (root.update) {\n        root.update();\n      }\n    }\n  },\n\n  // NOTE: `query` is used primarily for ShadyDOM's querySelector impl,\n  // but it's also generally useful to recurse through the element tree\n  // and is used by Polymer's styling system.\n  query(node, matcher, halter) {\n    let list = [];\n    this._queryElements(tree.Logical.getChildNodes(node), matcher,\n      halter, list);\n    return list;\n  },\n\n  _queryElements(elements, matcher, halter, list) {\n    for (let i=0, l=elements.length, c; (i<l) && (c=elements[i]); i++) {\n      if (c.nodeType === Node.ELEMENT_NODE &&\n          this._queryElement(c, matcher, halter, list)) {\n        return true;\n      }\n    }\n  },\n\n  _queryElement(node, matcher, halter, list) {\n    let result = matcher(node);\n    if (result) {\n      list.push(node);\n    }\n    if (halter && halter(result)) {\n      return result;\n    }\n    this._queryElements(tree.Logical.getChildNodes(node), matcher,\n      halter, list);\n  },\n\n  activeElementForNode(node) {\n    let active = document.activeElement;\n    if (!active) {\n      return null;\n    }\n    let isShadyRoot = !!(utils.isShadyRoot(node));\n    if (node !== document) {\n      // If this node isn't a document or shady root, then it doesn't have\n      // an active element.\n      if (!isShadyRoot) {\n        return null;\n      }\n      // If this shady root's host is the active element or the active\n      // element is not a descendant of the host (in the composed tree),\n      // then it doesn't have an active element.\n      if (node.host === active ||\n          !node.host.contains(active)) {\n        return null;\n      }\n    }\n    // This node is either the document or a shady root of which the active\n    // element is a (composed) descendant of its host; iterate upwards to\n    // find the active element's most shallow host within it.\n    let activeRoot = this.ownerShadyRootForNode(active);\n    while (activeRoot && activeRoot !== node) {\n      active = activeRoot.host;\n      activeRoot = this.ownerShadyRootForNode(active);\n    }\n    if (node === document) {\n      // This node is the document, so activeRoot should be null.\n      return activeRoot ? null : active;\n    } else {\n      // This node is a non-document shady root, and it should be\n      // activeRoot.\n      return activeRoot === node ? active : null;\n    }\n  }\n\n};\n\nlet nativeCloneNode = Element.prototype.cloneNode;\nlet nativeImportNode = Document.prototype.importNode;\nlet nativeSetAttribute = Element.prototype.setAttribute;\nlet nativeRemoveAttribute = Element.prototype.removeAttribute;\n\nlet NodeMixin = {};\n\nObject.defineProperties(NodeMixin, {\n\n  parentElement: {\n    get() {\n      return tree.Logical.getParentNode(this);\n    },\n    configurable: true\n  },\n\n  parentNode: {\n    get() {\n      return tree.Logical.getParentNode(this);\n    },\n    configurable: true\n  },\n\n  nextSibling: {\n    get() {\n      return tree.Logical.getNextSibling(this);\n    },\n    configurable: true\n  },\n\n  previousSibling: {\n    get() {\n      return tree.Logical.getPreviousSibling(this);\n    },\n    configurable: true\n  },\n\n  nextElementSibling: {\n    get() {\n      return tree.Logical.getNextElementSibling(this);\n    },\n    configurable: true\n  },\n\n  previousElementSibling: {\n    get() {\n      return tree.Logical.getPreviousElementSibling(this);\n    },\n    configurable: true\n  },\n\n  assignedSlot: {\n    get() {\n      return this._assignedSlot;\n    },\n    configurable: true\n  }\n});\n\nlet FragmentMixin = {\n\n  appendChild(node) {\n    return this.insertBefore(node);\n  },\n\n  // cases in which we may not be able to just do standard native call\n  // 1. container has a shadyRoot (needsDistribution IFF the shadyRoot\n  // has an insertion point)\n  // 2. container is a shadyRoot (don't distribute, instead set\n  // container to container.host.\n  // 3. node is <content> (host of container needs distribution)\n  insertBefore(node, ref_node) {\n    if (ref_node && tree.Logical.getParentNode(ref_node) !== this) {\n      throw Error('The ref_node to be inserted before is not a child ' +\n        'of this node');\n    }\n    // remove node from its current position iff it's in a tree.\n    if (node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n      let parent = tree.Logical.getParentNode(node);\n      mixinImpl.removeNodeFromParent(node, parent);\n    }\n    if (!mixinImpl.addNode(this, node, ref_node)) {\n      if (ref_node) {\n        // if ref_node is an insertion point replace with first distributed node\n        // TODO(sorvell): v0/v1!!\n        let root = mixinImpl.ownerShadyRootForNode(ref_node);\n        if (root) {\n          ref_node = ref_node.localName === root.getInsertionPointTag() ?\n            mixinImpl.firstComposedNode(ref_node) : ref_node;\n        }\n      }\n      // if adding to a shadyRoot, add to host instead\n      let container = utils.isShadyRoot(this) ?\n        this.host : this;\n      if (ref_node) {\n        tree.Composed.insertBefore(container, node, ref_node);\n      } else {\n        tree.Composed.appendChild(container, node);\n      }\n    }\n    // TODO(sorvell): notify\n    //this.notifyObserver();\n    return node;\n  },\n\n  /**\n    Removes the given `node` from the element's `lightChildren`.\n    This method also performs dom composition.\n  */\n  removeChild(node) {\n    if (tree.Logical.getParentNode(node) !== this) {\n      throw Error('The node to be removed is not a child of this node: ' +\n        node);\n    }\n    if (!mixinImpl.removeNode(node)) {\n      // if removing from a shadyRoot, remove form host instead\n      let container = utils.isShadyRoot(this) ?\n        this.host :\n        this;\n      // not guaranteed to physically be in container; e.g.\n      // undistributed nodes.\n      let parent = tree.Composed.getParentNode(node);\n      if (container === parent) {\n        tree.Composed.removeChild(container, node);\n      }\n    }\n    // TODO(sorvell): notify\n    //this.notifyObserver();\n    return node;\n  },\n\n  replaceChild(node, ref_node) {\n    this.insertBefore(node, ref_node);\n    this.removeChild(ref_node);\n    return node;\n  },\n\n  // TODO(sorvell): consider doing native QSA and filtering results.\n  querySelector(selector) {\n    // match selector and halt on first result.\n    let result = mixinImpl.query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    }, function(n) {\n      return Boolean(n);\n    })[0];\n    return result || null;\n  },\n\n  querySelectorAll(selector) {\n    return mixinImpl.query(this, function(n) {\n      return utils.matchesSelector(n, selector);\n    });\n  },\n\n  cloneNode(deep) {\n    if (this.localName == 'template') {\n      return nativeCloneNode.call(this, deep);\n    } else {\n      let n = nativeCloneNode.call(this, false);\n      if (deep) {\n        let c$ = this.childNodes;\n        for (let i=0, nc; i < c$.length; i++) {\n          nc = c$[i].cloneNode(true);\n          n.appendChild(nc);\n        }\n      }\n      return n;\n    }\n  },\n\n  importNode(externalNode, deep) {\n    // for convenience use this node's ownerDoc if the node isn't a document\n    let doc = this instanceof Document ? this :\n      this.ownerDocument;\n    let n = nativeImportNode.call(doc, externalNode, false);\n    if (deep) {\n      let c$ = tree.Logical.getChildNodes(externalNode);\n      utils.common.patchNode(n);\n      for (let i=0, nc; i < c$.length; i++) {\n        nc = doc.importNode(c$[i], true);\n        n.appendChild(nc);\n      }\n    }\n    return n;\n  }\n};\n\nObject.defineProperties(FragmentMixin, {\n\n  childNodes: {\n    get() {\n      let c$ = tree.Logical.getChildNodes(this);\n      return Array.isArray(c$) ? c$ : tree.arrayCopyChildNodes(this);\n    },\n    configurable: true\n  },\n\n  children: {\n    get() {\n      if (tree.Logical.hasChildNodes(this)) {\n        return Array.prototype.filter.call(this.childNodes, function(n) {\n          return (n.nodeType === Node.ELEMENT_NODE);\n        });\n      } else {\n        return tree.arrayCopyChildren(this);\n      }\n    },\n    configurable: true\n  },\n\n  firstChild: {\n    get() {\n      return tree.Logical.getFirstChild(this);\n    },\n    configurable: true\n  },\n\n  lastChild: {\n    get() {\n      return tree.Logical.getLastChild(this);\n    },\n    configurable: true\n  },\n\n  firstElementChild: {\n    get() {\n      return tree.Logical.getFirstElementChild(this);\n    },\n    configurable: true\n  },\n\n  lastElementChild: {\n    get() {\n      return tree.Logical.getLastElementChild(this);\n    },\n    configurable: true\n  },\n\n  // TODO(srovell): strictly speaking fragments do not have textContent\n  // or innerHTML but ShadowRoots do and are not easily distinguishable.\n  // textContent / innerHTML\n  textContent: {\n    get() {\n      if (this.childNodes) {\n        let tc = [];\n        for (let i = 0, cn = this.childNodes, c; (c = cn[i]); i++) {\n          if (c.nodeType !== Node.COMMENT_NODE) {\n            tc.push(c.textContent);\n          }\n        }\n        return tc.join('');\n      }\n      return '';\n    },\n    set(text) {\n      mixinImpl.clearNode(this);\n      if (text) {\n        this.appendChild(document.createTextNode(text));\n      }\n    },\n    configurable: true\n  },\n\n  innerHTML: {\n    get() {\n      return getInnerHTML(this);\n    },\n    set(text) {\n      mixinImpl.clearNode(this);\n      let d = document.createElement('div');\n      d.innerHTML = text;\n      // here, appendChild may move nodes async so we cannot rely\n      // on node position when copying\n      let c$ = tree.arrayCopyChildNodes(d);\n      for (let i=0; i < c$.length; i++) {\n        this.appendChild(c$[i]);\n      }\n    },\n    configurable: true\n  }\n\n});\n\nlet ElementMixin = {\n\n  // TODO(sorvell): should only exist on <slot>\n  assignedNodes(options) {\n    return (options && options.flatten ? this._distributedNodes :\n      this._assignedNodes) || [];\n  },\n\n\n  setAttribute(name, value) {\n    nativeSetAttribute.call(this, name, value);\n    if (!mixinImpl.maybeDistributeParent(this)) {\n      mixinImpl.maybeDistributeAttributeChange(this, name);\n    }\n  },\n\n  removeAttribute(name) {\n    nativeRemoveAttribute.call(this, name);\n    if (!mixinImpl.maybeDistributeParent(this)) {\n      mixinImpl.maybeDistributeAttributeChange(this, name);\n    }\n  }\n\n};\n\nObject.defineProperties(ElementMixin, {\n\n  shadowRoot: {\n    get() {\n      return this.shadyRoot;\n    }\n  },\n\n  slot: {\n    get() {\n      return this.getAttribute('slot');\n    },\n    set(value) {\n      this.setAttribute('slot', value);\n    }\n  }\n\n});\n\nlet activeElementDescriptor = {\n  get() {\n    return mixinImpl.activeElementForNode(this);\n  }\n}\n\nlet ActiveElementMixin = {};\nObject.defineProperties(ActiveElementMixin, {\n  activeElement: activeElementDescriptor\n});\n\nlet UnderActiveElementMixin = {};\nObject.defineProperties(UnderActiveElementMixin, {\n  _activeElement: activeElementDescriptor\n});\n\nexport let Mixins = {\n\n  Node: utils.extendAll({__patched: 'Node'}, NodeMixin),\n\n  Fragment: utils.extendAll({__patched: 'Fragment'},\n    NodeMixin, FragmentMixin, ActiveElementMixin),\n\n  Element: utils.extendAll({__patched: 'Element'},\n    NodeMixin, FragmentMixin, ElementMixin, ActiveElementMixin),\n\n  // Note: activeElement cannot be patched on document!\n  Document: utils.extendAll({__patched: 'Document'},\n    NodeMixin, FragmentMixin, ElementMixin, UnderActiveElementMixin)\n\n};\n\nexport let getRootNode = mixinImpl.getRootNode;","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport {calculateSplices} from './array-splice'\nimport * as utils from './utils'\nimport {tree} from './tree'\nimport Distributor from './distributor'\n\n/**\n  Implements a pared down version of ShadowDOM's scoping, which is easy to\n  polyfill across browsers.\n*/\nexport class ShadyRoot {\n\n  constructor(host) {\n    if (!host) {\n      throw 'Must provide a host';\n    }\n    // NOTE: this strange construction is necessary because\n    // DocumentFragment cannot be subclassed on older browsers.\n    let frag = document.createDocumentFragment();\n    frag.__proto__ = ShadyFragmentMixin;\n    frag._init(host);\n    return frag;\n  }\n\n}\n\nlet ShadyMixin = {\n\n  _init(host) {\n    // TODO(sorvell): set a fake local name so this element can be\n    // distinguished from a DocumentFragment when patching.\n    // FF doesn't allow this to be `localName`\n    this.__localName = 'ShadyRoot';\n    // root <=> host\n    host.shadyRoot = this;\n    this.host = host;\n    // logical dom setup\n    tree.Logical.saveChildNodes(host);\n    tree.Logical.saveChildNodes(this);\n    // state flags\n    this._clean = true;\n    this._hasRendered = false;\n    this._distributor = new Distributor(this);\n    this.update();\n  },\n\n  // async render the \"top\" distributor (this is all that is needed to\n  // distribute this host).\n  update() {\n    let distributionRoot = this._findDistributionRoot(this.host);\n    //console.log('update from', this.host, 'root', distributionRoot.host, distributionRoot._clean);\n    if (distributionRoot._clean) {\n      distributionRoot._clean = false;\n      enqueue(function() {\n        distributionRoot.render();\n      });\n    }\n  },\n\n  // returns the host that's the top of this host's distribution tree\n  _findDistributionRoot(element) {\n    let root = element.shadyRoot;\n    while (element && this._elementNeedsDistribution(element)) {\n      root = element.getRootNode();\n      element = root && root.host;\n    }\n    return root;\n  },\n\n  // Return true if a host's children includes\n  // an insertion point that selects selectively\n  _elementNeedsDistribution(element) {\n    let c$ = tree.Logical.getChildNodes(element);\n    for (let i=0, c; i < c$.length; i++) {\n      c = c$[i];\n      if (this._distributor.isInsertionPoint(c)) {\n        return element.getRootNode();\n      }\n    }\n  },\n\n  render() {\n    if (!this._clean) {\n      if (!this._skipUpdateInsertionPoints) {\n        this.updateInsertionPoints();\n      } else if (!this._hasRendered) {\n        this._insertionPoints = [];\n      }\n      this._skipUpdateInsertionPoints = false;\n      // TODO(sorvell): previous ShadyDom had a fast path here\n      // that would avoid distribution for initial render if\n      // no insertion points exist. We cannot currently do this because\n      // it relies on elements being in the physical shadowRoot element\n      // so that native methods will be used. The current append code\n      // simply provokes distribution in this case and does not put the\n      // nodes in the shadowRoot. This could be done but we'll need to\n      // consider if the special processing is worth the perf gain.\n      // if (!this._hasRendered && !this._insertionPoints.length) {\n      //   tree.Composed.clearChildNodes(this.host);\n      //   tree.Composed.appendChild(this.host, this);\n      // } else {\n      // logical\n      this.distribute();\n      // physical\n      this.compose();\n      this._clean = true;\n      this._hasRendered = true;\n    }\n  },\n\n  forceRender() {\n    this._clean = false;\n    this.render();\n  },\n\n  distribute() {\n    let dirtyRoots = this._distributor.distribute();\n    for (let i=0; i<dirtyRoots.length; i++) {\n      dirtyRoots[i].forceRender();\n    }\n  },\n\n  updateInsertionPoints() {\n    let i$ = this._insertionPoints = this._distributor.getInsertionPoints();\n    // ensure insertionPoints's and their parents have logical dom info.\n    // save logical tree info\n    // a. for shadyRoot\n    // b. for insertion points (fallback)\n    // c. for parents of insertion points\n    for (let i=0, c; i < i$.length; i++) {\n      c = i$[i];\n      tree.Logical.saveChildNodes(c);\n      tree.Logical.saveChildNodes(tree.Logical.getParentNode(c));\n    }\n  },\n\n  get _insertionPoints() {\n    if (!this.__insertionPoints) {\n      this.updateInsertionPoints();\n    }\n    return this.__insertionPoints || (this.__insertionPoints = []);\n  },\n\n  set _insertionPoints(insertionPoints) {\n    this.__insertionPoints = insertionPoints;\n  },\n\n  hasInsertionPoint() {\n    return this._distributor.hasInsertionPoint();\n  },\n\n  compose() {\n    // compose self\n    // note: it's important to mark this clean before distribution\n    // so that attachment that provokes additional distribution (e.g.\n    // adding something to your parentNode) works\n    this._composeTree();\n    // TODO(sorvell): notification.\n    // NOTE: send a signal to insertion points that we have distributed\n    // which informs effective children observers\n    //notifyContentObservers(this);\n    // TODO(sorvell): See fast paths here in Polymer v1\n    // (these seem unnecessary)\n    // NOTE: send a signal to any observers\n    // to report the initial set of childNodes\n  },\n\n  // Reify dom such that it is at its correct rendering position\n  // based on logical distribution.\n  _composeTree() {\n    this._updateChildNodes(this.host, this._composeNode(this.host));\n    let p$ = this._insertionPoints || [];\n    for (let i=0, l=p$.length, p, parent; (i<l) && (p=p$[i]); i++) {\n      parent = tree.Logical.getParentNode(p);\n      if ((parent !== this.host) && (parent !== this)) {\n        this._updateChildNodes(parent, this._composeNode(parent));\n      }\n    }\n  },\n\n  // Returns the list of nodes which should be rendered inside `node`.\n  _composeNode(node) {\n    let children = [];\n    let c$ = tree.Logical.getChildNodes(node.shadyRoot || node);\n    for (let i = 0; i < c$.length; i++) {\n      let child = c$[i];\n      if (this._distributor.isInsertionPoint(child)) {\n        let distributedNodes = child._distributedNodes ||\n          (child._distributedNodes = []);\n        for (let j = 0; j < distributedNodes.length; j++) {\n          let distributedNode = distributedNodes[j];\n          if (this.isFinalDestination(child, distributedNode)) {\n            children.push(distributedNode);\n          }\n        }\n      } else {\n        children.push(child);\n      }\n    }\n    return children;\n  },\n\n  isFinalDestination(insertionPoint, node) {\n    return this._distributor.isFinalDestination(\n      insertionPoint, node);\n  },\n\n  // Ensures that the rendered node list inside `container` is `children`.\n  _updateChildNodes(container, children) {\n    let composed = tree.Composed.getChildNodes(container);\n    let splices = calculateSplices(children, composed);\n    // process removals\n    for (let i=0, d=0, s; (i<splices.length) && (s=splices[i]); i++) {\n      for (let j=0, n; (j < s.removed.length) && (n=s.removed[j]); j++) {\n        // check if the node is still where we expect it is before trying\n        // to remove it; this can happen if we move a node and\n        // then schedule its previous host for distribution resulting in\n        // the node being removed here.\n        if (tree.Composed.getParentNode(n) === container) {\n          tree.Composed.removeChild(container, n);\n        }\n        composed.splice(s.index + d, 1);\n      }\n      d -= s.addedCount;\n    }\n    // process adds\n    for (let i=0, s, next; (i<splices.length) && (s=splices[i]); i++) { //eslint-disable-line no-redeclare\n      next = composed[s.index];\n      for (let j=s.index, n; j < s.index + s.addedCount; j++) {\n        n = children[j];\n        tree.Composed.insertBefore(container, n, next);\n        // TODO(sorvell): is this splice strictly needed?\n        composed.splice(j, 0, n);\n      }\n    }\n  },\n\n  // TODO(sorvell): util\n  getInsertionPointTag() {\n    return this._distributor.insertionPointTag;\n  }\n\n}\n\nlet ShadyFragmentMixin = Object.create(DocumentFragment.prototype);\nutils.extend(ShadyFragmentMixin, ShadyMixin);\n\n// TODO(sorvell): observation...\n// function notifyContentObservers(root) {\n//   for (let i=0, c; i < root._insertionPoints.length; i++) {\n//     c = root._insertionPoints[i];\n//     if (DomApi.hasApi(c)) {\n//       Polymer.dom(c).notifyObserver();\n//     }\n//   }\n// }\n\n// function notifyInitialDistribution(host) {\n//   if (DomApi.hasApi(host)) {\n//     Polymer.dom(host).notifyObserver();\n//   }\n// }\n\n// let needsUpgrade = window.CustomElements && !CustomElements.useNative;\n\n// function upgradeLogicalChildren(children) {\n//   if (needsUpgrade && children) {\n//     for (let i=0; i < children.length; i++) {\n//       CustomElements.upgrade(children[i]);\n//     }\n//   }\n// }\n\n// render enqueuer/flusher\nlet customElements = window.CustomElements;\nlet flushList = [];\nlet scheduled;\nexport function enqueue(callback) {\n  if (!scheduled) {\n    scheduled = true;\n    Promise.resolve().then(flush);\n  }\n  flushList.push(callback);\n}\n\nexport function flush() {\n  while (flushList.length) {\n    flushList.shift()();\n  }\n  if (customElements) {\n    customElements.takeRecords();\n  }\n  // continue flushing after elements are upgraded...\n  if (flushList.length) {\n    flush();\n  }\n}","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\n'use strict';\nimport {tree} from './tree'\nimport * as utils from './utils'\nimport {Mixins} from './element-mixin'\n\nexport let patchedCount = 0;\n\nlet log = false;\n\nlet patchImpl = {\n\n  canPatchNode: function(node) {\n    switch (node) {\n      case document.head:\n      case document.documentElement:\n        return false;\n      default:\n        return true;\n    }\n  },\n\n  hasPrototypeDescriptors: Boolean(Object.getOwnPropertyDescriptor(\n    window.Node.prototype, 'textContent')),\n\n  patch: function(node) {\n    patchedCount++;\n    log && window.console.warn('patch node', node);\n    if (this.hasPrototypeDescriptors) {\n      utils.patchPrototype(node, this.mixinForObject(node));\n    } else {\n      window.console.warn('Patching instance rather than prototype', node);\n      utils.extend(node, this.mixinForNode(node));\n    }\n  },\n\n  mixinForObject: function(obj) {\n    switch (obj.nodeType) {\n      case Node.ELEMENT_NODE:\n        return Mixins.Element;\n      case Node.DOCUMENT_FRAGMENT_NODE:\n        return Mixins.Fragment;\n      case Node.DOCUMENT_NODE:\n        return Mixins.Document;\n      case Node.TEXT_NODE:\n      case Node.COMMENT_NODE:\n        return Mixins.Node;\n    }\n  },\n\n  unpatch: function(obj) {\n    if (obj.__sourceProto) {\n      obj.__proto__ = obj.__sourceProto;\n\n    }\n    // TODO(sorvell): implement unpatching for non-proto patchable browsers\n  }\n\n};\n\nexport function patchNode(node) {\n  if (!utils.settings.inUse) {\n    return;\n  }\n  if (!isNodePatched(node) && patchImpl.canPatchNode(node)) {\n    tree.saveChildNodes(node);\n    patchImpl.patch(node);\n  }\n}\n\nexport function unpatchNode(node) {\n  patchImpl.unpatch(node);\n}\n\nexport function isNodePatched(node) {\n  return Boolean(node.__patched);\n}\n\n// TODO(sorvell): fake export\nutils.common.patchNode = patchNode;","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n'use strict';\n\nimport * as utils from './utils'\n\nlet origAddEventListener = Element.prototype.addEventListener;\nlet origRemoveEventListener = Element.prototype.removeEventListener;\n\n// https://github.com/w3c/webcomponents/issues/513#issuecomment-224183937\nlet alwaysComposed = {\n  blur: true,\n  focus: true,\n  focusin: true,\n  focusout: true,\n  click: true,\n  dblclick: true,\n  mousedown: true,\n  mouseenter: true,\n  mouseleave: true,\n  mousemove: true,\n  mouseout: true,\n  mouseover: true,\n  mouseup: true,\n  wheel: true,\n  beforeinput: true,\n  input: true,\n  keydown: true,\n  keyup: true,\n  compositionstart: true,\n  compositionupdate: true,\n  compositionend: true,\n  touchstart: true,\n  touchend: true,\n  touchmove: true,\n  touchcancel: true,\n  pointerover: true,\n  pointerenter: true,\n  pointerdown: true,\n  pointermove: true,\n  pointerup: true,\n  pointercancel: true,\n  pointerout: true,\n  pointerleave: true,\n  gotpointercapture: true,\n  lostpointercapture: true,\n  dragstart: true,\n  drag: true,\n  dragenter: true,\n  dragleave: true,\n  dragover: true,\n  drop: true,\n  dragend: true,\n  DOMActivate: true,\n  DOMFocusIn: true,\n  DOMFocusOut: true,\n  keypress: true\n};\n\nfunction pathComposer(startNode, composed) {\n  let composedPath = [];\n  let current = startNode;\n  let startRoot = startNode === window ? window : startNode.getRootNode();\n  while (current) {\n    composedPath.push(current);\n    if (current.assignedSlot) {\n      current = current.assignedSlot;\n    } else if (current.host && (composed || current !== startRoot)) {\n      current = current.host;\n    } else {\n      current = current.parentNode;\n    }\n  }\n  // event composedPath includes window when startNode's ownerRoot is document\n  if (composedPath[composedPath.length - 1] === document) {\n    composedPath.push(window);\n  }\n  return composedPath;\n}\n\nfunction retarget(refNode, path) {\n  if (!utils.isShadyRoot) {\n    return refNode;\n  }\n  // If ANCESTOR's root is not a shadow root or ANCESTOR's root is BASE's\n  // shadow-including inclusive ancestor, return ANCESTOR.\n  let refNodePath = pathComposer(refNode, true);\n  let p$ = path;\n  for (let i=0, ancestor, lastRoot, root, rootIdx; i < p$.length; i++) {\n    ancestor = p$[i];\n    root = ancestor === window ? window : ancestor.getRootNode();\n    if (root !== lastRoot) {\n      rootIdx = refNodePath.indexOf(root);\n      lastRoot = root;\n    }\n    if (!utils.isShadyRoot(root) || rootIdx > -1) {\n      return ancestor;\n    }\n  }\n}\n\nlet EventMixin = {\n\n  __patched: 'Event',\n\n  get composed() {\n    if (this.isTrusted && this.__composed === undefined) {\n      this.__composed = alwaysComposed[this.type];\n    }\n    return this.__composed || false;\n  },\n\n  composedPath() {\n    if (!this.__composedPath) {\n      this.__composedPath = pathComposer(this.__target, this.composed);\n    }\n    return this.__composedPath;\n  },\n\n  get target() {\n    return retarget(this.currentTarget, this.composedPath());\n  },\n\n  // http://w3c.github.io/webcomponents/spec/shadow/#event-relatedtarget-retargeting\n  get relatedTarget() {\n    if (!this.__relatedTarget) {\n      return null;\n    }\n    if (!this.__relatedTargetComposedPath) {\n      this.__relatedTargetComposedPath = pathComposer(this.__relatedTarget, true);\n    }\n    // find the deepest node in relatedTarget composed path that is in the same root with the currentTarget\n    return retarget(this.currentTarget, this.__relatedTargetComposedPath);\n  },\n  stopPropagation() {\n    Event.prototype.stopPropagation.call(this);\n    this.__propagationStopped = true;\n  },\n  stopImmediatePropagation() {\n    Event.prototype.stopImmediatePropagation.call(this);\n    this.__immediatePropagationStopped = true;\n    this.__propagationStopped = true;\n  }\n\n};\n\nfunction mixinComposedFlag(Base) {\n  // NOTE: avoiding use of `class` here so that transpiled output does not\n  // try to do `Base.call` with a dom construtor.\n  let klazz = function(type, options) {\n    let event = new Base(type, options);\n    event.__composed = options && Boolean(options.composed);\n    return event;\n  }\n  // put constructor properties on subclass\n  utils.mixin(klazz, Base);\n  klazz.prototype = Base.prototype;\n  return klazz;\n}\n\nlet nonBubblingEventsToRetarget = {\n  focus: true,\n  blur: true\n};\n\nfunction fireHandlers(event, node, phase) {\n  let hs = node.__handlers && node.__handlers[event.type] &&\n    node.__handlers[event.type][phase];\n  if (hs) {\n    for (let i = 0, fn; (fn = hs[i]); i++) {\n      fn.call(node, event);\n      if (event.__immediatePropagationStopped) {\n        return;\n      }\n    }\n  }\n}\n\nfunction retargetNonBubblingEvent(e) {\n  let path = e.composedPath();\n  let node;\n  // override `currentTarget` to let patched `target` calculate correctly\n  Object.defineProperty(event, 'currentTarget', {\n    get: function() {\n      return node;\n    },\n    configurable: true\n  });\n  for (let i = path.length - 1; i >= 0; i--) {\n    node = path[i];\n    fireHandlers(e, node, 'capture');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n  Object.defineProperty(e, 'eventPhase', {value: Event.BUBBLING_PHASE});\n  for (let i = 0; i < path.length; i++) {\n    node = path[i];\n    fireHandlers(e, node, 'bubble');\n    if (e.__propagationStopped) {\n      return;\n    }\n  }\n}\n\nfunction shouldCapture(optionsOrCapture) {\n  return Boolean(typeof optionsOrCapture === 'object' ?\n    optionsOrCapture.capture : optionsOrCapture);\n}\n\nexport function addEventListener(type, fn, optionsOrCapture) {\n  if (!fn) {\n    return;\n  }\n  // TODO: investigate if this is worth tracking, as it is only used for\n  // deciding if the `slotchanged` event should be fired\n  if (!this.__eventListenerCount) {\n    this.__eventListenerCount = 0;\n  }\n  this.__eventListenerCount++;\n  let wrappedFn = function(e) {\n    if (!e.__target) {\n      e.__target = e.target;\n      e.__relatedTarget = e.relatedTarget;\n      utils.patchPrototype(e, EventMixin);\n    }\n    // There are two critera that should stop events from firing on this node\n    // 1. the event is not composed and the current node is not in the same root as the target\n    // 2. when bubbling, if after retargeting, relatedTarget and target point to the same node\n    if (e.composed || e.composedPath().indexOf(this) > -1) {\n      if (e.eventPhase === Event.BUBBLING_PHASE) {\n        if (e.target === e.relatedTarget) {\n          e.stopImmediatePropagation();\n          return;\n        }\n      }\n      return fn(e);\n    }\n  };\n  fn.__eventWrapper = wrappedFn;\n  if (nonBubblingEventsToRetarget[type]) {\n    this.__handlers = this.__handlers || {};\n    this.__handlers[type] = this.__handlers[type] || {capture: [], bubble: []};\n    if (shouldCapture(optionsOrCapture)) {\n      this.__handlers[type].capture.push(wrappedFn);\n    } else {\n      this.__handlers[type].bubble.push(wrappedFn);\n    }\n  } else {\n    origAddEventListener.call(this, type, wrappedFn, optionsOrCapture);\n  }\n}\n\nexport function removeEventListener(type, fn, optionsOrCapture) {\n  if (!fn) {\n    return;\n  }\n  let wrapper = fn.__eventWrapper;\n  origRemoveEventListener.call(this, type, wrapper || fn, optionsOrCapture);\n  if (wrapper) {\n    fn.__eventWrapper = null;\n    this.__eventListenerCount--;\n    if (nonBubblingEventsToRetarget[type]) {\n      if (this.__handlers) {\n        if (this.__handlers[type]) {\n          let idx;\n          if (shouldCapture(optionsOrCapture)) {\n            idx = this.__handlers[type].capture.indexOf(wrapper);\n            if (idx > -1) {\n              this.__handlers[type].capture.splice(idx, 1);\n            }\n          } else {\n            idx = this.__handlers[type].bubble.indexOf(wrapper);\n            if (idx > -1) {\n              this.__handlers[type].bubble.splice(idx, 1);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfor (let ev in nonBubblingEventsToRetarget) {\n  window.addEventListener(ev, function(e) {\n    if (!e.__target) {\n      e.__target = e.target;\n      e.__relatedTarget = e.relatedTarget;\n      utils.patchPrototype(e, EventMixin);\n      retargetNonBubblingEvent(e);\n      e.stopImmediatePropagation();\n    }\n  }, true);\n}\n\nexport let OriginalEvent = Event;\nexport let PatchedEvent = mixinComposedFlag(Event);\nexport let PatchedCustomEvent = mixinComposedFlag(CustomEvent);\nexport let PatchedMouseEvent = mixinComposedFlag(MouseEvent);","/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n\n/**\n * Patches elements that interacts with ShadyDOM\n * such that tree traversal and mutation apis act like they would under\n * ShadowDOM.\n *\n * This import enables seemless interaction with ShadyDOM powered\n * custom elements, enabling better interoperation with 3rd party code,\n * libraries, and frameworks that use DOM tree manipulation apis.\n */\n\n'use strict';\nimport * as utils from './utils'\nimport {ShadyRoot, flush, enqueue} from './shady'\nimport * as patch from './patch'\nimport {getRootNode} from './element-mixin'\nimport * as events from './event-mixin'\n\nif (utils.settings.inUse) {\n\n  window.ShadyDOM = {\n    patch: patch.patchNode,\n    isPatched: patch.isNodePatched,\n    unpatch: patch.unpatchNode,\n    isShadyRoot: utils.isShadyRoot,\n    enqueue: enqueue,\n    flush: flush,\n    inUse: utils.settings.inUse\n  };\n\n  let createRootAndEnsurePatched = function(node) {\n    // TODO(sorvell): need to ensure ancestors are patched but this introduces\n    // a timing problem with gathering composed children.\n    // (1) currently the child list is crawled and patched when patching occurs\n    // (this needs to change)\n    // (2) we can only patch when an element has received its parsed children\n    // because we cannot detect them when inserted by parser.\n    // let ancestor = node;\n    // while (ancestor) {\n    //   patchNode(ancestor);\n    //   ancestor = ancestor.parentNode || ancestor.host;\n    // }\n    patch.patchNode(node);\n    let root = new ShadyRoot(node);\n    patch.patchNode(root);\n    return root;\n  }\n\n  Element.prototype.attachShadow = function() {\n    return createRootAndEnsurePatched(this);\n  }\n\n  Node.prototype.addEventListener = events.addEventListener;\n  Node.prototype.removeEventListener = events.removeEventListener;\n  Event = events.PatchedEvent;\n  CustomEvent = events.PatchedCustomEvent;\n  MouseEvent = events.PatchedMouseEvent;\n\n  Object.defineProperty(Node.prototype, 'isConnected', {\n    get() {\n      return document.contains(this);\n    },\n    configurable: true\n  });\n\n  Node.prototype.getRootNode = function(options) {\n    return getRootNode(this, options);\n  }\n\n  // TODO(sorvell): super experimental auto patching of document fragment\n  // via appendChild. This either needs to be expanded or contracted.\n  // DocumentFragment.prototype.appendChild = function(node) {\n  //   patchNode(this);\n  //   return this.appendChild(node);\n  // }\n\n}\n"],"sourceRoot":"/source/"}